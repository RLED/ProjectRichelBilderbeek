<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>std::strchr</title>
  <meta name="description" content="C++ std::strchr"/>
  <meta name="keywords" content="C++ std::strchr std STL strchr C find code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppStrchr.htm">std::strchr</a></h1>
<p>&nbsp;</p>
<p><a href="CppStrchr.htm">std::strchr</a> is an <a href="CppStl.htm">STL</a> <a href="CppFunction.htm">function</a> to find a character in a C-style string.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">cstring</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "ABXDEF";<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>C style way to find a character in a string<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppChar.htm">char</a></b> * <b><a href="CppConst.htm">const</a></b> c <a href="CppOperatorAssign.htm">=</a> <a href="CppStrchr.htm">std::strchr</a>(&amp;s[0],'X');<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*(c-1)<a href="CppOperatorEqual.htm">==</a>'B');<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*(c+1)<a href="CppOperatorEqual.htm">==</a>'D');<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Similar <a href="Cpp.htm">C++</a> style way to find a character in a string<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>::const_iterator i<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppFind.htm">std::find</a>(s.begin(),s.end(),'X');<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*(i-1)<a href="CppOperatorEqual.htm">==</a>'B');<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(*(i+1)<a href="CppOperatorEqual.htm">==</a>'D');<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
