 
<title>Link error: Oject file MyFile.OBJ is missing a section of class 2</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>C++ Link error: Oject file MyFile.OBJ is missing a section of class 2</o:Subject>
  <o:Author>Richel Bilderbeek</o:Author>
  <o:Keywords>C++ Richel Bilderbeek C++ Link error: Oject file MyFile.OBJ is missing a section of class 2</o:Keywords>
  <o:Description>From http://www.richelbilderbeek.nl</o:Description>
  <o:LastAuthor>Richel Bilderbeek</o:LastAuthor>
  <o:Revision>31</o:Revision>
  <o:TotalTime>183</o:TotalTime>
  <o:Created>2009-06-14T07:45:00Z</o:Created>
  <o:LastSaved>2009-06-14T08:34:00Z</o:LastSaved>
  <o:Pages>3</o:Pages>
  <o:Words>762</o:Words>
  <o:Characters>4348</o:Characters>
  <o:Category>C++ Richel Bilderbeek C++ Link error: Oject file MyFile.OBJ is missing a section of class 2</o:Category>
  <o:Manager>Richel Bilderbeek</o:Manager>
  <o:Company>Richel Bilderbeek</o:Company>
  <o:Lines>36</o:Lines>
  <o:Paragraphs>8</o:Paragraphs>
  <o:CharactersWithSpaces>5339</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
  
 
 
 
 
 
 
 /* List Definitions */
@list l0
	{mso-list-id:453331287;
	mso-list-type:hybrid;
	mso-list-template-ids:-1186579224 996939042 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
 
@list l1
	{mso-list-id:1150635838;
	mso-list-type:hybrid;
	mso-list-template-ids:-1679414426 996939042 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:*;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	mso-hansi-font-family:"Courier New";}
@list l2
	{mso-list-id:2019504653;
	mso-list-type:hybrid;
	mso-list-template-ids:-1780080174 -326961976 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l2:level1
	{mso-level-start-at:0;
	mso-level-text:"\[%1\]";
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.5in;}
@list l2:level2
	{mso-level-tab-stop:.75in;
	mso-level-number-position:left;
	margin-left:.75in;
	text-indent:-.25in;}
@list l2:level3
	{mso-level-tab-stop:1.25in;
	mso-level-number-position:left;
	margin-left:1.25in;
	text-indent:-.25in;}
@list l2:level4
	{mso-level-tab-stop:1.75in;
	mso-level-number-position:left;
	margin-left:1.75in;
	text-indent:-.25in;}
@list l2:level5
	{mso-level-tab-stop:2.25in;
	mso-level-number-position:left;
	margin-left:2.25in;
	text-indent:-.25in;}
@list l2:level6
	{mso-level-tab-stop:2.75in;
	mso-level-number-position:left;
	margin-left:2.75in;
	text-indent:-.25in;}
@list l2:level7
	{mso-level-tab-stop:3.25in;
	mso-level-number-position:left;
	margin-left:3.25in;
	text-indent:-.25in;}
@list l2:level8
	{mso-level-tab-stop:3.75in;
	mso-level-number-position:left;
	margin-left:3.75in;
	text-indent:-.25in;}
@list l2:level9
	{mso-level-tab-stop:4.25in;
	mso-level-number-position:left;
	margin-left:4.25in;
	text-indent:-.25in;}
 
-->
</style>
</head>

 

 

<p><a
href="index.htm"> Go back to
Richel Bilderbeek's homepage</a>.</p>

<p><a
href="Cpp.htm"> Go back to
Richel Bilderbeek's C++ page</a>.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h1>(  <a href="Cpp.htm">C++</a> ) <a
href="CppLinkErrorOjectFileIsMissingAsectionOfClass2.htm">Oject file MyFile.OBJ
is missing a section of class 2</a></h1>

<p>&nbsp;</p>

<p><a href="CppLinkError.htm">Link error</a>.</p>

<p>&nbsp;</p>

<p>IDE:   <a
href="CppBuilder.htm"> C++ Builder</a> 6.0</p>

<p>Project type: Console</p>

<p>&nbsp;</p>

<h2>Full error messages</h2>

<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p>[Linker Fatal Error] Fatal: Oject file MyFile.OBJ
is missing a section of class 2</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>

<h2>Cause</h2>

<p>&nbsp;</p>

<p>This error occurs when:</p>

  <li>
    One <a href="CppHeaderFile.htm">header file</a>
contains the <a href="CppDeclaration.htm">declaration</a> of a <a
href="CppGlobal.htm">global</a> <a href="CppVariable.htm">variable</a></p>

  <li>
    This <a href="CppGlobal.htm">global</a> <a
href="CppVariable.htm">variable</a> is not put into a <a href="CppNamespace.htm">namespace</a></p>

  <li>
    Two <a href="CppImplementationFile.htm">implementation
files (.cpp)</a> <a href="CppInclude.htm">#include</a> this <a
href="CppHeaderFile.htm">header file</a></p>

  <li>
    The project option 'Pre-compiled headers' is not set
to 'None'</p>

<p>&nbsp;</p>

<p><a href="CppLinkErrorOjectFileIsMissingAsectionOfClass2.zip">Download a
C++ Builder project with this error</a>.</p>

<p>&nbsp;</p>

<h2>Solutions</h2>

<p>&nbsp;</p>

<p>There are more.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h3> Avoid using globals (recommended)</h3>

<p>&nbsp;</p>

<p>Restructure the program so you will not need to use globals. If this
fails, use the <a href="CppSingletonDesignPattern.htm">Singleton</a> <a
href="CppDesignPattern.htm">Design Pattern</a>.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h3> Turn of pre-compiled headers (not
recommended)</h3>

<p>&nbsp;</p>

<p>Go to 'Project | Options | Compiler | Pre-compiled headers' and select 'None'.
Your error message will change to the following warning:</p>

<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p>[Linker Warning] Public symbol '_x'
defined in both module MyUnit1.OBJ and MyUnit2.OBJ</p>

<p>[Linker Warning] Public symbol '_x'
defined in both module MyUnit1.OBJ and MyUnit3.OBJ</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>

<p>This solution is not recommended, because one should   using <a
href="CppGlobal.htm">global</a> data <span style='mso-field-code:"REF _Ref229371897 \\r \\h"'>[0]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200320039003300370031003800390037000000</w:data>
</xml><![endif]--> <span style='mso-field-code:"REF _Ref229371899 \\r \\h"'>[1]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200320039003300370031003800390039000000</w:data>
</xml><![endif]--> <span style='mso-field-code:"REF _Ref232738599 \\r \\h"'>[2]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200330032003700330038003500390039000000</w:data>
</xml><![endif]--> <span style='mso-field-code:"REF _Ref232738600 \\r \\h"'>[3]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200330032003700330038003600300030000000</w:data>
</xml><![endif]--> <span style='mso-field-code:"REF _Ref232738601 \\r \\h"'>[4]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200330032003700330038003600300031000000</w:data>
</xml><![endif]--> , especially in the global namespace <span
style='mso-field-code:"REF _Ref232738731 \\r \\h"'>[5]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200330032003700330038003700330031000000</w:data>
</xml><![endif]--> .</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h3> Put the global variable in a
namespace (not recommended)</h3>

<p>&nbsp;</p>

<p>Suppose you have <a href="CppDeclaration.htm">declared</a> an <a
href="CppInt.htm">integer</a> called 'x' in a <a href="CppHeaderFile.htm">header
file (.h)</a> like below:</p>

<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p><b> <a href="CppInt.htm">int</a> </b>  x;</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>

<p>Put it into a namespace called 'global' like below:</p>

<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p><b> <a href="CppNamespace.htm">namespace</a> </b>  global</p>

<p>{</p>

<p> 
 <b><a href="CppInt.htm">int</a></b> x;</p>

<p>}</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>

<p>Your error message will change to the following warning:</p>

<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p>[Linker Warning] Public symbol 'global::x'
defined in both module MyUnit1.OBJ and MyUnit2.OBJ</p>

<p>[Linker Warning] Public symbol 'global::x'
defined in both module MyUnit1.OBJ and MyUnit3.OBJ</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>

<p>This solution is not recommended, because one should   using <a
href="CppGlobal.htm">global</a> data <span style='mso-field-code:"REF _Ref229371897 \\r \\h"'>[0]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200320039003300370031003800390037000000</w:data>
</xml><![endif]--> <span style='mso-field-code:"REF _Ref229371899 \\r \\h"'>[1]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200320039003300370031003800390039000000</w:data>
</xml><![endif]--> <span style='mso-field-code:"REF _Ref232738599 \\r \\h"'>[2]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200330032003700330038003500390039000000</w:data>
</xml><![endif]--> <span style='mso-field-code:"REF _Ref232738600 \\r \\h"'>[3]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200330032003700330038003600300030000000</w:data>
</xml><![endif]--> <span style='mso-field-code:"REF _Ref232738601 \\r \\h"'>[4]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200330032003700330038003600300031000000</w:data>
</xml><![endif]--> .</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h3> Make the global variable static (not
recommended)</h3>

<p>&nbsp;</p>

<p>Suppose you have <a href="CppDeclaration.htm">declared</a> an <a
href="CppInt.htm">integer</a> called 'x' in a <a href="CppHeaderFile.htm">header
file (.h)</a> like below:</p>

<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p><b> <a href="CppInt.htm">int</a> </b>  x;</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>

<p>Make it <a href="CppStatic.htm">static</a> like below:</p>

<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p><b> <a href="CppStatic.htm">static</a> </b>  <b><a
href="CppInt.htm">int</a></b> x;</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>

<p>This solution is not recommended, because one should   using <a
href="CppGlobal.htm">global</a> data <span style='mso-field-code:"REF _Ref229371897 \\r \\h"'>[0]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200320039003300370031003800390037000000</w:data>
</xml><![endif]--> <span style='mso-field-code:"REF _Ref229371899 \\r \\h"'>[1]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200320039003300370031003800390039000000</w:data>
</xml><![endif]--> <span style='mso-field-code:"REF _Ref232738599 \\r \\h"'>[2]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200330032003700330038003500390039000000</w:data>
</xml><![endif]--> <span style='mso-field-code:"REF _Ref232738600 \\r \\h"'>[3]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200330032003700330038003600300030000000</w:data>
</xml><![endif]--> <span style='mso-field-code:"REF _Ref232738601 \\r \\h"'>[4]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200330032003700330038003600300031000000</w:data>
</xml><![endif]--> , especially in the global namespace <span
style='mso-field-code:"REF _Ref232738731 \\r \\h"'>[5]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200330032003700330038003700330031000000</w:data>
</xml><![endif]--> .</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h2><a href="CppReferences.htm"> References</a></h2>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;mso-list:l2 level1 lfo3;
tab-stops:list .5in'><a name="_Ref229371897">  [0] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</a><a href="CppHerbSutter.htm"><span style='mso-bookmark:
_Ref229371897'> Herb
Sutter  <span style='mso-bookmark:_Ref229371897'></a><span
style='mso-bookmark:_Ref229371897'> , <a href="CppAndreiAlexandrescu.htm"><span
style='mso-bookmark:_Ref229371897'> Andrei Alexandrescu  <span style='mso-bookmark:_Ref229371897'></a><span
style='mso-bookmark:_Ref229371897'> . C++ coding standards: 101 rules, guidelines, and best
practices. ISBN: 0-32-111358-6. Item 10: 'Minimize global and shared data'.</p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;mso-list:l2 level1 lfo3;
tab-stops:list .5in'><a name="_Ref229371899">  [1] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</a><a href="CppHerbSutter.htm"><span style='mso-bookmark:
_Ref229371899'> Herb
Sutter  <span style='mso-bookmark:_Ref229371899'></a><span
style='mso-bookmark:_Ref229371899'> , <a href="CppAndreiAlexandrescu.htm"><span
style='mso-bookmark:_Ref229371899'> Andrei Alexandrescu  <span style='mso-bookmark:_Ref229371899'></a><span
style='mso-bookmark:_Ref229371899'> . C++ coding standards: 101 rules, guidelines, and best
practices. ISBN: 0-32-111358-6. Item 18: 'Declare variables as locally as
possible'.</p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;mso-list:l2 level1 lfo3;
tab-stops:list .5in'><a name="_Ref232738599">  [2] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</a><a href="CppBjarneStroustrup.htm"><span
style='mso-bookmark:_Ref232738599'> Bjarne Stroustrup  <span style='mso-bookmark:_Ref232738599'></a><span
style='mso-bookmark:_Ref232738599'> . The C++ Programming Language (3rd edition).ISBN:
0-201-88954-4. Chapter 1.8.2.a: 'Don't use global data (use members)'</p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;mso-list:l2 level1 lfo3;
tab-stops:list .5in'><a name="_Ref232738600">  [3] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</a><a href="CppJarrodHollingworth.htm"><span
style='mso-bookmark:_Ref232738600'> Jarrod Hollingworth  <span style='mso-bookmark:_Ref232738600'></a><span
style='mso-bookmark:_Ref232738600'> , Bob Swart, Mark Cashman, Paul Gustavson. Sams C++ Builder 6
Developer's Guide. ISBN: 0-672-32480-6. Chapter 3: 'Avoid using global
variables'</p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;mso-list:l2 level1 lfo3;
tab-stops:list .5in'><a name="_Ref232738601">  [4] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</a><a href="CppJesseLiberty.htm"><span
style='mso-bookmark:_Ref232738601'> Jesse Liberty  <span style='mso-bookmark:_Ref232738601'></a><span
style='mso-bookmark:_Ref232738601'> . Sams teach yourself C++ in 24 hours. ISBN: 0-672-32224-2. Hour
5, paragraph 'Global variables': 'In C++, global variables are avoided because
they can create very confusing code that is hard to maintain.'</p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;mso-list:l2 level1 lfo3;
tab-stops:list .5in'><a name="_Ref232738731">  [5] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</a><a href="CppBjarneStroustrup.htm"><span
style='mso-bookmark:_Ref232738731'> Bjarne Stroustrup  <span style='mso-bookmark:_Ref232738731'></a><span
style='mso-bookmark:_Ref232738731'> . The C++ Programming Language (3rd edition).ISBN:
0-201-88954-4. Chapter C.14.15: 'Don't pollute the global namespace'.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><a
href="Cpp.htm"> Go back to
Richel Bilderbeek's C++ page</a>.</p>

<p><a
href="index.htm"> Go back to
Richel Bilderbeek's homepage</a>.</p>

<p>&nbsp;</p>

</div>

</body>

</html>
