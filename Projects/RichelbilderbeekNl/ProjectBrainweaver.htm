<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Brainweaver</title>
  <meta name="description" content="C++ Brainweaver"/>
  <meta name="keywords" content="C++ Brainweaver "/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ProjectBrainweaver.htm">Brainweaver</a></h1>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 13.10 (saucy)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> unknown</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
  <li><img src="PicGui.png" alt="GUI"/> <a href="CppGuiApplication.htm">GUI application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="Cpp11.htm">C++11</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.8.1</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.1.1 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.8.1</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ProjectBrainweaver/ProjectBrainweaverAssessor.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverAssessor.pro" border = "1"><tr><td><code>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; += core gui<br/>
greaterThan(QT_MAJOR_VERSION, 4): QT += <a href="CppWidget.htm">widget</a>s printsupport<br/>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
<br/>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFileIo.htm">CppFileIo</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">about</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>/<a href="CppQtArrowItem.htm">qtarrowitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>/<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">qtkeyboardfriendlygraphicsview</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">qtlabeledquadbezierarrowitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>/<a href="CppQtPathArrowItem.htm">qtpatharrowitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>/<a href="CppQtQuadBezierArrowItem.htm">qtquadbezierarrowitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>/<a href="CppQtRoundedTextRectItem.htm">qtroundedtextrectitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcluster.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbclusterfactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcompetency.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconcept.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconceptfactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconceptmap.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconceptmapfactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbedge.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbedgefactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexample.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexamplefactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexamples.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexamplesfactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbfile.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbfilefactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbhelper.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbmenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbnode.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbnodefactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppMain.htm">main</a>_assessor.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdb<a href="CppAbout.htm">about</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbassessormenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbbrushfactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcenternodeitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcluster<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcompetency.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconcepteditdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapdisplay<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmap<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcreateassessmentcompletedialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcreateassessmentmenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcreateassessmentpartialdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbdisplayconceptitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbedgeitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbeditconceptitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbexamplesitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbitemhighlighter.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbnewarrow.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbnodeitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbprintratingdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateconceptdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateconceptitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateexamplesdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbratingdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbtoolsitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbratedconcept<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbdisplay.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbrating.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateconcepttallydialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcenternodefactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcenternode.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbfi<a href="CppLed.htm">led</a>ialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test_qtpvdbconceptmap<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test_qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test_qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test_qtpvdbconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test_pvdbconceptmap.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test_pvdbconcept.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test_pvdbcluster.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbprintconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/xml.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFileIo.htm">CppFileIo</a>/<a href="CppFileIo.htm">fileio</a>.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">about</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>/<a href="CppFuzzy_equal_to.htm">fuzzy_equal_to</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>/<a href="CppQtArrowItem.htm">qtarrowitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>/<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">qtkeyboardfriendlygraphicsview</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">qtlabeledquadbezierarrowitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>/<a href="CppQtPathArrowItem.htm">qtpatharrowitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>/<a href="CppQtQuadBezierArrowItem.htm">qtquadbezierarrowitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>/<a href="CppQtRoundedTextRectItem.htm">qtroundedtextrectitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>/<a href="CppQtScopedDisable.htm">qtscopeddisable</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/<a href="CppTrace.htm">trace</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbclusterfactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcluster.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcompetency.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconceptfactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconcept.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconceptmapfactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconceptmap.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbedgefactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbedge.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexamplefactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexample.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexamplesfactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexamples.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbfilefactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbfile.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbfwd.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbhelper.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbmenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbnodefactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbnode.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdb<a href="CppAbout.htm">about</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbassessormenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbbrushfactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcenternodeitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcluster<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcompetency.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconcepteditdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapdisplay<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmap<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcreateassessmentcompletedialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcreateassessmentmenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcreateassessmentpartialdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbdisplayconceptitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbedgeitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbeditconceptitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbexamplesitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbitemhighlighter.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbnewarrow.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbnodeitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbprintratingdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateconceptdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateconceptitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateconceptmapdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateexamplesdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbratingdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbtoolsitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbratedconcept<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbdisplay.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbrating.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateconcepttallydialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcenternodefactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcenternode.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbfi<a href="CppLed.htm">led</a>ialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbprintconceptmapdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/xml.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFileIo.htm">CppFileIo</a>/<a href="CppFileIo.htm">fileio</a>.h<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a>&nbsp;&nbsp;&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbassessormenudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconcepteditdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcreateassessmentcompletedialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcreateassessmentmenudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcreateassessmentpartialdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbprintratingdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateconceptdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateconceptmapdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateexamplesdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbratingdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbratedconcept<a href="CppWidget.htm">widget</a>.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateconcepttallydialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbprintconceptmapdialog.ui<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppLazy_init.htm">CppLazy_init</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;crosscompiletowindows.sh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;doxygen_config.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFileIo.htm">CppFileIo</a>/Licence.txt<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="ProjectBrainweaver.htm">Brainweaver</a>.qrc<br/>
<br/>
<br/>
#<br/>
#<br/>
# Type of compile<br/>
#<br/>
#<br/>
<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>(release, debug|release) {<br/>
&nbsp;&nbsp;<a href="CppQmakeDefines.htm">DEFINES</a> += NDEBUG N<a href="CppTRACE.htm">TRACE</a>_BILDERBIKKEL<br/>
}<br/>
<br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp11.htm">c++11</a> <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a> <a href="CppWeffcpp.htm">-Weffc++</a><br/>
<br/>
unix {<br/>
&nbsp;&nbsp;<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += <a href="CppWerror.htm">-Werror</a><br/>
}<br/>
<br/>
#<br/>
#<br/>
# Boost<br/>
#<br/>
#<br/>
<br/>
win32 {<br/>
&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ProjectBrainweaver/ProjectBrainweaverDeveloper.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverDeveloper.pro" border = "1"><tr><td><code>
#Don't enable Effective C++ warnings when using Qwt<br/>
include(../../<a href="CppDesktopApplication.htm">DesktopApplication</a>.pri)<br/>
include(../../<a href="CppLibrary.htm">Libraries</a>/Boost.pri)<br/>
<br/>
greaterThan(QT_MAJOR_VERSION, 4): QT += printsupport<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">CppAbout</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFileIo.htm">CppFileIo</a>/<a href="CppFileIo.htm">CppFileIo</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppHelp.htm">CppHelp</a>/<a href="CppHelp.htm">CppHelp</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppMenuDialog.htm">CppMenuDialog</a>/<a href="CppMenuDialog.htm">CppMenuDialog</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>/<a href="CppRichelBilderbeekProgram.htm">CppRichelBilderbeekProgram</a>.pri)<br/>
<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/<a href="CppTrace.htm">CppTrace</a>.pri)<br/>
include(../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/<a href="CppXml.htm">CppXml</a>.pri)<br/>
<br/>
#Specific<br/>
include(../../<a href="CppClass.htm">Classes</a>/CppConceptMap/CppConceptMap.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/ToolStyleSheetSetter/ToolStyleSheetSetterDesktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtArrowItems.htm">ToolTestQtArrowItems</a>/<a href="ToolTestQtArrowItems.htm">ToolTestQtArrowItems</a>Desktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtRoundedEditRectItem.htm">ToolTestQtRoundedEditRectItem</a>/<a href="ToolTestQtRoundedEditRectItem.htm">ToolTestQtRoundedEditRectItem</a>Desktop.pri)<br/>
include(../../<a href="Tools.htm">Tools</a>/<a href="ToolTestQtRoundedTextRectItem.htm">ToolTestQtRoundedTextRectItem</a>/<a href="ToolTestQtRoundedTextRectItem.htm">ToolTestQtRoundedTextRectItem</a>Desktop.pri)<br/>
<br/>
#Desktop<br/>
include(<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>Desktop.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += qt<a href="CppMain.htm">main</a>_developer.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ./ProjectBrainweaver/ProjectBrainweaverStudent.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverStudent.pro" border = "1"><tr><td><code>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; += core gui<br/>
greaterThan(QT_MAJOR_VERSION, 4): QT += <a href="CppWidget.htm">widget</a>s printsupport<br/>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
<br/>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFileIo.htm">CppFileIo</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a> \<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">about</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>/<a href="CppQtArrowItem.htm">qtarrowitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>/<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">qtkeyboardfriendlygraphicsview</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">qtlabeledquadbezierarrowitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>/<a href="CppQtPathArrowItem.htm">qtpatharrowitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>/<a href="CppQtQuadBezierArrowItem.htm">qtquadbezierarrowitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>/<a href="CppQtRoundedTextRectItem.htm">qtroundedtextrectitem</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcluster.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbclusterfactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcompetency.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconcept.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconceptfactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconceptmap.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconceptmapfactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbedge.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbedgefactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexample.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexamplefactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexamples.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexamplesfactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbfile.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbfilefactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbhelper.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbmenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbnode.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbnodefactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppMain.htm">main</a>_student.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdb<a href="CppAbout.htm">about</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbbrushfactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcenternodeitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbclusterdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcluster<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcompetency.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconcepteditdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapdisplay<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmap<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbdisplayconceptitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbedgeitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbeditconceptitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbexamplesitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbitemhighlighter.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbnewarrow.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbnodeitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbprintconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateconceptitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbstudentmenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbstudentstartcompletedialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbtoolsitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbratedconcept<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcenternodefactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcenternode.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbfi<a href="CppLed.htm">led</a>ialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test_qtpvdbconceptmap<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test_qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test_qtpvdbconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test_pvdbconceptmap.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test_pvdbconcept.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;test_pvdbcluster.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFileIo.htm">CppFileIo</a>/<a href="CppFileIo.htm">fileio</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/xml.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">about</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>/<a href="CppFuzzy_equal_to.htm">fuzzy_equal_to</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>/<a href="CppQtArrowItem.htm">qtarrowitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>/<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">qtkeyboardfriendlygraphicsview</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">qtlabeledquadbezierarrowitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>/<a href="CppQtPathArrowItem.htm">qtpatharrowitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>/<a href="CppQtQuadBezierArrowItem.htm">qtquadbezierarrowitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/<a href="CppQtRoundedRectItem.htm">qtroundedrectitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>/<a href="CppQtRoundedTextRectItem.htm">qtroundedtextrectitem</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>/<a href="CppQtScopedDisable.htm">qtscopeddisable</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/<a href="CppTrace.htm">trace</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbclusterfactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcluster.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcompetency.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconceptfactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconcept.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconceptmapfactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbconceptmap.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbedgefactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbedge.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexamplefactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexample.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexamplesfactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbexamples.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbfilefactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbfile.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbfwd.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbhelper.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbmenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbnodefactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbnode.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdb<a href="CppAbout.htm">about</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbbrushfactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcenternodeitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbclusterdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcluster<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbcompetency.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconcepteditdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapdisplay<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmap<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbdisplayconceptitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbedgeitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbeditconceptitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbexamplesitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbitemhighlighter.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbnewarrow.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbnodeitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbprintconceptmapdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbrateconceptitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbstudentmenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbstudentstartcompletedialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbtoolsitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbratedconcept<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcenternodefactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdbcenternode.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbfi<a href="CppLed.htm">led</a>ialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFileIo.htm">CppFileIo</a>/<a href="CppFileIo.htm">fileio</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/xml.h<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a>&nbsp;&nbsp;&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbclusterdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconcepteditdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbconceptmapdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbprintconceptmapdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbstudentmenudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbstudentstartcompletedialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtpvdbratedconcept<a href="CppWidget.htm">widget</a>.ui<br/>
<br/>
<a href="CppQmakeOther_files.htm">OTHER_FILES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFuzzy_equal_to.htm">CppFuzzy_equal_to</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppLazy_init.htm">CppLazy_init</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtArrowItem.htm">CppQtArrowItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtKeyboardFriendlyGraphicsView.htm">CppQtKeyboardFriendlyGraphicsView</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtLabeledQuadBezierArrowItem.htm">CppQtLabeledQuadBezierArrowItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtPathArrowItem.htm">CppQtPathArrowItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtQuadBezierArrowItem.htm">CppQtQuadBezierArrowItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedEditRectItem.htm">CppQtRoundedEditRectItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedRectItem.htm">CppQtRoundedRectItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtRoundedTextRectItem.htm">CppQtRoundedTextRectItem</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtScopedDisable.htm">CppQtScopedDisable</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;crosscompiletowindows.sh \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;doxygen_config.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppFileIo.htm">CppFileIo</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppXml.htm">CppXml</a>/Licence.txt<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="ProjectBrainweaver.htm">Brainweaver</a>.qrc<br/>
<br/>
#<br/>
#<br/>
# Type of compile<br/>
#<br/>
#<br/>
<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>(release, debug|release) {<br/>
&nbsp;&nbsp;<a href="CppQmakeDefines.htm">DEFINES</a> += NDEBUG N<a href="CppTRACE.htm">TRACE</a>_BILDERBIKKEL<br/>
}<br/>
<br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp11.htm">c++11</a> <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a> <a href="CppWeffcpp.htm">-Weffc++</a><br/>
<br/>
unix {<br/>
&nbsp;&nbsp;<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += <a href="CppWerror.htm">-Werror</a><br/>
}<br/>
<br/>
#<br/>
#<br/>
# Boost<br/>
#<br/>
#<br/>
<br/>
win32 {<br/>
&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverConsole.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverConsole.pri" border = "1"><tr><td><code>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a><br/>
<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbcluster.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbclusterfactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbfile.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbfilefactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbhelper.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbmenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbrating.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/test_pvdbcluster.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbcluster.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbclusterfactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbfile.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbfilefactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbfwd.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbhelper.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbmenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/pvdbrating.h<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverDesktop.pri</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverDesktop.pri" border = "1"><tr><td><code>
include(../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>Console.pri)<br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdb<a href="CppAbout.htm">about</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbassessormenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbbrushfactory.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcenternodeitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbclusterdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcluster<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcompetency.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconcepteditdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmapdisplay<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmapitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmap<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentcompletedialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentmenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentpartialdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbdisplayconceptitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbdisplay.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbedgeitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbeditconceptitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbexamplesitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbitemhighlighter.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbmenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbnewarrow.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbnodeitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdboverviewdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdboverview<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbprintconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbprintratingdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconceptdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconceptitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbratedconcept<a href="CppWidget.htm">widget</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateexamplesdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbratingdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbstudentmenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbstudentstartcompletedialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestconceptitemdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestedgeitemdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestnodeitemdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtoolsitem.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbviewfilesdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbviewtestsdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestcreatesubconceptmapdialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconcepttallydialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbfi<a href="CppLed.htm">led</a>ialog.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdb<a href="CppAbout.htm">about</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbassessormenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbbrushfactory.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcenternodeitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbclusterdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcluster<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcompetency.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconcepteditdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmapdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmapdisplay<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmapitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmap<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentcompletedialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentmenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentpartialdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbdisplay.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbdisplayconceptitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbedgeitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbeditconceptitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbexamplesitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbitemhighlighter.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbmenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbnewarrow.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbnodeitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdboverviewdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdboverview<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbprintconceptmapdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbprintratingdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconceptdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconceptitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconceptmapdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconcepttallydialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbratedconcept<a href="CppWidget.htm">widget</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateexamplesdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbratingdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbstudentmenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbstudentstartcompletedialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestconceptitemdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestcreatesubconceptmapdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestedgeitemdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestnodeitemdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtoolsitem.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbviewfilesdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbviewtestsdialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbfi<a href="CppLed.htm">led</a>ialog.h<br/>
<br/>
<a href="CppFORMS.htm">FORMS</a>&nbsp;&nbsp;&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbassessormenudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbclusterdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconcepteditdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbconceptmapdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentcompletedialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentmenudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbcreateassessmentpartialdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbmenudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbprintconceptmapdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbprintratingdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconceptdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconceptmapdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbratedconcept<a href="CppWidget.htm">widget</a>.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateexamplesdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbratingdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbstudentmenudialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbstudentstartcompletedialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestconceptitemdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestedgeitemdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestnodeitemdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbviewfilesdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbviewtestsdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbtestcreatesubconceptmapdialog.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/qtpvdbrateconcepttallydialog.ui<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="Projects.htm">Projects</a>/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>/<a href="ProjectBrainweaver.htm">Brainweaver</a>.qrc<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbcluster.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbcluster.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> PVDBCLUSTER_H<br/>
<a href="CppDefine.htm">#define</a> PVDBCLUSTER_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppMapH.htm">map</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ClusterFactory;<br/>
<br/>
<a href="CppComment.htm">///</a>The data behind a <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a><br/>
<b><a href="CppStruct.htm">struct</a></b> Cluster<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppAdd.htm">Add</a> a Concept to the Cluster<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> <a href="CppAdd.htm">Add</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/See <b><a href="CppIf.htm">if</a></b> the cluster is empty<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> Empty() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a Cluster from an <a href="CppXml.htm">XML</a> <a href="CppString.htm">std::string</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; From<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the list of Concepts<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt; Get() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt;&amp; Get() { <b><a href="CppReturn.htm">return</a></b> m_v; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the concepts<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetConcepts(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt;&amp; concepts);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a Cluster from an <a href="CppXml.htm">XML</a> <a href="CppString.htm">std::string</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> To<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Cluster&gt;&amp; c);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/A Cluster is a list of Concepts. The Concepts contain examples.<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt; m_v;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Block <a href="CppConstructor.htm">constructor</a>, except <b><a href="CppFor.htm">for</a></b> ClusterFactory<br/>
&nbsp;&nbsp;<b><a href="CppFriend.htm">friend</a></b> ClusterFactory;<br/>
&nbsp;&nbsp;Cluster(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt;&amp; v);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Block <a href="CppDestructor.htm">destructor</a>, except <b><a href="CppFor.htm">for</a></b> the <b><a href="CppFriend.htm">friend</a></b> <a href="CppChecked_delete.htm">boost::checked_delete</a><br/>
&nbsp;&nbsp;~Cluster() {}<br/>
&nbsp;&nbsp;<b><a href="CppFriend.htm">friend</a></b> <b><a href="CppVoid.htm">void</a></b> <a href="CppChecked_delete.htm">boost::checked_delete</a>&lt;&gt;(Cluster* x);<br/>
};<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> IsEqual(<b><a href="CppConst.htm">const</a></b> pvdb::Cluster&amp; lhs, <b><a href="CppConst.htm">const</a></b> pvdb::Cluster&amp; rhs);<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDBCLUSTER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbcluster.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbcluster.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSstreamH.htm">sstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQRegExp.htm">QRegExp</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexample.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "xml.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::Cluster::Cluster(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt;&amp; v)<br/>
&nbsp;&nbsp;: m_v(v)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount_if.htm">std::count_if</a>(v.begin(),v.end(),[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; p) { <b><a href="CppReturn.htm">return</a></b> !p; } ) <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::<a href="CppAdd.htm">Add</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &amp; concept)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingComplexity() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingComplexity() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;m_v.push_back(concept);<br/>
<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::Empty() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_v.empty();<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::From<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> &amp;s)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.size() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 19);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.substr(0,9) <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>("&lt;cluster&gt;"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.substr(s.size() <a href="CppOperatorMinus.htm">-</a> 10,10) <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>("&lt;/cluster&gt;"));<br/>
<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt; concepts;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain the &lt;cluster&gt; ... &lt;/cluster&gt; string<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;cluster&gt;.*&lt;/cluster&gt;)"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Strip the &lt;cluster&gt; tags<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> cluster_str <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain the &lt;concept&gt; ... &lt;/concept&gt; strings<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; w<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;concept&gt;.*&lt;/concept&gt;)"));<br/>
&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(w.begin(),w.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[&amp;concepts](<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> Concept::From<a href="CppXml.htm">Xml</a>(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concepts.push_back(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster(<b><a href="CppNew.htm">new</a></b> Cluster(concepts));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> cluster;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt; <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::Get() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt;(m_v.begin(),m_v.end());<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::To<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Cluster&gt;&amp; cluster)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;cluster&gt;";<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt;&amp; v <a href="CppOperatorAssign.htm">=</a> cluster-&gt;Get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(), v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&amp;s](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; concept)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> Concept::To<a href="CppXml.htm">Xml</a>(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/cluster&gt;";<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> r <a href="CppOperatorAssign.htm">=</a> s.str();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.size() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 19);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.substr(0,9) <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>("&lt;cluster&gt;"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.substr(r.size() <a href="CppOperatorMinus.htm">-</a> 10,10) <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>("&lt;/cluster&gt;"));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> r;<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::IsEqual(<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster&amp; rhs)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt; lhs_concepts <a href="CppOperatorAssign.htm">=</a> lhs.Get(); <a href="CppComment.htm">//</a>For cross-<a href="CppCompiler.htm">compiler</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt; rhs_concepts <a href="CppOperatorAssign.htm">=</a> rhs.Get();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (lhs_concepts.size() <a href="CppOperatorNotEqual.htm">!=</a> rhs_concepts.size()) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt; <b><a href="CppInt.htm">int</a></b>&gt;(lhs_concepts.size());<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(lhs_concepts[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rhs_concepts[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!IsEqual(*lhs_concepts[i],*rhs_concepts[i])) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::SetConcepts(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt;&amp; concepts)<br/>
{<br/>
&nbsp;&nbsp;m_v <a href="CppOperatorAssign.htm">=</a> concepts;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount_if.htm">std::count_if</a>(m_v.begin(),m_v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept) { <b><a href="CppReturn.htm">return</a></b> !concept; } )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> 0);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbclusterfactory.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbclusterfactory.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> PVDBCLUSTERFACTORY_H<br/>
<a href="CppDefine.htm">#define</a> PVDBCLUSTERFACTORY_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>Factory <b><a href="CppFor.htm">for</a></b> creating Cluster <a href="CppInstance.htm">instances</a><br/>
<b><a href="CppStruct.htm">struct</a></b> ClusterFactory<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; Create(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt;&amp; v);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/DeepCopy is only used <b><a href="CppFor.htm">for</a></b> <a href="CppDebug.htm">debugging</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; DeepCopy(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Cluster&gt; cluster);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a single test, a combination of testing node indices<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; GetTest(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;&amp; test_node_indices);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; &gt; GetTests();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDBCLUSTERFACTORY_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbclusterfactory.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbclusterfactory.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::Create(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount_if.htm">std::count_if</a>(v.begin(),v.end(),[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; p) { <b><a href="CppReturn.htm">return</a></b> !p; } ) <a href="CppOperatorEqual.htm">==</a> 0); <a href="CppComment.htm">//</a>FIX 2012-01-02<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<a href="CppAll_of.htm">std::all_of</a>(v.begin(),v.end(),[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; p) { <b><a href="CppReturn.htm">return</a></b> p; } ));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p(<b><a href="CppNew.htm">new</a></b> pvdb::Cluster(v));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::DeepCopy(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Cluster&gt; cluster)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> cluster-&gt;Get();<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt; w;<br/>
&nbsp;&nbsp;<a href="CppTransform.htm">std::transform</a>(v.begin(),v.end(),<a href="CppBack_inserter.htm">std::back_inserter</a>(w),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; c)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; d <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::DeepCopy(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c <a href="CppOperatorNotEqual.htm">!=</a> d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*c,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p(<b><a href="CppNew.htm">new</a></b> Cluster(w));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p <a href="CppOperatorNotEqual.htm">!=</a> cluster);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*p,*cluster));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTest(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;&amp; test_node_indices)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt; concepts;<br/>
&nbsp;&nbsp;<a href="CppTransform.htm">std::transform</a>(test_node_indices.begin(),test_node_indices.end(),<a href="CppBack_inserter.htm">std::back_inserter</a>(concepts),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt; tmp <a href="CppOperatorAssign.htm">=</a> ConceptFactory::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> tmp.at(index);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> concept;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount_if.htm">std::count_if</a>(concepts.begin(),concepts.end(),[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; p) { <b><a href="CppReturn.htm">return</a></b> !p; } ) <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster(<b><a href="CppNew.htm">new</a></b> Cluster(concepts));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> cluster;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; &gt; <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTests()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; &gt; v(6);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p <a href="CppOperatorAssign.htm">=</a> GetTest( {0} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v[0] <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p <a href="CppOperatorAssign.htm">=</a> GetTest( {1} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v[1] <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p <a href="CppOperatorAssign.htm">=</a> GetTest( {0,1} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v[2] <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p <a href="CppOperatorAssign.htm">=</a> GetTest( {0,1,2} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v[3] <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p <a href="CppOperatorAssign.htm">=</a> GetTest( {} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v[4] <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppNULL.htm">NULL</a>PTR<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; p;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v[5] <a href="CppOperatorAssign.htm">=</a> p;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a> DO NOT DO THIS FOR WINE<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; &gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTest( {0} ),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTest( {1} ),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTest( {0,1} ),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTest( {0,1,2} ),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTest( { } )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbfile.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbfile.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> PVDB<a href="CppCfile.htm">FILE</a>_H<br/>
<a href="CppDefine.htm">#define</a> PVDB<a href="CppCfile.htm">FILE</a>_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>The File used, also the <a href="CppMain.htm">main</a> director of the program's flow<br/>
<b><a href="CppStruct.htm">struct</a></b> File<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start an empty file<br/>
&nbsp;&nbsp;File();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a File from all its (non-<b><a href="CppStatic.htm">static</a></b>) member variables<br/>
&nbsp;&nbsp;File(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; <a href="CppAbout.htm">about</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; assessor_name,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt;&amp; cluster,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt;&amp; concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; student_name,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; <a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;File(<b><a href="CppConst.htm">const</a></b> File&amp; other) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;File&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> File&amp; other) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> the Cluster to a ConceptMap<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> CreateConceptMapFromCluster();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> <a href="CppXml.htm">XML</a> to File<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; From<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the string which indicates <b><a href="CppThis.htm">this</a></b> file is a PvdB file<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; GetAbout() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_about; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the assessor his/her name<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; GetAssessorName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_assessor_name; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the student his/her clustering of concepts and examples<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Cluster&gt; GetCluster() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_cluster; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cluster&gt; GetCluster()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <b><a href="CppReturn.htm">return</a></b> m_cluster; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the concept map<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; GetConceptMap() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_concept_map; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConceptMap&gt; GetConceptMap()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <b><a href="CppReturn.htm">return</a></b> m_concept_map; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the File filename extension<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameExtension() { <b><a href="CppReturn.htm">return</a></b> m_filename_extension; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the assessors' <a href="CppQuestion.htm">question</a>s<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Get<a href="CppQuestion.htm">Question</a>() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the student his/her name<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; GetStudentName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_student_name; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a temporary filename<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetTempFileName();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a test filename<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetTestFileName();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain multiple test files<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; GetTests();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_<a href="CppVersion.htm">version</a>; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Load to File from disk<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; Load(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Save a File<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/File will have one line of <a href="CppXml.htm">XML</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the assessor his/her name<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetAssessorName(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; assessor_name);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Write a <b><a href="CppNew.htm">new</a></b> clustering of concepts and examples<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Can only be done exactly once<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetCluster(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt;&amp; cluster);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Write a <b><a href="CppNew.htm">new</a></b> ConceptMap from a Cluster<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Can only be done exactly once<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetConceptMap(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Set<a href="CppQuestion.htm">Question</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the student his/her name<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetStudentName(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; student_name);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> File to <a href="CppXml.htm">XML</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> To<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> File&amp; file);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Block <a href="CppDestructor.htm">destructor</a>, except <b><a href="CppFor.htm">for</a></b> the <b><a href="CppFriend.htm">friend</a></b> <a href="CppChecked_delete.htm">boost::checked_delete</a><br/>
&nbsp;&nbsp;~File() {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The string which indicates <b><a href="CppThis.htm">this</a></b> file is a PvdB file<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> m_about;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The assessor his/her name<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> m_assessor_name;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The clustering of items<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Initially will be <b><a href="CppNullptr.htm">nullptr</a></b><br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; m_cluster;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The concept map<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Initially will be <b><a href="CppNullptr.htm">nullptr</a></b><br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; m_concept_map;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The file extension of a a File<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> m_filename_extension;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppQuestion.htm">question</a> the student must answer<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> m_<a href="CppQuestion.htm">question</a>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The student his/her name<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> m_student_name;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> m_<a href="CppVersion.htm">version</a>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/AutoSave, called after each setter<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> AutoSave() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Replace the <a href="CppRegex.htm">regex</a>_str in str with format_str<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Do<a href="CppBoostXpressive.htm">Xpressive</a><a href="CppRegex.htm">Regex</a>Replace(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; str,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; <a href="CppRegex.htm">regex</a>_str,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; format_str);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a file's content to a single <a href="CppString.htm">std::string</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> FileToStr(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a File from <a href="CppVersion.htm">version</a> 0.1<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppConvert.htm">Convert</a>From_0_1(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; xml);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a File from <a href="CppVersion.htm">version</a> 0.2<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppConvert.htm">Convert</a>From_0_2(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; xml);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a File from <a href="CppVersion.htm">version</a> 0.3<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppConvert.htm">Convert</a>From_0_3(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; xml);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Correct <a href="CppFriend.htm">befriending</a>, from http://richelbilderbeek.nl/CppChecked_delete.htm<br/>
&nbsp;&nbsp;<b><a href="CppFriend.htm">friend</a></b> <b><a href="CppVoid.htm">void</a></b> <a href="CppChecked_delete.htm">boost::checked_delete</a>&lt;&gt;(File* x);<br/>
};<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> IsEqual(<b><a href="CppConst.htm">const</a></b> pvdb::File&amp; lhs, <b><a href="CppConst.htm">const</a></b> pvdb::File&amp; rhs);<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDB<a href="CppCfile.htm">FILE</a>_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbfile.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbfile.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFstreamH.htm">fstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppAlgorithm.htm">algorithm</a>/string.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppBoostXpressive.htm">xpressive</a>/<a href="CppBoostXpressive.htm">xpressive</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQRegExp.htm">QRegExp</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbcenternode.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFileIo.htm">fileio</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfilefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "xml.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::m_filename_extension <a href="CppOperatorAssign.htm">=</a> "cmp";<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::File::File()<br/>
&nbsp;&nbsp;: m_about("<a href="ProjectVanDenBogaart.htm">ProjectVanDenBogaart</a>"),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_assessor_name(""),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_cluster(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept_map(), <a href="CppComment.htm">//</a><b><a href="CppNullptr.htm">nullptr</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppQuestion.htm">question</a>(""),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_student_name(""),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppVersion.htm">version</a>("0.4")<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_cluster);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_concept_map);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::File::File(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; <a href="CppAbout.htm">about</a>,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; assessor_name,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt;&amp; cluster,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt;&amp; concept_map,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; student_name,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; <a href="CppVersion.htm">version</a>)<br/>
&nbsp;&nbsp;: m_about(<a href="CppAbout.htm">about</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_assessor_name(assessor_name),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_cluster(cluster),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept_map(concept_map),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppQuestion.htm">question</a>(<a href="CppQuestion.htm">question</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_student_name(student_name),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppVersion.htm">version</a>(<a href="CppVersion.htm">version</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!concept_map <a href="CppOperatorLogicalOr.htm">||</a> <b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> concept_map-&gt;Get<a href="CppQuestion.htm">Question</a>()); <a href="CppComment.htm">//</a>BUG20131129<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::AutoSave() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;Save("<b><a href="CppAuto.htm">auto</a></b>save1." <a href="CppOperatorPlus.htm">+</a> m_filename_extension);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;Save("<b><a href="CppAuto.htm">auto</a></b>save2." <a href="CppOperatorPlus.htm">+</a> m_filename_extension);<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::<a href="CppConvert.htm">Convert</a>From_0_1(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put &lt;examples&gt; around existing &lt;example&gt; tags<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> a <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(s,"&lt;/name&gt;&lt;example&gt;","&lt;/name&gt;&lt;examples&gt;&lt;example&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> b <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(a,"&lt;/example&gt;&lt;/concept&gt;","&lt;/example&gt;&lt;/examples&gt;&lt;/concept&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> c <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(b,"&lt;example&gt;","&lt;e$xample&gt;&lt;text&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> d <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(c,"&lt;/example&gt;","&lt;/text&gt;&lt;competency&gt;un<a href="CppInitialize.htm">initialize</a>d&lt;/competency&gt;&lt;/e$xample&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> e <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(d,"&lt;/examples&gt;&lt;/concept&gt;","&lt;/examples&gt;&lt;complexity&gt;-1&lt;/complexity&gt;&lt;concreteness&gt;-1&lt;/concreteness&gt;&lt;specificity&gt;-1&lt;/specificity&gt;&lt;/concept&gt;");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> &lt;examples&gt; when no &lt;example&gt; tags are present<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> f <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(e,"&lt;/name&gt;&lt;/concept&gt;","&lt;/name&gt;&lt;examples&gt;&lt;/examples&gt;&lt;complexity&gt;-1&lt;/complexity&gt;&lt;concreteness&gt;-1&lt;/concreteness&gt;&lt;specificity&gt;-1&lt;/specificity&gt;&lt;/concept&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> g <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(f,"$","");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> h <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(f,"&lt;<a href="CppVersion.htm">version</a>&gt;0.1&lt;/<a href="CppVersion.htm">version</a>&gt;","&lt;<a href="CppVersion.htm">version</a>&gt;0.2&lt;/<a href="CppVersion.htm">version</a>&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> h;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::<a href="CppConvert.htm">Convert</a>From_0_2(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> a <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(s,"&lt;/<a href="CppAbout.htm">about</a>&gt;&lt;cluster&gt;","&lt;/<a href="CppAbout.htm">about</a>&gt;&lt;assessor_name&gt;&lt;/assessor_name&gt;&lt;cluster&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> b <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(a,"&lt;<a href="CppVersion.htm">version</a>&gt;0.2&lt;/<a href="CppVersion.htm">version</a>&gt;","&lt;<a href="CppVersion.htm">version</a>&gt;0.3&lt;/<a href="CppVersion.htm">version</a>&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> b;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::<a href="CppConvert.htm">Convert</a>From_0_3(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> a<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(s,"&lt;<a href="CppAbout.htm">about</a>&gt;<a href="ProjectVanDenBogaart.htm">ProjectVanDenBogaart</a>&lt;/<a href="CppAbout.htm">about</a>&gt;","&lt;<a href="CppAbout.htm">about</a>&gt;<a href="ProjectBrainweaver.htm">Brainweaver</a>&lt;/<a href="CppAbout.htm">about</a>&gt;");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> b <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(a,"&lt;<a href="CppVersion.htm">version</a>&gt;0.3&lt;/<a href="CppVersion.htm">version</a>&gt;","&lt;<a href="CppVersion.htm">version</a>&gt;0.4&lt;/<a href="CppVersion.htm">version</a>&gt;");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy the <a href="CppQuestion.htm">question</a> from the concept map<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> Do<a href="CppBoostXpressive.htm">Xpressive</a><a href="CppRegex.htm">Regex</a>Replace(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;b,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&lt;concept_map&gt;&lt;nodes&gt;&lt;node&gt;&lt;concept&gt;&lt;name&gt;(.*)&lt;/name&gt;&lt;/concept&gt;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"$1");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> c <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(b,"&lt;/concept_map&gt;&lt;student_name&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;, <a href="CppString.htm">std::string</a>("&lt;/concept_map&gt;&lt;<a href="CppQuestion.htm">question</a>&gt;") <a href="CppOperatorPlus.htm">+</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorPlus.htm">+</a> "&lt;/<a href="CppQuestion.htm">question</a>&gt;&lt;student_name&gt;");<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> d<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(c,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&lt;/competency&gt;&lt;/example&gt;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&lt;/competency&gt;&lt;is_complex&gt;1&lt;/is_complex&gt;&lt;is_concrete&gt;1&lt;/is_concrete&gt;&lt;is_specific&gt;1&lt;/is_specific&gt;&lt;/example&gt;");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> e<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::replace_all_copy(d,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&lt;/examples&gt;&lt;complexity&gt;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&lt;/examples&gt;&lt;concept_is_complex&gt;1&lt;/concept_is_complex&gt;&lt;complexity&gt;");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> e;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::FileToStr(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename.c_str()));<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> s;<br/>
&nbsp;&nbsp;<a href="CppIfstream.htm">std::ifstream</a> in(filename.c_str());<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (!in.eof())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.htm">std::string</a> t;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppGetline.htm">std::getline</a>(in,t);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a>t;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; <a href="CppRibi.htm">ribi</a>::pvdb::File::From<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> &amp;s)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.size() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 13);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.substr(0,6) <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>("&lt;file&gt;"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.substr(s.size() <a href="CppOperatorMinus.htm">-</a> 7,7) <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>("&lt;/file&gt;"));<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f(<b><a href="CppNew.htm">new</a></b> File);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_about_str<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;<a href="CppAbout.htm">about</a>&gt;.*&lt;/<a href="CppAbout.htm">about</a>&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_about <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_assessor_name<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;assessor_name&gt;.*&lt;/assessor_name&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_assessor_name <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_cluster<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;cluster&gt;.*&lt;/cluster&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!v.empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_cluster <a href="CppOperatorAssign.htm">=</a> Cluster::From<a href="CppXml.htm">Xml</a>(v[0]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>No cluster yet<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_concept_map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;concept_map&gt;.*&lt;/concept_map&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!v.empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_concept_map <a href="CppOperatorAssign.htm">=</a> ConceptMapFactory::From<a href="CppXml.htm">Xml</a>(v[0]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>No concept map yet<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;<a href="CppQuestion.htm">question</a>&gt;.*&lt;/<a href="CppQuestion.htm">question</a>&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v.empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Some<a href="CppTime.htm">time</a>s, <b><a href="CppThis.htm">this</a></b> happens at the first startup and ");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!v.empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_<a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_student_name<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;student_name&gt;.*&lt;/student_name&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_student_name <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;<a href="CppVersion.htm">version</a>&gt;.*&lt;/<a href="CppVersion.htm">version</a>&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;m_<a href="CppVersion.htm">version</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( (!f-&gt;GetConceptMap() <a href="CppOperatorLogicalOr.htm">||</a> !f-&gt;GetConceptMap()-&gt;GetNodes().empty() )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Either a file has no concept map or it has at least one node");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( (!f-&gt;GetConceptMap() <a href="CppOperatorLogicalOr.htm">||</a> <a href="CppDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;pvdb::CenterNode&gt;(f-&gt;GetConceptMap()-&gt;GetNodes()[0]) )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Either a file has no concept map or the first node in a file's ConceptMap is be a CenterNode");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> f;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::Get<a href="CppQuestion.htm">Question</a>() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_<a href="CppQuestion.htm">question</a>;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::GetTempFileName()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppString.htm">std::string</a>("tmp.") <a href="CppOperatorPlus.htm">+</a> m_filename_extension;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::GetTestFileName()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppString.htm">std::string</a>("test.") <a href="CppOperatorPlus.htm">+</a> m_filename_extension;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; &gt; <a href="CppRibi.htm">ribi</a>::pvdb::File::GetTests()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; v;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_clusters <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(pvdb::ClusterFactory::GetTests().size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_concept_maps <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(pvdb::ConceptMapFactory::GetAllTests().size());<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> cluster_index=0; cluster_index<a href="CppOperatorNotEqual.htm">!=</a>n_clusters; <a href="CppOperatorIncrement.htm">++</a>cluster_index)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> concept_map_index=0; concept_map_index<a href="CppOperatorNotEqual.htm">!=</a>n_concept_maps; <a href="CppOperatorIncrement.htm">++</a>concept_map_index)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppAbout.htm">about</a> <a href="CppOperatorAssign.htm">=</a> "<a href="CppAbout.htm">about</a>";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> assessor_name <a href="CppOperatorAssign.htm">=</a> "assessor_name";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "<a href="CppQuestion.htm">question</a>";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> student_name <a href="CppOperatorAssign.htm">=</a> "student_name";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppVersion.htm">version</a> <a href="CppOperatorAssign.htm">=</a> "<a href="CppVersion.htm">version</a>";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> cluster <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::GetTests()[cluster_index];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> concept_map <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::GetAllTests()[concept_map_index];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!concept_map-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> concept_map-&gt;GetNodes()[0]-&gt;GetConcept()-&gt;GetName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!concept_map <a href="CppOperatorLogicalOr.htm">||</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorEqual.htm">==</a> concept_map-&gt;Get<a href="CppQuestion.htm">Question</a>()); <a href="CppComment.htm">//</a>BUG20131129<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> File(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAbout.htm">about</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assessor_name,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cluster,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQuestion.htm">question</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;student_name,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppVersion.htm">version</a>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; <a href="CppRibi.htm">ribi</a>::pvdb::File::Load(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> &amp;filename)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> xml;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Read <a href="CppXml.htm">XML</a> from file<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::Safe<a href="CppFileToVector.htm">FileToVector</a>(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppFileToVector.htm">FileToVector</a> allowed an empty line after text, due to difference in line ending<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Safe<a href="CppFileToVector.htm">FileToVector</a> should remove <b><a href="CppThis.htm">this</a></b> line<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;xml <a href="CppOperatorAssign.htm">=</a> v[0];<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Backwards compatiblity with file format <a href="CppVersion.htm">version</a> 0.1<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(xml,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;<a href="CppVersion.htm">version</a>&gt;.*&lt;/<a href="CppVersion.htm">version</a>&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppVersion.htm">version</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppVersion.htm">version</a> <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>("0.1"))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xml <a href="CppOperatorAssign.htm">=</a> <a href="CppConvert.htm">Convert</a>From_0_1(xml);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Backwards compatiblity with file format <a href="CppVersion.htm">version</a> 0.2<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(xml,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;<a href="CppVersion.htm">version</a>&gt;.*&lt;/<a href="CppVersion.htm">version</a>&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppVersion.htm">version</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppVersion.htm">version</a> <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>("0.2"))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xml <a href="CppOperatorAssign.htm">=</a> <a href="CppConvert.htm">Convert</a>From_0_2(xml);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Backwards compatiblity with file format <a href="CppVersion.htm">version</a> 0.3<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(xml,<a href="CppQRegExp.htm">QRegExp</a>("(&lt;<a href="CppVersion.htm">version</a>&gt;.*&lt;/<a href="CppVersion.htm">version</a>&gt;)"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppVersion.htm">version</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::xml::<a href="CppStripXmlTag.htm">StripXmlTag</a>(v[0]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppVersion.htm">version</a> <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>("0.3"))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xml <a href="CppOperatorAssign.htm">=</a> <a href="CppConvert.htm">Convert</a>From_0_3(xml);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::From<a href="CppXml.htm">Xml</a>(xml);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( (!file-&gt;GetConceptMap() <a href="CppOperatorLogicalOr.htm">||</a> !file-&gt;GetConceptMap()-&gt;GetNodes().empty() )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Either a file has no concept map or it has at least one node");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( (!file-&gt;GetConceptMap() <a href="CppOperatorLogicalOr.htm">||</a> <a href="CppDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;pvdb::CenterNode&gt;(file-&gt;GetConceptMap()-&gt;GetNodes()[0]) )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Either a file has no concept map or the first node in a file's ConceptMap is be a CenterNode");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> file;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> &amp;filename) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check <b><a href="CppFor.htm">for</a></b> correct extension<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> m_filename_extension))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(filename);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> m_filename_extension<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOfstream.htm">std::ofstream</a> f(filename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> To<a href="CppXml.htm">Xml</a>(*<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> s;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check <b><a href="CppIf.htm">if</a></b> load results in the same File<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::Safe<a href="CppFileToVector.htm">FileToVector</a>(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v.size() <a href="CppOperatorNotEqual.htm">!=</a> 1) { <a href="CppTRACE.htm">TRACE</a>(v.size()); <a href="CppTRACE.htm">TRACE</a>(filename); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have one line of <a href="CppXml.htm">XML</a>");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::SetAssessorName(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; assessor_name)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(assessor_name.size() &gt; 1);<br/>
&nbsp;&nbsp;m_assessor_name <a href="CppOperatorAssign.htm">=</a> assessor_name;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;AutoSave();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::SetConceptMap(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_concept_map <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Can only set when there is no concept map present yet");<br/>
&nbsp;&nbsp;m_concept_map <a href="CppOperatorAssign.htm">=</a> concept_map;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_concept_map-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;pvdb::CenterNode&gt;(m_concept_map-&gt;GetNodes()[0])<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "The first node in a file's ConceptMap must be a CenterNode");<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;AutoSave();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::SetCluster(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt;&amp; cluster)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Don't care: m_cluster will be overwritten more often,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>because the Tree<a href="CppWidget.htm">Widget</a> has no Model/View architecture: the resulting<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>cluster is allocated <b><a href="CppNew.htm">new</a></b> and calculated every save<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!m_cluster);<br/>
<br/>
&nbsp;&nbsp;m_cluster <a href="CppOperatorAssign.htm">=</a> cluster;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;AutoSave();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::Set<a href="CppQuestion.htm">Question</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppQuestion.htm">question</a>.size() &gt; 0);<br/>
&nbsp;&nbsp;m_<a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> <a href="CppQuestion.htm">question</a>;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;AutoSave();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::SetStudentName(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; student_name)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(student_name.size() &gt; 1);<br/>
&nbsp;&nbsp;m_student_name <a href="CppOperatorAssign.htm">=</a> student_name;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;AutoSave();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::File::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Started <a href="CppRibi.htm">ribi</a>::pvdb::File::Test");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> tmp_filename <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::GetTempFileName();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test <a href="CppCopyConstructor.htm">copy constructor</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f(<b><a href="CppNew.htm">new</a></b> File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetAssessorName("<a href="CppDebug.htm">debug</a> assessor name");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetStudentName("<a href="CppDebug.htm">debug</a> student name");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; g <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::DeepCopy(f);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(f <a href="CppOperatorNotEqual.htm">!=</a> g);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*f,*g));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Modify g, to test <b><a href="CppOperatorNotEqual.htm">operator!=</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;g-&gt;SetStudentName( f-&gt;GetStudentName() <a href="CppOperatorPlus.htm">+</a> " (modified)");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*f,*g));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;g-&gt;SetStudentName( f-&gt;GetStudentName());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*f,*g));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;g-&gt;SetAssessorName( f-&gt;GetAssessorName() <a href="CppOperatorPlus.htm">+</a> " (modified)");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*f,*g));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;g-&gt;SetAssessorName( f-&gt;GetAssessorName());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*f,*g));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test Save/Load on empty File<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; firstfile(<b><a href="CppNew.htm">new</a></b> File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;Save(tmp_filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; secondfile(File::Load(tmp_filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(firstfile-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> secondfile-&gt;Get<a href="CppQuestion.htm">Question</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(firstfile <a href="CppOperatorNotEqual.htm">!=</a> secondfile);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*firstfile,*secondfile));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Modify f, to test <b><a href="CppOperatorNotEqual.htm">operator!=</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;SetStudentName( firstfile-&gt;GetStudentName() <a href="CppOperatorPlus.htm">+</a> " (modified)");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*firstfile,*secondfile));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test Save/Load on file<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; firstfile(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;SetStudentName("Richel Bilderbeek");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "Focal <a href="CppQuestion.htm">question</a>?";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::Create(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!concept_map-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;pvdb::CenterNode&gt;(concept_map-&gt;GetNodes()[0])<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "The first node in a file's ConceptMap must be a CenterNode");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;Set<a href="CppQuestion.htm">Question</a>("Focal <a href="CppQuestion.htm">question</a>?");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(firstfile-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;Save(tmp_filename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(firstfile-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; second_file(File::Load(tmp_filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(second_file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(second_file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> firstfile-&gt;Get<a href="CppQuestion.htm">Question</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*firstfile,*second_file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Modify f, to test <b><a href="CppOperatorNotEqual.htm">operator!=</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;firstfile-&gt;SetStudentName( firstfile-&gt;GetStudentName() <a href="CppOperatorPlus.htm">+</a> " (modified)");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*firstfile,*second_file));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Continue loop until no file is found<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; ; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Testing filenames start at 1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(i <a href="CppOperatorPlus.htm">+</a> 1) <a href="CppOperatorPlus.htm">+</a> ".cmp";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppFileIo.htm">fileio</a>::<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy the file from <a href="CppQt.htm">Qt</a> resources to local file<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> qtfilename <a href="CppOperatorAssign.htm">=</a> ":/files/" <a href="CppOperatorPlus.htm">+</a> filename;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFile.htm">QFile</a> qtfile(qtfilename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtfile.copy(filename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtfile.close();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppFileIo.htm">fileio</a>::<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTRACE.htm">TRACE</a>("First filename not found: ");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTRACE.htm">TRACE</a>(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFile.htm">QFile</a> file(filename.c_str());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> success <a href="CppOperatorAssign.htm">=</a> file.setPermissions(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFile.htm">QFile</a>::ReadOwner<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::WriteOwner<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ExeOwner<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ReadUser<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::WriteUser<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ExeUser<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ReadGroup<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::WriteGroup<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ExeGroup<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ReadOther<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::WriteOther<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQFile.htm">QFile</a>::ExeOther<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(success);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.open(<a href="CppQFile.htm">QFile</a>::ReadWrite);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file.isOpen());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file.isReadable());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file.isWritable());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file.size() &gt; 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.close();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::File::Load(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRemove.htm">std::remove</a>(filename.c_str());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppFileIo.htm">fileio</a>::<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("File::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::To<a href="CppXml.htm">Xml</a>(<b><a href="CppConst.htm">const</a></b> File&amp; file)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(file.m_cluster);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(file.m_concept_map);<br/>
<br/>
&nbsp;&nbsp;<a href="CppStringstream.htm">std::stringstream</a> s;<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;file&gt;";<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;<a href="CppAbout.htm">about</a>&gt;" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> file.GetAbout() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/<a href="CppAbout.htm">about</a>&gt;";<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;assessor_name&gt;" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> file.GetAssessorName() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/assessor_name&gt;";<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file.GetCluster()&nbsp;&nbsp; ) s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> Cluster::To<a href="CppXml.htm">Xml</a>(file.GetCluster());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file.GetConceptMap()) s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ConceptMap::To<a href="CppXml.htm">Xml</a>(file.GetConceptMap());<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;<a href="CppQuestion.htm">question</a>&gt;" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> file.Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/<a href="CppQuestion.htm">question</a>&gt;";<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;student_name&gt;" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> file.GetStudentName() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/student_name&gt;";<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;<a href="CppVersion.htm">version</a>&gt;" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> file.Get<a href="CppVersion.htm">Version</a>() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/<a href="CppVersion.htm">version</a>&gt;";<br/>
&nbsp;&nbsp;s <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/file&gt;";<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> r <a href="CppOperatorAssign.htm">=</a> s.str();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.size() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 13);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.substr(0,6) <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>("&lt;file&gt;"));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(r.substr(r.size() <a href="CppOperatorMinus.htm">-</a> 7,7) <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>("&lt;/file&gt;"));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> r;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::Do<a href="CppBoostXpressive.htm">Xpressive</a><a href="CppRegex.htm">Regex</a>Replace(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; str,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; <a href="CppRegex.htm">regex</a>_str,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; format_str)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_replace(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostXpressive.htm">boost::xpressive</a>::s<a href="CppRegex.htm">regex</a>(<a href="CppBoostXpressive.htm">boost::xpressive</a>::s<a href="CppRegex.htm">regex</a>::<a href="CppCompile.htm">compile</a>(<a href="CppRegex.htm">regex</a>_str)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;format_str,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_constants::match_default<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_constants::format_all<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_constants::format_no_copy);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_error&amp; e)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> "<a href="CppBoostXpressive.htm">boost::xpressive</a>::<a href="CppRegex.htm">regex</a>_error: " <a href="CppOperatorPlus.htm">+</a> <a href="CppString.htm">std::string</a>(e.what());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(str);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(<a href="CppRegex.htm">regex</a>_str);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(format_str);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppLogic_error.htm">std::logic_error</a>(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::IsEqual(<b><a href="CppConst.htm">const</a></b> pvdb::File&amp; lhs, <b><a href="CppConst.htm">const</a></b> pvdb::File&amp; rhs)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(lhs.GetCluster());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(lhs.GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(rhs.GetCluster());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(rhs.GetConceptMap());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp; lhs.GetAssessorName() <a href="CppOperatorEqual.htm">==</a> rhs.GetAssessorName()<br/>
&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (!lhs.GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !rhs.GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> IsEqual(*lhs.GetCluster(),*rhs.GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp; )<br/>
&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (!lhs.GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !rhs.GetConceptMap())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorLogicalOr.htm">||</a> IsEqual(*lhs.GetConceptMap(),*rhs.GetConceptMap())<br/>
&nbsp;&nbsp;&nbsp;&nbsp; )<br/>
&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.GetStudentName() <a href="CppOperatorEqual.htm">==</a> rhs.GetStudentName()<br/>
&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.Get<a href="CppVersion.htm">Version</a>() <a href="CppOperatorEqual.htm">==</a> rhs.Get<a href="CppVersion.htm">Version</a>();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbfilefactory.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbfilefactory.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> PVDB<a href="CppCfile.htm">FILE</a>FACTORY_H<br/>
<a href="CppDefine.htm">#define</a> PVDB<a href="CppCfile.htm">FILE</a>FACTORY_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> File;<br/>
<br/>
<a href="CppComment.htm">///</a>Factory of pvdb::File<br/>
<b><a href="CppStruct.htm">struct</a></b> FileFactory<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; Create();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/DeepCopy is only used <b><a href="CppFor.htm">for</a></b> <a href="CppDebug.htm">debugging</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; DeepCopy(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt;&amp; file);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; GetTests();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDB<a href="CppCfile.htm">FILE</a>FACTORY_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbfilefactory.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbfilefactory.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfilefactory.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; <a href="CppRibi.htm">ribi</a>::pvdb::FileFactory::Create()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> file;<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; <a href="CppRibi.htm">ribi</a>::pvdb::FileFactory::DeepCopy(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt;&amp; file)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetCluster())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;cluster <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::DeepCopy(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*cluster,*file-&gt;GetCluster()));<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept_map <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::DeepCopy(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*concept_map,*file-&gt;GetConceptMap()));<br/>
&nbsp;&nbsp;}<br/>
<br/>
 <a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!concept_map <a href="CppOperatorLogicalOr.htm">||</a> file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> concept_map-&gt;Get<a href="CppQuestion.htm">Question</a>()); <a href="CppComment.htm">//</a>BUG20131129<br/>
 <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; p(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> File(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;GetAbout(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;GetAssessorName(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cluster,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Get<a href="CppQuestion.htm">Question</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;GetStudentName(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Get<a href="CppVersion.htm">Version</a>()));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file <a href="CppOperatorNotEqual.htm">!=</a> p <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "It must be a DEEP copy");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*file,*p) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "It must be a deep COPY");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; &gt; <a href="CppRibi.htm">ribi</a>::pvdb::FileFactory::GetTests()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; v;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[0]: empty file<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(Create());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[1]: file with focal <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f <a href="CppOperatorAssign.htm">=</a> Create();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(f);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ConceptMapFactory::GetHeteromorphousTestConceptMaps().at(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(f);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[2]: file with complex concept map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f <a href="CppOperatorAssign.htm">=</a> Create();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(f);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ConceptMapFactory::GetHeteromorphousTestConceptMaps().at(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(f);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[3]: file with complex concept map and complex cluster<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f <a href="CppOperatorAssign.htm">=</a> Create();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(f);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetStudentName("<a href="CppRibi.htm">ribi</a>::pvdb::FileFactory::GetTests()[3] name");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ConceptMapFactory::GetHeteromorphousTestConceptMaps().at(15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ClusterFactory::GetTests().at(3);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(f);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[4]: file with rated complex concept map and complex cluster<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f <a href="CppOperatorAssign.htm">=</a> Create();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(f);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetStudentName("<a href="CppRibi.htm">ribi</a>::pvdb::FileFactory::GetTests()[4] name");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ConceptMapFactory::GetHeteromorphousTestConceptMaps().at(16);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ClusterFactory::GetTests().at(3);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(f);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[5]: file with rated complex concept map and complex cluster, all multiple lines<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; f <a href="CppOperatorAssign.htm">=</a> Create();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(f);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetStudentName("<a href="CppRibi.htm">ribi</a>::pvdb::FileFactory::GetTests()[5] name");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ConceptMapFactory::GetHeteromorphousTestConceptMaps().at(17);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ClusterFactory::GetTests().at(3);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(f);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount_if.htm">std::count_if</a>(v.begin(),v.end(),[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt;&amp; p) { <b><a href="CppReturn.htm">return</a></b> !p; } ) <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<a href="CppAll_of.htm">std::all_of</a>(v.begin(),v.end(),[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt;&amp; p) { <b><a href="CppReturn.htm">return</a></b> p; } ));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> PVDB_KEEP_NAMESPACE_IN_CPP_<a href="CppCfile.htm">FILE</a>S<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbfwd.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbfwd.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> PVDBFWD_H<br/>
<a href="CppDefine.htm">#define</a> PVDBFWD_H<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQRegExp.htm">QRegExp</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTimer.htm">QTimer</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> CenterNode;<br/>
<b><a href="CppStruct.htm">struct</a></b> Cluster;<br/>
<b><a href="CppStruct.htm">struct</a></b> Concept;<br/>
<b><a href="CppStruct.htm">struct</a></b> ConceptFactory;<br/>
<b><a href="CppStruct.htm">struct</a></b> ConceptMap;<br/>
<b><a href="CppStruct.htm">struct</a></b> Edge;<br/>
<b><a href="CppStruct.htm">struct</a></b> Example;<br/>
<b><a href="CppStruct.htm">struct</a></b> Examples;<br/>
<b><a href="CppStruct.htm">struct</a></b> File;<br/>
<b><a href="CppStruct.htm">struct</a></b> Node;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbArrow;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptEditDialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptItem;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapItem;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDisplay<a href="CppWidget.htm">Widget</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapEdit<a href="CppWidget.htm">Widget</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapRate<a href="CppWidget.htm">Widget</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptDialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbDisplayConceptItem;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbEdgeItem;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbEditConceptItem;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbExamplesItem;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbItemHighlighter;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbNewArrow;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbPathArrow;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptItem;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbTestConceptMapEdit<a href="CppWidget.htm">Widget</a>Dialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbTestConceptMapRate<a href="CppWidget.htm">Widget</a>Dialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item;<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQtArrowItem.htm">QtArrowItem</a>;<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQtQuadBezierArrowItem.htm">QtQuadBezierArrowItem</a>;<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDBFWD_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbhelper.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbhelper.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> PVDBHELPER_H<br/>
<a href="CppDefine.htm">#define</a> PVDBHELPER_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppArrayH.htm">array</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppArray.htm">array</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/con<a href="CppVersion.htm">version</a>/cast.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQRegExp.htm">QRegExp</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<br/>
<a href="CppComment.htm">///</a>Help adding constness a bit<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> T&gt; &gt; <a href="CppAdd.htm">Add</a>Const(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;T&gt; &gt; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> T&gt; &gt; w(v.begin(),v.end());<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> w.size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> v.size();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i) { <a href="CppAssert.htm">assert</a>(v[i] <a href="CppOperatorEqual.htm">==</a> w[i]); }<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> w;<br/>
}<br/>
<br/>
<a href="CppComment.htm">///</a>Help adding constness a bit<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppConst.htm">const</a></b> T *&gt; <a href="CppAdd.htm">Add</a>Const(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;T *&gt; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppConst.htm">const</a></b> T *&gt; w(v.begin(),v.end());<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> w.size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> v.size();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i) { <a href="CppAssert.htm">assert</a>(v[i] <a href="CppOperatorEqual.htm">==</a> w[i]); }<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> w;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>Obtain all possible selections of a <a href="CppVector.htm">std::vector</a>, preserving the ordering of its elements<br/>
<a href="CppComment.htm">///</a>Examples:<br/>
/<a href="CppComment.htm">//</a> {&nbsp;&nbsp;&nbsp;&nbsp; } <a href="CppOperatorMinus.htm">-</a>&gt; { {}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
/<a href="CppComment.htm">//</a> {1&nbsp;&nbsp;&nbsp;&nbsp;} <a href="CppOperatorMinus.htm">-</a>&gt; { {}, {1}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br/>
/<a href="CppComment.htm">//</a> {1,2&nbsp;&nbsp;} <a href="CppOperatorMinus.htm">-</a>&gt; { {}, {1}, {2},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{1,2}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
/<a href="CppComment.htm">//</a> {1,2,3} <a href="CppOperatorMinus.htm">-</a>&gt; { {}, {1}, {2}, {3}, {1,2}, {1,3}, {2,3}, {1,2,3} }<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetCombinations.htm">GetCombinations</a>.htm<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppVector.htm">std::vector</a>&lt;T&gt; &gt; <a href="CppGetCombinations.htm">GetCombinations</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;T&gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppVector.htm">std::vector</a>&lt;T&gt; &gt; result;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_combinations <a href="CppOperatorAssign.htm">=</a> (1 <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> sz);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_combinations; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;T&gt; w;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((1 <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> j) &amp; i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.push_back(v[j]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;result.push_back(w);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> result;<br/>
}<br/>
<br/>
<a href="CppComment.htm">///</a>Obtain the Pythagorian distance from two delta's<br/>
<a href="CppComment.htm">//</a>From www.richelbilderbeek.nl/Cpp<a href="CppGetDistance.htm">GetDistance</a>.htm<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppGetDistance.htm">GetDistance</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> delta_x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> delta_y);<br/>
<br/>
<a href="CppComment.htm">///</a>Obtain the Pythagorian distance from two coordinats<br/>
<a href="CppComment.htm">//</a>From www.richelbilderbeek.nl/Cpp<a href="CppGetDistance.htm">GetDistance</a>.htm<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppGetDistance.htm">GetDistance</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x1, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y1, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x2, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y2);<br/>
<br/>
<a href="CppComment.htm">///</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetRegexMatches.htm">GetRegexMatches</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; <a href="CppGetRegexMatches.htm">GetRegexMatches</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRegExp.htm">QRegExp</a>&amp; r);<br/>
<br/>
<a href="CppComment.htm">///</a>Safe<a href="CppFileToVector.htm">FileToVector</a> calls <a href="CppFileToVector.htm">FileToVector</a> and<br/>
<a href="CppComment.htm">///</a>removes an empty trailing line that can be created under<br/>
<a href="CppComment.htm">///</a>the <a href="CppWindows.htm">Windows</a> operating system, due to different line endings<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; Safe<a href="CppFileToVector.htm">FileToVector</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename);<br/>
<br/>
<a href="CppComment.htm">///</a>Split an <a href="CppXml.htm">XML</a> <a href="CppString.htm">std::string</a> into its parts<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppSplitXml.htm">SplitXml</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; <a href="CppSplitXml.htm">SplitXml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s);<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<a href="CppComment.htm">///</a>Test the helper <a href="CppFunction.htm">function</a>s<br/>
<b><a href="CppVoid.htm">void</a></b> TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppComment.htm">///</a>Undo a Wordwrap<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Unwordwrap(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt;&amp; v) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<a href="CppComment.htm">///</a>Wordwrap the text to obtain lines of max_len <a href="CppChar.htm">character</a>s<br/>
<a href="CppComment.htm">///</a>If the string _must_ be seperable by spaces; a word can have a maximum length of max_len<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; Wordwrap(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s, <b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> max_len) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<a href="CppComment.htm">///</a>Pretty-print an <a href="CppXml.htm">XML</a> <a href="CppString.htm">std::string</a> by indenting its elements<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppXmlToPretty.htm">XmlToPretty</a>.htm<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; <a href="CppXmlToPretty.htm">XmlToPretty</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s);<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDBHELPER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbhelper.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbhelper.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFstreamH.htm">fstream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppAlgorithm.htm">algorithm</a>/string.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQRegExp.htm">QRegExp</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFileIo.htm">fileio</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppGetDistance.htm">GetDistance</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> delta_x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> delta_y)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;pvdb::TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppSqrt.htm">std::sqrt</a>( (delta_x * delta_x) <a href="CppOperatorPlus.htm">+</a> (delta_y * delta_y) );<br/>
}<br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppGetDistance.htm">GetDistance</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x1, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y1, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x2, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y2)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;pvdb::TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppGetDistance.htm">GetDistance</a>(x1-x2,y1-y2);<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRegExp.htm">QRegExp</a>&amp; r_original)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;pvdb::TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppQRegExp.htm">QRegExp</a> r(r_original);<br/>
&nbsp;&nbsp;r.setMinimal(<b><a href="CppTrue.htm">true</a></b>); <a href="CppComment.htm">//</a><a href="CppQRegExp.htm">QRegExp</a> must be non-greedy<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> pos <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> ((pos <a href="CppOperatorAssign.htm">=</a> r.indexIn(s.c_str(), pos)) <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppOperatorMinus.htm">-</a>1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> q <a href="CppOperatorAssign.htm">=</a> r.cap(1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (q.isEmpty()) <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(q.toStdString());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pos <a href="CppOperatorPlusAssign.htm">+=</a> r.matchedLength();<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::Safe<a href="CppFileToVector.htm">FileToVector</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::<a href="CppFileIo.htm">fileio</a>::<a href="CppFileToVector.htm">FileToVector</a>(filename);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!v.empty() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> v.back().empty()) v.pop_back();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppSplitXml.htm">SplitXml</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;pvdb::TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a>::const_iterator i <a href="CppOperatorAssign.htm">=</a> s.begin();<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a>::const_iterator j <a href="CppOperatorAssign.htm">=</a> s.begin();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>::const_iterator end <a href="CppOperatorAssign.htm">=</a> s.end();<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (j<a href="CppOperatorNotEqual.htm">!=</a>end)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>j;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((*j<a href="CppOperatorEqual.htm">==</a>'&gt;' <a href="CppOperatorLogicalOr.htm">||</a> *j <a href="CppOperatorEqual.htm">==</a> '&lt;') <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> <a href="CppDistance.htm">std::distance</a>(i,j) &gt; 1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.htm">std::string</a> t;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCopy.htm">std::copy</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*i<a href="CppOperatorEqual.htm">==</a>'&lt;' ? i&nbsp;&nbsp; : i+1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*j<a href="CppOperatorEqual.htm">==</a>'&gt;' ? j+1 : j,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBack_inserter.htm">std::back_inserter</a>(t));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(t);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i <a href="CppOperatorAssign.htm">=</a> j;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::TestHelper<a href="CppFunction.htm">Function</a>s()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Started TestHelper<a href="CppFunction.htm">Function</a>s");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppGetRegexMatches.htm">GetRegexMatches</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "In the Netherlands, 1234 AB and 2345 BC are valid zip codes";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; expected;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;expected.push_back("1234 AB");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;expected.push_back("2345 BC");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> r <a href="CppOperatorAssign.htm">=</a> "(\\d{4} [A-Z]{2})";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>(r.c_str())) <a href="CppOperatorEqual.htm">==</a> expected);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "&lt;concept&gt;&lt;name&gt;Concept with examples&lt;/name&gt;&lt;example&gt;Example 1&lt;/example&gt;&lt;example&gt;Example 2&lt;/example&gt;&lt;example&gt;Example 3&lt;/example&gt;&lt;/concept&gt;";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(s.begin(),s.end(),'\b') <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; expected;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;expected.push_back("&lt;example&gt;Example 1&lt;/example&gt;");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;expected.push_back("&lt;example&gt;Example 2&lt;/example&gt;");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;expected.push_back("&lt;example&gt;Example 3&lt;/example&gt;");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> r <a href="CppOperatorAssign.htm">=</a> "(&lt;example&gt;.*&lt;/example&gt;)";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pvdb::<a href="CppGetRegexMatches.htm">GetRegexMatches</a>(s,<a href="CppQRegExp.htm">QRegExp</a>(r.c_str())) <a href="CppOperatorEqual.htm">==</a> expected);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppGetCombinations.htm">GetCombinations</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assume the number of elements is correct<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } ) ).size() <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp;1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} ) ).size() <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1,2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} ) ).size() <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp;4);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1,2,3&nbsp;&nbsp;&nbsp;&nbsp;} ) ).size() <a href="CppOperatorEqual.htm">==</a>&nbsp;&nbsp;8);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1,2,3,4&nbsp;&nbsp;} ) ).size() <a href="CppOperatorEqual.htm">==</a> 16);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( {1,2,3,4,5} ) ).size() <a href="CppOperatorEqual.htm">==</a> 32);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assume the elements are correct<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( { 1 } ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_0 <a href="CppOperatorAssign.htm">=</a> {};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_1 <a href="CppOperatorAssign.htm">=</a> {1};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_1));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( { 1,2 } ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_0 <a href="CppOperatorAssign.htm">=</a> {};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_1 <a href="CppOperatorAssign.htm">=</a> {1};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_2 <a href="CppOperatorAssign.htm">=</a> {2};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_3 <a href="CppOperatorAssign.htm">=</a> {1,2};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_3));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( { 1,2,3 } ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_0 <a href="CppOperatorAssign.htm">=</a> {};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_1 <a href="CppOperatorAssign.htm">=</a> {1};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_2 <a href="CppOperatorAssign.htm">=</a> {2};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_3 <a href="CppOperatorAssign.htm">=</a> {3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_4 <a href="CppOperatorAssign.htm">=</a> {1,2};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_5 <a href="CppOperatorAssign.htm">=</a> {1,3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_6 <a href="CppOperatorAssign.htm">=</a> {2,3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_7 <a href="CppOperatorAssign.htm">=</a> {1,2,3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_3));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_4));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_5));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_6));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_7));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppGetCombinations.htm">GetCombinations</a>(<a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;( { 1,2,3,4 } ) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_0 <a href="CppOperatorAssign.htm">=</a> {};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_1 <a href="CppOperatorAssign.htm">=</a> {1};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_2 <a href="CppOperatorAssign.htm">=</a> {2};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_3 <a href="CppOperatorAssign.htm">=</a> {3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_4 <a href="CppOperatorAssign.htm">=</a> {4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_5 <a href="CppOperatorAssign.htm">=</a> {1,2};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_6 <a href="CppOperatorAssign.htm">=</a> {1,3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_7 <a href="CppOperatorAssign.htm">=</a> {1,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_8 <a href="CppOperatorAssign.htm">=</a> {2,3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_9 <a href="CppOperatorAssign.htm">=</a> {2,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_10 <a href="CppOperatorAssign.htm">=</a> {3,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_11 <a href="CppOperatorAssign.htm">=</a> {1,2,3};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_12 <a href="CppOperatorAssign.htm">=</a> {1,2,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_13 <a href="CppOperatorAssign.htm">=</a> {1,3,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_14 <a href="CppOperatorAssign.htm">=</a> {2,3,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; expected_15 <a href="CppOperatorAssign.htm">=</a> {1,2,3,4};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_3));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_4));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_5));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_6));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_7));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_8));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_9));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_10));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_11));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_12));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_13));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_14));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),expected_15));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Wordwrap<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890123",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901234",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012345",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890123456",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901234567",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012345678",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890123456789",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012345678901",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890123456789012",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901234567890123",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012345678901234",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890123456789012345",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901234567890123456",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012345678901234567",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678901234567890123456789012345678",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789012345678901234567890123456789",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890123456789012345678901234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1 1",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12 12",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123 123",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234 1234",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345 12345",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456 123456",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567 1234567",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"12345678 8",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"123456789 9",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 0",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" 1",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;1",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;1 ",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;1&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;1 2 ",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;1 23 ",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;12 34&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;12&nbsp;&nbsp;34&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp; 12&nbsp;&nbsp; 34&nbsp;&nbsp; ",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp; 12&nbsp;&nbsp; 34&nbsp;&nbsp; 5",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp; 12&nbsp;&nbsp; 34&nbsp;&nbsp; 5 ",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp; 12&nbsp;&nbsp; 34&nbsp;&nbsp; 5 6",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"0&nbsp;&nbsp; 12&nbsp;&nbsp; 34&nbsp;&nbsp; 5 6",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"0&nbsp;&nbsp; 12&nbsp;&nbsp; 34&nbsp;&nbsp; 5 6&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> len=1; len<a href="CppOperatorNotEqual.htm">!=</a>1000; <a href="CppOperatorIncrement.htm">++</a>len)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s: v)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Wordwrap calls Unwordwrap<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Wordwrap(s,len);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TestHelper<a href="CppFunction.htm">Function</a>s finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::Unwordwrap(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt;&amp; v) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Simply concatenate<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> t;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s: v) { t <a href="CppOperatorPlusAssign.htm">+=</a> s; }<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> t;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::Wordwrap(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s_original, <b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> max_len) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (max_len <a href="CppOperatorEqual.htm">==</a> 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppLogic_error.htm">std::logic_error</a>("Cannot wordwrap <b><a href="CppFor.htm">for</a></b> a max_len of zero");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Wordwrap \'" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> s_original <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\'' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> s{s_original};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.size() <a href="CppOperatorEqual.htm">==</a> s_original.size());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Replace multiple spaces with '\b ', where x is a <b><a href="CppChar.htm">char</a></b> not in the string<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a>::value_type x <a href="CppOperatorAssign.htm">=</a> '\b'; <a href="CppComment.htm">//</a>Bell<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> s.size();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Replace spaces at beginning<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s[i] <a href="CppOperatorEqual.htm">==</a> ' ')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s[i] <a href="CppOperatorAssign.htm">=</a> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Replace spaces at end<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sz &gt; 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>i<a href="CppOperatorNotEqual.htm">!=</a>0, because <b><a href="CppIf.htm">if</a></b> s[0] is a space, it is already <a href="CppConvert.htm">convert</a>ed to bell<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppSize_t.htm">std::size_t</a> i=sz-1; i<a href="CppOperatorNotEqual.htm">!=</a>0; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s[i] <a href="CppOperatorEqual.htm">==</a> ' ')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s[i] <a href="CppOperatorAssign.htm">=</a> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Replace "&nbsp;&nbsp;" by "\b "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz-1; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s[i] <a href="CppOperatorEqual.htm">==</a> ' ' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> s[i+1] <a href="CppOperatorEqual.htm">==</a> ' ')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s[i] <a href="CppOperatorAssign.htm">=</a> x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start the actual wordwrapping<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (!s.empty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppTRACE.htm">TRACE</a>(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Is the word <b><a href="CppShort.htm">short</a></b> enough?<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s.size() &lt; max_len)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy entire word<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorAssign.htm">=</a> {};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>No spaces, or space beyond max_len: cut word<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s.find(' ') <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>::npos <a href="CppOperatorLogicalOr.htm">||</a> s.find(' ') &gt; max_len)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(s.substr(0,max_len));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorAssign.htm">=</a> s.substr(max_len,s.size() <a href="CppOperatorMinus.htm">-</a> max_len);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Find last space before max_len<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppSize_t.htm">std::size_t</a> len <a href="CppOperatorAssign.htm">=</a> s.find(' ');<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(len <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppString.htm">std::string</a>::npos);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(len &lt; s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> new_len <a href="CppOperatorAssign.htm">=</a> s.find(' ',len <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (new_len &gt; max_len <a href="CppOperatorLogicalOr.htm">||</a> new_len <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>::npos) <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;len <a href="CppOperatorAssign.htm">=</a> new_len;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(len <a href="CppOperatorPlus.htm">+</a> 0 &lt; s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(len <a href="CppOperatorPlus.htm">+</a> 1 &lt; s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>cut s, put cut part in vector<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> line <a href="CppOperatorAssign.htm">=</a> s.substr(0,len+1); <a href="CppComment.htm">//</a>Keep space<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!line.empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(line);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> new_index <a href="CppOperatorAssign.htm">=</a> len+1; <a href="CppComment.htm">//</a>After the space found<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(new_index &lt; s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> new_s <a href="CppOperatorAssign.htm">=</a> s.substr(new_index,s.size() <a href="CppOperatorMinus.htm">-</a> new_index);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s <a href="CppOperatorNotEqual.htm">!=</a> new_s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorAssign.htm">=</a> new_s;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Replace bell <a href="CppChar.htm">character</a>s by spaces again<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppString.htm">std::string</a>&amp; s: v)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(x <a href="CppOperatorNotEqual.htm">!=</a> ' ');<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppSize_t.htm">std::size_t</a> pos <a href="CppOperatorAssign.htm">=</a> s.find(x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (pos <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppString.htm">std::string</a>::npos)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pos <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppString.htm">std::string</a>::npos);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pos &lt; s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pos <a href="CppOperatorEqual.htm">==</a> s.find(x)); <a href="CppComment.htm">//</a>To prevent infinite <b><a href="CppWhile.htm">while</a></b> loop<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s[pos] <a href="CppOperatorAssign.htm">=</a> ' ';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s[pos] <a href="CppOperatorEqual.htm">==</a> ' ');<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(pos <a href="CppOperatorNotEqual.htm">!=</a> s.find(x)); <a href="CppComment.htm">//</a>To prevent infinite <b><a href="CppWhile.htm">while</a></b> loop<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos <a href="CppOperatorAssign.htm">=</a> s.find(x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(s.find(x) <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>::npos);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test <b><a href="CppIf.htm">if</a></b> Unwordwrap the result produces the original input<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (Unwordwrap(v) <a href="CppOperatorNotEqual.htm">!=</a> s_original)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCerr.htm">std::cerr</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> v.size() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCopy.htm">std::copy</a>(v.begin(),v.end(),<a href="CppOstream_iterator.htm">std::ostream_iterator</a>&lt;<a href="CppString.htm">std::string</a>&gt;(<a href="CppCerr.htm">std::cerr</a>,"\n"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCerr.htm">std::cerr</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> Unwordwrap(v) <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCerr.htm">std::cerr</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> s_original <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppEndl.htm">std::endl</a>;<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(Unwordwrap(v) <a href="CppOperatorEqual.htm">==</a> s_original);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppXmlToPretty.htm">XmlToPretty</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;pvdb::TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppSplitXml.htm">SplitXml</a>(s);<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> n <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>2;<br/>
&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[&amp;n](<a href="CppString.htm">std::string</a>&amp; s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!s.empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s[0] <a href="CppOperatorEqual.htm">==</a> '&lt;' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> s[1] <a href="CppOperatorNotEqual.htm">!=</a> '/')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n<a href="CppOperatorPlusAssign.htm">+=</a>2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorAssign.htm">=</a> <a href="CppString.htm">std::string</a>(n,' ') <a href="CppOperatorPlus.htm">+</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (s[n+0] <a href="CppOperatorEqual.htm">==</a> '&lt;' <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> s[n+1] <a href="CppOperatorEqual.htm">==</a> '/')<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n<a href="CppOperatorMinusAssign.htm">-=</a>2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbmenudialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> PVDBMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> PVDBMENUDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "menudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>The GUI independent <a href="CppVersion.htm">version</a> of Project Van Den Bogaart its menu dialog<br/>
<b><a href="CppStruct.htm">struct</a></b> MenuDialog : <b><a href="CppPublic.htm">public</a></b> ::<a href="CppRibi.htm">ribi</a>::MenuDialog<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppAbout.htm">About</a> GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Help GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDBMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "pvdbmenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFuzzy_equal_to.htm">fuzzy_equal_to</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::MenuDialog::ExecuteSpecific(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt;&amp; <a href="CppArgc.htm">argv</a>) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppArgc.htm">argv</a>.size());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorEqual.htm">==</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> GetHelp() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"TODO");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppAbout.htm">About</a> <a href="CppRibi.htm">ribi</a>::pvdb::MenuDialog::GetAbout() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> a(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Richel Bilderbeek (programming) and Toine van den Bogaart (research)",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="ProjectBrainweaver.htm">Brainweaver</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"program to create and assess concept maps",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"the 29th of September 2013",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-2013",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"http://www.richelbilderbeek.nl/<a href="ProjectBrainweaver.htm">ProjectBrainweaver</a>.htm",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.htm">Version</a>History());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppTrace.htm">Trace</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppTrace.htm">Trace</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppFuzzy_equal_to.htm">fuzzy_equal_to</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppFuzzy_equal_to.htm">fuzzy_equal_to</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Help <a href="CppRibi.htm">ribi</a>::pvdb::MenuDialog::GetHelp() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Help(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileTitle(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetAbout().GetFileDescription(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::Program&gt; <a href="CppRibi.htm">ribi</a>::pvdb::MenuDialog::GetProgram() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> Program&gt; p {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> Program<a href="ProjectBrainweaver.htm">Brainweaver</a><br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::MenuDialog::Get<a href="CppVersion.htm">Version</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "0.40";<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::MenuDialog::Get<a href="CppVersion.htm">Version</a>History() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-06-17: <a href="CppVersion.htm">Version</a> 0.01: concept <a href="CppVersion.htm">version</a> of <a href="ProjectVanDenBogaart.htm">ProjectVanDenBogaart</a>, <b><a href="CppUsing.htm">using</a></b> 'IronHide' style",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-10-18: <a href="CppVersion.htm">Version</a> 0.02: able to cross<a href="CppCompile.htm">compile</a> to windows, few dialogs present",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-10-19: <a href="CppVersion.htm">Version</a> 0.03: added use of <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>, most dialogs present",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-10-24: <a href="CppVersion.htm">Version</a> 0.04: added <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-10-28: <a href="CppVersion.htm">Version</a> 0.05: added Cluster and ConceptMap, added AutoSave, Cluster<a href="CppWidget.htm">Widget</a> and Cluster work okay, file I/O working okay",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-10: <a href="CppVersion.htm">Version</a> 0.06: added first working <a href="CppQt.htm">Qt</a>ConceptMap",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-13: <a href="CppVersion.htm">Version</a> 0.07: added edges and helpers to <a href="CppQt.htm">Qt</a>ConceptMap",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-15: <a href="CppVersion.htm">Version</a> 0.08: concepts on edges in <a href="CppQt.htm">Qt</a>ConceptMap are editable, <a href="CppQt.htm">Qt</a>ConceptMap always looks pretty",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-18: <a href="CppVersion.htm">Version</a> 0.09: added edges with arrowheads, deletion of nodes and edges possible, put help items in status bar",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-22: <a href="CppVersion.htm">Version</a> 0.10: editing of concepts and their examples, <a href="Tools.htm">tools</a> icon (doing nothing yet)",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-24: <a href="CppVersion.htm">Version</a> 0.11: allow adding <b><a href="CppNew.htm">new</a></b> relations",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-25: <a href="CppVersion.htm">Version</a> 0.12: allow connecting to center node",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-27: <a href="CppVersion.htm">Version</a> 0.13: added program flow tests",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-11-28: <a href="CppVersion.htm">Version</a> 0.14: fixed many program flow and <a href="CppWidget.htm">widget</a> and dialog <a href="CppBug.htm">bug</a>s",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-02: <a href="CppVersion.htm">Version</a> 0.15: also relations can move",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-08: <a href="CppVersion.htm">Version</a> 0.16: use quadratic Bezier curve <b><a href="CppFor.htm">for</a></b> relations, locations of moved relations are saved",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-13: <a href="CppVersion.htm">Version</a> 0.17: improved keyboard <b><a href="CppFriend.htm">friend</a></b>liness",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-25: <a href="CppVersion.htm">Version</a> 0.18: major architectural changes, <b><a href="CppUsing.htm">using</a></b> 'B<a href="CppRainbow.htm">rainbow</a>' style",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-26: <a href="CppVersion.htm">Version</a> 0.19: program overview works again, concept map <a href="CppWidget.htm">widget</a>s <b><a href="CppFor.htm">for</a></b> editing, rating and displaying work fine",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-28: <a href="CppVersion.htm">Version</a> 0.20: got <a href="CppWine.htm">Wine</a> execution working again, rating works partially",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-12-31: <a href="CppVersion.htm">Version</a> 0.21: fixed <a href="CppBug.htm">bug</a>s in cluster dialog, added test concept dialog, temporarily removed concept maps",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-01: <a href="CppVersion.htm">Version</a> 0.22: added test node and edge dialogs, removed cross<a href="CppCompiler.htm">compiler</a> errors by replacing <a href="CppAll_of.htm">std::all_of</a> by count_if",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-08: <a href="CppVersion.htm">Version</a> 0.23: got editing and rating of concepts working",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-10: <a href="CppVersion.htm">Version</a> 0.24: backward-compatibility with previous .cmp files",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-13: <a href="CppVersion.htm">Version</a> 0.25: initial (incorrect) rating values calculation",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-18: <a href="CppVersion.htm">Version</a> 0.26: calculate rating values correctly",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-20: <a href="CppVersion.htm">Version</a> 0.27: added graphics to menu's, <b><a href="CppUsing.htm">using</a></b> 'Dolphin' style",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-01-23: <a href="CppVersion.htm">Version</a> 0.28: allow ConceptMapEdit arrows having solitary focus, progress on printing",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-02-12: <a href="CppVersion.htm">Version</a> 0.29: changed name to <a href="ProjectBrainweaver.htm">Brainweaver</a>, progress on printing",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-04-21: <a href="CppVersion.htm">Version</a> 0.30: shows sub-concepts maps in rating well, allows saving without going back to the <a href="CppMain.htm">main</a> menu",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-05-04: <a href="CppVersion.htm">Version</a> 0.31: improved printing <b><a href="CppFor.htm">for</a></b> student and assessor, first steps in implementing undo <a href="CppFunction.htm">function</a>ality",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-07-27: <a href="CppVersion.htm">Version</a> 0.32: first step in semi-<b><a href="CppAuto.htm">auto</a></b>mated rating mechanism",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-08-06: <a href="CppVersion.htm">Version</a> 0.33: added icons and artwork",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-08-18: <a href="CppVersion.htm">Version</a> 0.34: fixed file dialog",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-08-30: <a href="CppVersion.htm">Version</a> 0.35: fixed segmentation faults, replaced print dialogs by save file dialogs",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-09-07: <a href="CppVersion.htm">Version</a> 0.36: placed all <b><a href="CppClass.htm">classes</a></b> in <b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a>::pvdb, minor changes",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-09-15: <a href="CppVersion.htm">Version</a> 0.37: minor changes, added wordwrap in concept names",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-09-21: <a href="CppVersion.htm">Version</a> 0.38: minor changes, added wordwrap in examples in concept map <a href="CppWidget.htm">widget</a>s",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-09-29: <a href="CppVersion.htm">Version</a> 0.39: minor changes, added wordwrap in examples in rate examples dialog",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-10-03: <a href="CppVersion.htm">Version</a> 0.40: minor changes, added wordwrap in some more player"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbrating.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbrating.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> PVDBRATING_H<br/>
<a href="CppDefine.htm">#define</a> PVDBRATING_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppFunction.htm">Function</a>s to help with rating<br/>
<b><a href="CppStruct.htm">struct</a></b> Rating<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Calculate a suggested complexity<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppInt.htm">int</a></b> SuggestComplexity(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_edges, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Calculate a suggested complexity<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppInt.htm">int</a></b> SuggestComplexity(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; m_sub_concept_map);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Calculate a suggested concreteness<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppInt.htm">int</a></b> SuggestConcreteness(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Calculate a suggested concreteness<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppInt.htm">int</a></b> SuggestConcreteness(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; m_sub_concept_map);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Calculate a suggested specificity<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppInt.htm">int</a></b> SuggestSpecificity(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Calculate a suggested specificity<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppInt.htm">int</a></b> SuggestSpecificity(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; m_sub_concept_map);<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> PVDBRATING_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/pvdbrating.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/pvdbrating.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "pvdbrating.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/con<a href="CppVersion.htm">version</a>/cast.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Rating::SuggestComplexity(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_edges, <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> complexity<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> n_edges <a href="CppOperatorEqual.htm">==</a> 0&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> (n_edges <a href="CppOperatorEqual.htm">==</a> 1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> n_examples <a href="CppOperatorEqual.htm">==</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;? 0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;: (n_edges <a href="CppOperatorEqual.htm">==</a> 1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> n_examples &gt; 0) <a href="CppOperatorLogicalOr.htm">||</a> (n_edges <a href="CppOperatorEqual.htm">==</a> 2 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> n_examples <a href="CppOperatorEqual.htm">==</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? 1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 2;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> complexity;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Rating::SuggestComplexity(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; sub_concept_map)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sub_concept_map);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_edges <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(sub_concept_map-&gt;GetEdges().size());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!sub_concept_map-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> SuggestComplexity(n_edges,n_examples);<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Rating::SuggestConcreteness(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> concreteness<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> n_examples &lt; 2<br/>
&nbsp;&nbsp;&nbsp;&nbsp;? 0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;: n_examples &gt; 1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> n_examples &lt; 4<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? 1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 2;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> concreteness;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Rating::SuggestConcreteness(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; sub_concept_map)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sub_concept_map);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!sub_concept_map-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> SuggestConcreteness(n_examples);<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Rating::SuggestSpecificity(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> specificity <a href="CppOperatorAssign.htm">=</a> SuggestConcreteness(n_examples);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> specificity;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Rating::SuggestSpecificity(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; sub_concept_map)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sub_concept_map);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!sub_concept_map-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> SuggestSpecificity(n_examples);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtmain_assessor.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtmain_assessor.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQIcon.htm">QIcon</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcluster<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconcepteditdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateexamplesdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbassessormenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> CreateStyleSheet()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQDialog.htm">QDialog</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: qlineargradient(x1: 0, y1: 1, x2: 1, y2: 0, stop: 0 #bbf, stop: 1 #bff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQLabel.htm">QLabel</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 18px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier\", \"Courier New\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-weight: bold;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 1px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a> {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier New\", \"Courier\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 16px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-width: 1px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-style: solid;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 3px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a>:enabled {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: black;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ccc, stop: 1 #fff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #111;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a>:disabled {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: #888;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ccc, stop: 1 #fff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #fff;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPlainTextEdit.htm">QPlainTextEdit</a> {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 12px;&nbsp;&nbsp;font-family: \"Courier\", \"Courier New\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"}";<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test();<br/>
&nbsp;&nbsp;a.setStyleSheet(CreateStyleSheet().c_str());<br/>
&nbsp;&nbsp;a.setWindowIcon(<a href="CppQIcon.htm">QIcon</a>(":/images/R.png"));<br/>
<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog d;<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtmain_developer.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtmain_developer.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQIcon.htm">QIcon</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcluster<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconcepteditdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateexamplesdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> CreateStyleSheet()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQDialog.htm">QDialog</a> { "<br/>
<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-image: url(:/images/PicLoomBackground.png);" <a href="CppComment.htm">//</a>Sorry Joost!<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: qlineargradient(x1: 0, y1: 1, x2: 1, y2: 0, stop: 0 #bbf, stop: 1 #bff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQLabel.htm">QLabel</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 18px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier\", \"Courier New\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-weight: bold;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 1px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a> {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier New\", \"Courier\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 16px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-width: 1px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-style: solid;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 3px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a>:enabled {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: black;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ccc, stop: 1 #fff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #111;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a>:disabled {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: #888;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ccc, stop: 1 #fff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #fff;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPlainTextEdit.htm">QPlainTextEdit</a> {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 12px;&nbsp;&nbsp;font-family: \"Courier\", \"Courier New\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"}";<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
<br/>
&nbsp;&nbsp;START_<a href="CppTRACE.htm">TRACE</a>();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Perform tests<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "DEBUG mode" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::TestHelper<a href="CppFunction.htm">Function</a>s();<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test(); <a href="CppComment.htm">//</a>Tests all<br/>
&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;<a href="CppClog.htm">std::clog</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "RELEASE mode" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(1<a href="CppOperatorEqual.htm">==</a>2 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Assume <a href="CppDebug.htm">debugging</a> is really disabled");<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Delete the test file<br/>
&nbsp;&nbsp;<a href="CppRemove.htm">std::remove</a>(<a href="CppRibi.htm">ribi</a>::pvdb::File::GetTempFileName().c_str());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test();<br/>
&nbsp;&nbsp;a.setStyleSheet(CreateStyleSheet().c_str());<br/>
&nbsp;&nbsp;a.setWindowIcon(<a href="CppQIcon.htm">QIcon</a>(":/images/R.png"));<br/>
<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorNotEqual.htm">!=</a> 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostFunction.htm">boost::function</a>&lt;<b><a href="CppVoid.htm">void</a></b>(<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog *)&gt; &gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_about_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_assessor_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_create_test_files_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_modify_stylesheet_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_overview_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_print_concept_map_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_print_rating_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_concept_<b><a href="CppAuto.htm">auto</a></b>_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_concept_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_concept_map_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_examples_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rating_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_student_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_arrowitems_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_cluster_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_conceptedit_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_conceptitem_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_conceptmap_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_create_sub_concept_map_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_edge_item_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_node_item_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_qtconceptmapdisplay<a href="CppWidget.htm">widget</a>_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_qtconceptmapedit<a href="CppWidget.htm">widget</a>_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_qtconceptmaprate<a href="CppWidget.htm">widget</a>_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_<a href="CppQtRoundedTextRectItem.htm">qtroundedtextrectitem</a>_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_view_files_clicked,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_view_test_concept_maps_clicked<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppArgc.htm">argv</a>[1]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.at(i)(&amp;d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppBad_lexical_cast.htm">boost::bad_lexical_cast</a>&amp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCerr.htm">std::cerr</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Incorrect argument: please supply a number from 0 to " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> v.size() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (<a href="CppOut_of_range.htm">std::out_of_range</a>&amp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCerr.htm">std::cerr</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Incorrect argument: please supply a number from 0 to " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> v.size() <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppEndl.htm">std::endl</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
<br/>
<a href="CppComment.htm">///</a>TODO<br/>
<a href="CppComment.htm">///</a>2013-05-20:<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> ?DONE: <a href="CppIncrease.htm">Increase</a> the area of a <a href="CppQt.htm">Qt</a>NodeIdem<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;1) FAILS: by adding '<a href="CppQPainterPath.htm">QPainterPath</a> <a href="CppQt.htm">Qt</a>PvdbConceptItem::<a href="CppShape.htm">shape</a>() <b><a href="CppConst.htm">const</a></b>'<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;2) MIGHT WORK: Bypass in <a href="CppQt.htm">Qt</a>PvdbNodeItem::boundingRect<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> ?1st of May, when concluded it's a good thing to implement:<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> cluster dialog: allow more than 2 levels in clustering<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> concept map dialog: allow examples from concepts to be dragged out and promoted to <b><a href="CppNew.htm">new</a></b> conpepts<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> ?DONE: in assessor printing dialog: too <b><a href="CppLong.htm">long</a></b> concepts/examples run off the page<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> BIG<br/>
<br/>
<a href="CppComment.htm">///</a>BEFORE 2013-03-25:<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> In assessor <b><a href="CppFinal.htm">final</a></b> report screen, set the column widths to the correct width (depends on font)<br/>
<a href="CppComment.htm">///</a><br/>
<a href="CppComment.htm">///</a>DONE:<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> in assessor printing dialog: resize concept map to page size<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> FIXED BUG: <b><a href="CppIf.htm">if</a></b> an arrow is drawn between two nodes, creating another arrow between these two same nodes<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;in the opposite direction, program crashes<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> when saving in the cluster dialog, only save (i.e. <b><a href="CppDo.htm">do</a></b> not go back to <a href="CppMain.htm">main</a> menu)<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> when saving in the create concept map dialog, only save (i.e. <b><a href="CppDo.htm">do</a></b> not go back to <a href="CppMain.htm">main</a> menu)<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> sub-concept maps are messed up: relations are put at origin<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> let students print like assessors: to PDF<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> get to cross-<a href="CppCompile.htm">compile</a> the Student and Assessor <a href="CppVersion.htm">version</a>s again<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> FIXED BUG: Test concept maps <b><a href="CppDo.htm">do</a></b> not show<br/>
<br/>
<a href="CppComment.htm">///</a>TODO PERHAPS ONCE<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> add Undo <a href="CppFunction.htm">function</a>ality to cluster screen<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> add Undo <a href="CppFunction.htm">function</a>ality to concept map screen<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> Allow copy-paste of <a href="CppXml.htm">XML</a> code to display the corresponding concept map<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> Allow movement of items by keyboard in cluster dialog<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> Allow multi<a href="CppThread.htm">thread</a>ed testing, gives the following error now:<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp;[xcb] Unknown request in queue <b><a href="CppWhile.htm">while</a></b> dequeuing<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp;[xcb] Most likely <b><a href="CppThis.htm">this</a></b> is a multi-<a href="CppThread.htm">thread</a>ed client and XInit<a href="CppThread.htm">Thread</a>s has not been called<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp;[xcb] Aborting, sorry <a href="CppAbout.htm">about</a> that.<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="ProjectBrainweaver.htm">Brainweaver</a>Developer: ../../src/xcb_io.c:178: dequeue_pending_request: <a href="CppAssert.htm">Assert</a>ion `!xcb_xlib_unknown_req_in_deq' failed.<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> Make Violet Blue meet doktor Light (from Mega Man), assure they marry, so that her name becomes Violet Light-Blue<br/>
<a href="CppComment.htm">///</a><br/>
<a href="CppComment.htm">///</a>DO NEVER FORGET<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> Do not use <a href="CppAll_of.htm">std::all_of</a>, because cross-<a href="CppCompiler.htm">compiler</a> has trouble with it<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> Do not change a QGraphicItem (that is: call a paint event) outside of the paint event<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp; (<b><a href="CppThis.htm">this</a></b> was the <b><a href="CppCase.htm">case</a></b> by <b><a href="CppQtSignals.htm">signals</a></b> that caused a repaint)<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp; <a href="CppOperatorMinus.htm">-</a>&gt; trick: check <b><a href="CppFor.htm">for</a></b> <a href="CppQGraphicsRectItem.htm">QGraphicsRectItem</a>::paintingActive()<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> Use the <b><a href="CppDefault.htm">default</a></b> <b><a href="CppOperatorEqual.htm">operator==</a></b> <b><a href="CppFor.htm">for</a></b> <a href="CppPointer.htm">pointer</a> comparison of <a href="CppSmartPointer.htm">smart pointer</a>s<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> Instead of overloading <b><a href="CppOperatorEqual.htm">operator==</a></b> to compare the content <b><a href="CppFor.htm">for</a></b> all combinations of <a href="CppSmartPointer.htm">smart pointer</a>s,<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp; use IsEqual(<b><a href="CppConst.htm">const</a></b> T&amp;,<b><a href="CppConst.htm">const</a></b> T&amp;)<br/>
/<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> If a <b><a href="CppClass.htm">class</a></b> connects its <b><a href="CppQtSignals.htm">signals</a></b> to some other <b><a href="CppClass.htm">class</a></b> with a different life<a href="CppTime.htm">time</a>,<br/>
/<a href="CppComment.htm">//</a>&nbsp;&nbsp; disconnect these <b><a href="CppQtSignals.htm">signals</a></b> in its <a href="CppDestructor.htm">destructor</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtmain_student.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtmain_student.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQIcon.htm">QIcon</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcluster<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconcepteditdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateexamplesdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> CreateStyleSheet()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQDialog.htm">QDialog</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: qlineargradient(x1: 0, y1: 1, x2: 1, y2: 0, stop: 0 #bbf, stop: 1 #bff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQLabel.htm">QLabel</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 18px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier\", \"Courier New\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-weight: bold;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 1px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a> {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier New\", \"Courier\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 16px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-width: 1px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-style: solid;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 3px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a>:enabled {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: black;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ccc, stop: 1 #fff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #111;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a>:disabled {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: #888;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ccc, stop: 1 #fff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #fff;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"} "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPlainTextEdit.htm">QPlainTextEdit</a> {"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 12px;&nbsp;&nbsp;font-family: \"Courier\", \"Courier New\", Courier, monospace;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"}";<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test();<br/>
&nbsp;&nbsp;a.setStyleSheet(CreateStyleSheet().c_str());<br/>
&nbsp;&nbsp;a.setWindowIcon(<a href="CppQIcon.htm">QIcon</a>(":/images/R.png"));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filter_str <a href="CppOperatorAssign.htm">=</a> <a href="CppString.htm">std::string</a>("*.") <a href="CppOperatorPlus.htm">+</a> <a href="CppRibi.htm">ribi</a>::pvdb::File::GetFilenameExtension();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppQFile.htm">QFile</a>Dialog::getOpenFileName(0,"Kies een assessment bestand",<a href="CppQString.htm">QString</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filter_str.c_str()).toStdString();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!filename.empty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::File&gt; file(<a href="CppRibi.htm">ribi</a>::pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (...)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Gotta <b><a href="CppCatch.htm">catch</a></b> 'm all<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 1;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtmain_testconceptmap.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtmain_testconceptmap.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQIcon.htm">QIcon</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> CreateStyleSheet()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQDialog.htm">QDialog</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 1, stop: 0 #606060, stop: 1 #ffffff);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"}"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQLabel.htm">QLabel</a> { font: 24px, \"Courier\" }"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"#title { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 32px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier\";"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-weight: bold"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"}"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;""<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppQPushButton.htm">QPushButton</a> { "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;color: black;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;background-color: <a href="CppQLinearGradient.htm">QLinearGradient</a>( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #888, stop: 0.1 #999, stop: 0.49 #ccc, stop: 0.5 #bbb, stop: 1 #ccc);"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-width: 3px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-color: #444;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-style: solid;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;border-radius: 7;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding: 3px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-size: 24px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;font-family: \"Courier New\";"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding-left: 5px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;padding-right: 5px;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"}";<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;START_<a href="CppTRACE.htm">TRACE</a>();<br/>
&nbsp;&nbsp;a.setStyleSheet(CreateStyleSheet().c_str());<br/>
&nbsp;&nbsp;a.setWindowIcon(<a href="CppQIcon.htm">QIcon</a>(":/images/R.png"));<br/>
&nbsp;&nbsp;pvdb::File::Test();<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d;<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtmainassessor.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtmainassessor.cpp" border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qtassessormenudialog.h"<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQApplication.htm">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>AssessorMenuDialog w;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbaboutdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbaboutdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBABOUTDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBABOUTDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>Pvdb<a href="CppAbout.htm">About</a>Dialog<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppQtAboutDialog.htm">QtAboutDialog</a> <b><a href="CppFor.htm">for</a></b> <b><a href="CppThis.htm">this</a></b> project<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtAboutDialog.htm">QtAboutDialog</a>&gt; Get();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBABOUTDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbaboutdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbaboutdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdb<a href="CppAbout.htm">about</a>dialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLayout.htm">QLayout</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPixmap.htm">QPixmap</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppAbout.htm">about</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtArrowItem.htm">qtarrowitem</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtKeyboardFriendlyGraphicsView.htm">qtkeyboardfriendlygraphicsview</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtQuadBezierArrowItem.htm">qtquadbezierarrowitem</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtScopedDisable.htm">qtscopeddisable</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="CppQtAboutDialog.htm">QtAboutDialog</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Pvdb<a href="CppAbout.htm">About</a>Dialog::Get()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">About</a> <a href="CppAbout.htm">about</a> <a href="CppOperatorAssign.htm">=</a> pvdb::MenuDialog().GetAbout();<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtArrowItem.htm">QtArrowItem</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtArrowItem.htm">QtArrowItem</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtQuadBezierArrowItem.htm">QtQuadBezierArrowItem</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtQuadBezierArrowItem.htm">QtQuadBezierArrowItem</a>::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("<a href="CppQtScopedDisable.htm">QtScopedDisable</a> <a href="CppVersion.htm">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQtScopedDisable.htm">QtScopedDisable</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;::Get<a href="CppVersion.htm">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.htm">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.htm">Library</a>("Artwork from LibreOffice");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtAboutDialog.htm">QtAboutDialog</a>&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQtAboutDialog.htm">QtAboutDialog</a>(<a href="CppAbout.htm">about</a>));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> Loom image<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;layout());<br/>
&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>(d.get());<br/>
&nbsp;&nbsp;label-&gt;setPixmap(<a href="CppQPixmap.htm">QPixmap</a>(":/images/PicLoom<a href="CppAbout.htm">About</a>.png"));<br/>
&nbsp;&nbsp;d-&gt;layout()-&gt;addWidget(label);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> d;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbassessormenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbassessormenudialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBASSESSORMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBASSESSORMENUDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_create_assessment_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_quit_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_assess_result_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog *ui;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBASSESSORMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbassessormenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbassessormenudialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbassessormenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtpvdb<a href="CppAbout.htm">about</a>dialog.h"<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "pvdbmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentcompletedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbassessormenudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::~<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::on_button_create_assessment_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::on_button_about_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d(<a href="CppQt.htm">Qt</a>Pvdb<a href="CppAbout.htm">About</a>Dialog::Get());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
&nbsp;&nbsp;d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::on_button_quit_clicked()<br/>
{<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog::on_button_assess_result_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Load assessent file<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetOpenFileDialog();<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Kies een assessment bestand");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!v.isEmpty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> v[0].toStdString();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbbrushfactory.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbbrushfactory.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBBRUSHFACTORY_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBBRUSHFACTORY_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQBrush.htm">QBrush</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>Class <b><a href="CppFor.htm">for</a></b> holding some <a href="CppQBrush.htm">QBrush</a> <a href="CppInstance.htm">instances</a><br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbBrushFactory<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a brush its name<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> BrushToStr(<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a>&amp; brush);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Blue brush, to be used in all derived <b><a href="CppClass.htm">classes</a></b> <b><a href="CppFor.htm">for</a></b> uniform coloring<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> CreateBlueGradientBrush();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Gold brush, to be used in all derived <b><a href="CppClass.htm">classes</a></b> <b><a href="CppFor.htm">for</a></b> uniform coloring<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> CreateGoldGradientBrush();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Gray brush, to be used in all derived <b><a href="CppClass.htm">classes</a></b> <b><a href="CppFor.htm">for</a></b> uniform coloring<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> CreateGrayGradientBrush();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Green brush, to be used in all derived <b><a href="CppClass.htm">classes</a></b> <b><a href="CppFor.htm">for</a></b> uniform coloring<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> CreateGreenGradientBrush();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Red brush, to be used in all derived <b><a href="CppClass.htm">classes</a></b> <b><a href="CppFor.htm">for</a></b> uniform coloring<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> CreateRedGradientBrush();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Yellow brush, to be used in all derived <b><a href="CppClass.htm">classes</a></b> <b><a href="CppFor.htm">for</a></b> uniform coloring<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> CreateYellowGradientBrush();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Near-white brush, to be used in all derived <b><a href="CppClass.htm">classes</a></b> <b><a href="CppFor.htm">for</a></b> uniform coloring<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> CreateWhiteGradientBrush();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The bottom coordinat of a gradient<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sm_bottom;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The left coordinat of a gradient<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sm_left;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The right coordinat of a gradient<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sm_right;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The top coordinat of a gradient<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sm_top;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The low color value: low values <b><a href="CppReturn.htm">return</a></b> in darker brushes<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sm_color_low_value;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The middle color value: higher values <b><a href="CppReturn.htm">return</a></b> in lighter brushes<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sm_color_mid_value;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBBRUSHFACTORY_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbbrushfactory.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbbrushfactory.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbbrushfactory.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLinearGradient.htm">QLinearGradient</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::sm_bottom <a href="CppOperatorAssign.htm">=</a> 10;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::sm_left <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>100;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::sm_right <a href="CppOperatorAssign.htm">=</a> 100;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::sm_top <a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>10;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::sm_color_low_value&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;64;<br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::sm_color_mid_value&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> 128;<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::BrushToStr(<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a>&amp; brush)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (brush <a href="CppOperatorEqual.htm">==</a> CreateBlueGradientBrush()) <b><a href="CppReturn.htm">return</a></b> "blue";<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (brush <a href="CppOperatorEqual.htm">==</a> CreateGoldGradientBrush()) <b><a href="CppReturn.htm">return</a></b> "gold";<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (brush <a href="CppOperatorEqual.htm">==</a> CreateGrayGradientBrush()) <b><a href="CppReturn.htm">return</a></b> "gray";<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (brush <a href="CppOperatorEqual.htm">==</a> CreateGreenGradientBrush()) <b><a href="CppReturn.htm">return</a></b> "green";<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (brush <a href="CppOperatorEqual.htm">==</a> CreateRedGradientBrush()) <b><a href="CppReturn.htm">return</a></b> "red";<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (brush <a href="CppOperatorEqual.htm">==</a> CreateYellowGradientBrush()) <b><a href="CppReturn.htm">return</a></b> "yellow";<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (brush <a href="CppOperatorEqual.htm">==</a> CreateWhiteGradientBrush()) <b><a href="CppReturn.htm">return</a></b> "white";<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "unknown";<br/>
<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateBlueGradientBrush()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQLinearGradient.htm">QLinearGradient</a> linearGradient(sm_left,sm_top,sm_right,sm_bottom);<br/>
&nbsp;&nbsp;linearGradient.setColorAt(0.0,<a href="CppQColor.htm">QColor</a>( sm_color_mid_value, sm_color_mid_value,255));<br/>
&nbsp;&nbsp;linearGradient.setColorAt(1.0,<a href="CppQColor.htm">QColor</a>(255,255,255));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> linearGradient;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateGoldGradientBrush()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQLinearGradient.htm">QLinearGradient</a> linearGradient(sm_left,sm_top,sm_right,sm_bottom);<br/>
&nbsp;&nbsp;linearGradient.setColorAt(0.0,<a href="CppQColor.htm">QColor</a>( sm_color_mid_value, sm_color_mid_value,sm_color_low_value));<br/>
&nbsp;&nbsp;linearGradient.setColorAt(1.0,<a href="CppQColor.htm">QColor</a>(255,255,sm_color_low_value));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> linearGradient;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateGrayGradientBrush()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQLinearGradient.htm">QLinearGradient</a> linearGradient(sm_left,sm_top,sm_right,sm_bottom);<br/>
&nbsp;&nbsp;linearGradient.setColorAt(0.0,<a href="CppQColor.htm">QColor</a>(196,196,196));<br/>
&nbsp;&nbsp;linearGradient.setColorAt(1.0,<a href="CppQColor.htm">QColor</a>(255,255,255));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> linearGradient;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateGreenGradientBrush()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQLinearGradient.htm">QLinearGradient</a> linearGradient(sm_left,sm_top,sm_right,sm_bottom);<br/>
&nbsp;&nbsp;linearGradient.setColorAt(0.0,<a href="CppQColor.htm">QColor</a>( sm_color_mid_value,255, sm_color_mid_value));<br/>
&nbsp;&nbsp;linearGradient.setColorAt(1.0,<a href="CppQColor.htm">QColor</a>(255,255,255));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> linearGradient;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateRedGradientBrush()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQLinearGradient.htm">QLinearGradient</a> linearGradient(sm_left,sm_top,sm_right,sm_bottom);<br/>
&nbsp;&nbsp;linearGradient.setColorAt(0.0,<a href="CppQColor.htm">QColor</a>(255, sm_color_mid_value, sm_color_mid_value));<br/>
&nbsp;&nbsp;linearGradient.setColorAt(1.0,<a href="CppQColor.htm">QColor</a>(255,255,255));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> linearGradient;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateYellowGradientBrush()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQLinearGradient.htm">QLinearGradient</a> linearGradient(sm_left,sm_top,sm_right,sm_bottom);<br/>
&nbsp;&nbsp;linearGradient.setColorAt(0.0,<a href="CppQColor.htm">QColor</a>(255,255, sm_color_mid_value));<br/>
&nbsp;&nbsp;linearGradient.setColorAt(1.0,<a href="CppQColor.htm">QColor</a>(255,255,255));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> linearGradient;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateWhiteGradientBrush()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQLinearGradient.htm">QLinearGradient</a> linearGradient(sm_left,sm_top,sm_right,sm_bottom);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> low_value <a href="CppOperatorAssign.htm">=</a> 250;<br/>
&nbsp;&nbsp;linearGradient.setColorAt(0.0,<a href="CppQColor.htm">QColor</a>(low_value,low_value,low_value));<br/>
&nbsp;&nbsp;linearGradient.setColorAt(1.0,<a href="CppQColor.htm">QColor</a>(255,255,255));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> linearGradient;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbclusterdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbclusterdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCLUSTERDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCLUSTERDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>The Dialog in which the user clusters concepts and examples<br/>
<a href="CppComment.htm">///</a>If the file supplied has no cluster, <b><a href="CppThis.htm">this</a></b> dialog creates a cluster<br/>
<a href="CppComment.htm">///</a>because the <a href="CppWidget.htm">widget</a> needs something to work on<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbClusterDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Do some random stuff, e.g. adding some concepts with examples<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoRandomStuff();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * Get<a href="CppWidget.htm">Widget</a>();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * Get<a href="CppWidget.htm">Widget</a>() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Does the dialog want to go back to the student menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GoBackToMenu() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_back_to_menu; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Save to disk<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename);<br/>
<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Respond to the following keys:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>F2: edit current item<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Delete: remove current item<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_add_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_next_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbClusterDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Does the dialog want to go back to the student menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_back_to_menu;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The file<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The cluster <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppAdd.htm">Add</a> a Cluster to the file <b><a href="CppIf.htm">if</a></b> it is not yet present,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> from the file its cluster<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * BuildWidget(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start saving procedure, with request of filename<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCLUSTERDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbclusterdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbclusterdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFstreamH.htm">fstream</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppAlgorithm.htm">algorithm</a>/string/trim_all.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQMessageBox.htm">QMessageBox</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbcenternodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcenternode.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcluster<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbedge.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbedgefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamplefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfilefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbclusterdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::<a href="CppQt.htm">Qt</a>PvdbClusterDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbClusterDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(BuildWidget(file))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*file,*m_file));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a> <a href="CppOperatorLogicalOr.htm">||</a> !m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( (file-&gt;GetCluster() <a href="CppOperatorLogicalOr.htm">||</a> !file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "The dialog creates a cluster when there is no concept map"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Or keeps cluster <b><a href="CppNullptr.htm">nullptr</a></b> when there is a concept map");<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> the cluster <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!ui-&gt;<a href="CppWidget.htm">widget</a>_tree-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;QGridLayout * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("Cannot start a <b><a href="CppNew.htm">new</a></b> clustering when there is already a concept map created");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_tree-&gt;setLayout(layout);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Enabled/disable controls<br/>
&nbsp;&nbsp;ui-&gt;button_add-&gt;setEnabled(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>) m_<a href="CppWidget.htm">widget</a>-&gt;setEnabled( !file-&gt;GetConceptMap() );<br/>
&nbsp;&nbsp;ui-&gt;edit-&gt;setEnabled(!file-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display the focal <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;ui-&gt;label_<a href="CppQuestion.htm">question</a>-&gt;setText(m_file-&gt;Get<a href="CppQuestion.htm">Question</a>().c_str());<br/>
}<br/>
<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::~<a href="CppQt.htm">Qt</a>PvdbClusterDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/WARNING: assume ui-&gt;<a href="CppWidget.htm">widget</a> is not available <a href="CppAny.htm">any</a>more<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::BuildWidget(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create a cluster a <b><a href="CppNew.htm">new</a></b> cluster<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!file-&gt;GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::Create( {} );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Read an existing cluster<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetCluster())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppWidget.htm">widget</a>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Only where there is an existing concept map, and no existing cluster, will <b><a href="CppThis.htm">this</a></b> <b><a href="CppReturn.htm">return</a></b> null<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppNullptr.htm">nullptr</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::DoRandomStuff()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!Get<a href="CppWidget.htm">Widget</a>()) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetCluster());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; before <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::DeepCopy(m_file-&gt;GetCluster());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(before <a href="CppOperatorNotEqual.htm">!=</a> m_file-&gt;GetCluster());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*before,*Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster()));<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;DoRandomStuff();<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*before,*Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster()));<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_file-&gt;SetCluster(<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_file-&gt;GetCluster()-&gt;Empty());<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check that writing to pvdb::File works<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::FileFactory::DeepCopy(m_file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::Get<a href="CppWidget.htm">Widget</a>() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a> <a href="CppOperatorLogicalOr.htm">||</a> !m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::Get<a href="CppWidget.htm">Widget</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Calls the <b><a href="CppConst.htm">const</a></b> <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <a href="CppMemberFunction.htm">member function</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>To avoid duplication in <b><a href="CppConst.htm">const</a></b> and non-<a href="CppConstMemberFunction.htm">const member function</a>s [1]<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[1] <a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C<a href="CppOperatorIncrement.htm">++</a> (3rd edition). ISBN: 0-321-33487-6.<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;Item 3, paragraph 'Avoid duplication in <b><a href="CppConst.htm">const</a></b> and non-<a href="CppConstMemberFunction.htm">const member function</a>s'<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppConst_cast.htm">const_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>*&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst_cast.htm">const_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog*&gt;(<b><a href="CppThis.htm">this</a></b>)-&gt;Get<a href="CppWidget.htm">Widget</a>());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;close();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_S)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Save();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !(e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ShiftModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Z)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQMessageBox.htm">QMessageBox</a> box;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.setText("TODO: Undo");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.exec();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ShiftModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Z)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQMessageBox.htm">QMessageBox</a> box;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.setText("TODO: Redo");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.exec();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check that writing to pvdb::File works<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::FileFactory::DeepCopy(m_file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::on_button_add_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a> <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "This button can only be clicked when there is a <a href="CppWidget.htm">widget</a>");<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::trim_all_copy(<a href="CppString.htm">std::string</a>(" \t x \t ")) <a href="CppOperatorEqual.htm">==</a> <a href="CppString.htm">std::string</a>("x"));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::<a href="CppAlgorithm.htm">algorithm</a>::trim_all_copy(ui-&gt;edit-&gt;text().toStdString());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (text.empty()) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQString.htm">QString</a>List v;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>v.append(text.c_str());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppWidget.htm">widget</a>-&gt;addTopLevelItem(<b><a href="CppNew.htm">new</a></b> <a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a>(v));<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;<a href="CppAdd.htm">Add</a>(text);<br/>
&nbsp;&nbsp;ui-&gt;edit-&gt;clear();<br/>
&nbsp;&nbsp;ui-&gt;edit-&gt;setFocus();<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check that writing to pvdb::File works<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::FileFactory::DeepCopy(m_file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file <a href="CppOperatorNotEqual.htm">!=</a> m_file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*file-&gt;GetCluster(),*Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster()));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::on_button_next_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (Get<a href="CppWidget.htm">Widget</a>() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;isEnabled()) <a href="CppComment.htm">//</a>Save concept map, when user is all<br/>
&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(cluster-&gt;Get().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file-&gt;SetCluster(cluster);<br/>
<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>File's cluster and <a href="CppWidget.htm">widget</a>'s cluster should be the same<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>The concept map is either (1) not yet created (2) already present<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_file-&gt;GetConceptMap() <a href="CppOperatorLogicalOr.htm">||</a> m_file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(m_file);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>By now, the concept map must have been (1) created (2) already present<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d.GoBackToMenu())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;close();<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Same test as in <a href="CppConstructor.htm">constructor</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_file-&gt;GetConceptMap()-&gt;GetNodes().size() &gt; 1) <a href="CppComment.htm">//</a>1, as node[0] is focal <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_<a href="CppWidget.htm">widget</a>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_add-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Edge&gt; &gt; Edges;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; &gt; Nodes;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Regular tests<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::File::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &amp; file)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_cluster <a href="CppOperatorAssign.htm">=</a> file-&gt;GetCluster().get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_concept_map <a href="CppOperatorAssign.htm">=</a> file-&gt;GetConceptMap().get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbClusterDialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog(file));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test cluster copying, <b><a href="CppIf.htm">if</a></b> there<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "the cluster dialog used an existing or created a cluster");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> d-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; before <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::DeepCopy(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(before);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(before <a href="CppOperatorNotEqual.htm">!=</a> file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*file-&gt;GetCluster(),*before));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;<a href="CppAdd.htm">Add</a>("Modification!");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!IsEqual(*file-&gt;GetCluster(),*before)); <a href="CppComment.htm">//</a>Does not work, must obtain the cluster from the <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*d-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster(),*before)); <a href="CppComment.htm">//</a><a href="CppWidget.htm">Widget</a> updates the cluster<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::File::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &amp; file)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_cluster <a href="CppOperatorAssign.htm">=</a> file-&gt;GetCluster().get(); <a href="CppComment.htm">//</a>.get() needed <b><a href="CppFor.htm">for</a></b> cross<a href="CppCompiler.htm">compiler</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_concept_map <a href="CppOperatorAssign.htm">=</a> file-&gt;GetConceptMap().get(); <a href="CppComment.htm">//</a>.get() needed <b><a href="CppFor.htm">for</a></b> cross<a href="CppCompiler.htm">compiler</a><br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbClusterDialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog(file));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d-&gt;ui-&gt;button_add-&gt;isEnabled());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; before <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::DeepCopy(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(before);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(before <a href="CppOperatorNotEqual.htm">!=</a> file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*file-&gt;GetCluster(),*before));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;edit-&gt;setText("modification");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d-&gt;ui-&gt;button_add-&gt;isEnabled())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;on_button_add_clicked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*before,*d-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbClusterDialog must be enabled <b><a href="CppIf.htm">if</a></b> there is no concept map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "TESTQUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::GetTest( {0,1,2} );<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>()-&gt;isEnabled()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="CppQt.htm">Qt</a>Cluster<a href="CppWidget.htm">Widget</a> is enabled only when there is no ConceptMap");<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbClusterDialog must be disabled <b><a href="CppIf.htm">if</a></b> there are more nodes in the concept map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "TESTQUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::GetTest( { 0,1,2 } );<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetCluster(cluster);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept_d(pvdb::ConceptFactory::Create("Concept F"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept_e(pvdb::ConceptFactory::GetTests().at(3));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept_f(pvdb::ConceptFactory::GetTests().at(4));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; node_a(pvdb::CenterNodeFactory::Create(<a href="CppQuestion.htm">question</a>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; node_b(pvdb::NodeFactory::GetTests().at(1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; node_c(pvdb::NodeFactory::GetTests().at(2));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Nodes nodes <a href="CppOperatorAssign.htm">=</a> { node_a, node_b, node_c };<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Edge&gt; edge_a(pvdb::EdgeFactory::Create(concept_d,1.2,3.4,nodes.at(0),<b><a href="CppFalse.htm">false</a></b>,nodes.at(1),<b><a href="CppTrue.htm">true</a></b>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Edge&gt; edge_b(pvdb::EdgeFactory::Create(concept_e,2.3,4.5,nodes.at(1),<b><a href="CppFalse.htm">false</a></b>,nodes.at(2),<b><a href="CppTrue.htm">true</a></b>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Edge&gt; edge_c(pvdb::EdgeFactory::Create(concept_f,3.4,5.6,nodes.at(2),<b><a href="CppFalse.htm">false</a></b>,nodes.at(0),<b><a href="CppTrue.htm">true</a></b>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Edges edges <a href="CppOperatorAssign.htm">=</a> { edge_a, edge_b, edge_c };<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::Create(nodes,edges));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d.Get<a href="CppWidget.htm">Widget</a>()-&gt;isEnabled()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="CppQt.htm">Qt</a>Cluster<a href="CppWidget.htm">Widget</a> is disabled when there is a filled ConceptMap");<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::on_edit_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;edit-&gt;text() <a href="CppOperatorEqual.htm">==</a> arg1);<br/>
&nbsp;&nbsp;ui-&gt;button_add-&gt;setEnabled(!m_file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> arg1.size() &gt; 0);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::Save()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla de clustering op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> <a href="CppString.htm">std::string</a>(".") <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save(filename);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppThis.htm">this</a></b>-&gt;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; <a href="CppComment.htm">//</a>2013-04-19 Request by client<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>close(); <a href="CppComment.htm">//</a>2013-04-19 Request by client<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file-&gt;SetCluster(cluster);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetCluster() <a href="CppOperatorEqual.htm">==</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetCluster());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;m_file-&gt;Save(filename);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbClusterDialog::on_button_save_clicked()<br/>
{<br/>
&nbsp;&nbsp;Save();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbclusterwidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbclusterwidget.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCLUSTERWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCLUSTERWIDGET_H<br/>
<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppMapH.htm">map</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTreeWidget.htm">QTreeWidget</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQTreeWidget.htm">QTreeWidget</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppAdd.htm">Add</a> a top-level item<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> <a href="CppAdd.htm">Add</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; text);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Do something random<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoRandomStuff();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the cluster (after reading from the dialog)<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; GetCluster();<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> dropEvent(QDropEvent *event);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> RemoveEmptyItem(<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a>*,<b><a href="CppInt.htm">int</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Block: <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item must be added instead<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> addTopLevelItem(<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> *item) { <a href="CppQTreeWidget.htm">QTreeWidget</a>::addTopLevelItem(item); }<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The cluster<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; m_cluster;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Build the <a href="CppWidget.htm">widget</a> from the cluster<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> BuildCluster();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Find out the depth of an item<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetDepth(<b><a href="CppConst.htm">const</a></b> <a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> item) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Write the <a href="CppWidget.htm">widget</a> its data to the cluster<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> WriteToCluster();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCLUSTERWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbclusterwidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbclusterwidget.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcluster<a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexample.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamplefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamplesfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> with the only <a href="CppFunction.htm">function</a> of storing a pvdb::Competency additionally<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item : <b><a href="CppPublic.htm">public</a></b> <a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Competency competency,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> is_complex,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_complexity,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_concreteness,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_specifity)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;: <a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a>(0),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_competency(competency),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_is_complex(is_complex),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_rating_complexity(rating_complexity),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_rating_concreteness(rating_concreteness),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_rating_specifity(rating_specifity)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Competency m_competency;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> m_is_complex;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_rating_complexity;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_rating_concreteness;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_rating_specifity;<br/>
};<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; cluster,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQTreeWidget.htm">QTreeWidget</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_cluster(cluster)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Must have a cluster to work on");<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Hide the header<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setHeaderHidden(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Let the row colors alternate<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setAlternatingRowColors(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Allow items to be drag and dropped inside of the <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setDragDropMode(QAbstractItemView::InternalMove);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Let the drag and drop be animated<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setAnimated(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;BuildCluster();<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppSignalMacro.htm">SIGNAL</a>(itemChanged(<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a>*,<b><a href="CppInt.htm">int</a></b>)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppSLOT.htm">SLOT</a>(RemoveEmptyItem(<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a>*,<b><a href="CppInt.htm">int</a></b>)));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::<a href="CppAdd.htm">Add</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; text)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdb::Competency::un<a href="CppInitialize.htm">initialize</a>d,<b><a href="CppTrue.htm">true</a></b>,-1,-1,-1);<br/>
&nbsp;&nbsp;item-&gt;setText(0,text.c_str());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addTopLevelItem(item);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::DoRandomStuff()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdb::Competency::misc,<b><a href="CppTrue.htm">true</a></b>,0,1,2);<br/>
&nbsp;&nbsp;top-&gt;setText(0,"SOMETEXT");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> child_item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdb::Competency::un<a href="CppInitialize.htm">initialize</a>d,<b><a href="CppTrue.htm">true</a></b>,-1,0,2);<br/>
&nbsp;&nbsp;child_item-&gt;setText(0,"SOMETEXT");<br/>
&nbsp;&nbsp;top-&gt;addChild(child_item);<br/>
&nbsp;&nbsp;child_item-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addTopLevelItem(top);<br/>
&nbsp;&nbsp;top-&gt;setExpanded(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;top-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDropEnabled);<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::dropEvent(QDropEvent *event)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQTreeWidget.htm">QTreeWidget</a>::dropEvent(event);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Fix the possibility of dropping a tree with depth three<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> done <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItemCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_top; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItemCount());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i); <a href="CppComment.htm">//</a>FIX<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i));&nbsp;&nbsp;<a href="CppComment.htm">//</a>BUG 2012-12-30<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(top);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_child <a href="CppOperatorAssign.htm">=</a> top-&gt;childCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>n_child; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(j &lt; top-&gt;childCount());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check <b><a href="CppIf.htm">if</a></b> top-&gt;child(j) has children<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (top-&gt;child(j)-&gt;childCount() &gt; 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Move top-&gt;child(j) to top<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> clone <a href="CppOperatorAssign.htm">=</a> top-&gt;child(j)-&gt;clone(); <a href="CppComment.htm">//</a>FIX<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> clone <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(top-&gt;child(j)-&gt;clone()); <a href="CppComment.htm">//</a>BUG 2012-12-29<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(clone);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addTopLevelItem(clone);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;removeChild(top-&gt;child(j));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j <a href="CppOperatorAssign.htm">=</a> n_child <a href="CppOperatorMinus.htm">-</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i <a href="CppOperatorAssign.htm">=</a> n_top <a href="CppOperatorMinus.htm">-</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>End the <b><a href="CppWhile.htm">while</a></b> loop <b><a href="CppIf.htm">if</a></b> no parents were moved<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (done) <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check that there are no items at depth three<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItemCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_top; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i); <a href="CppComment.htm">//</a>FIX<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i)); <a href="CppComment.htm">//</a>BUG 2012-12-30<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(top);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_child <a href="CppOperatorAssign.htm">=</a> top-&gt;childCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>n_child; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (top-&gt;child(j)-&gt;childCount() &gt; 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not find a child item within a child item");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Process all items<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItemCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_top; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i); <a href="CppComment.htm">//</a>FIX<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i)); <a href="CppComment.htm">//</a>BUG 2012-12-30<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(top);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Let all top items <b><a href="CppAuto.htm">auto</a></b>-expand<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;setExpanded(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Allow dropping on top-level items<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDropEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetDepth(top)<a href="CppOperatorEqual.htm">==</a>0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_child <a href="CppOperatorAssign.htm">=</a> top-&gt;childCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>n_child; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetDepth(top-&gt;child(j))<a href="CppOperatorEqual.htm">==</a>1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Disallow dropping on non-top-level items<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;child(j)-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::GetCluster()<br/>
{<br/>
&nbsp;&nbsp;WriteToCluster();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_cluster;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::GetDepth(<b><a href="CppConst.htm">const</a></b> <a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> item) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item);<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> depth <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * copy <a href="CppOperatorAssign.htm">=</a> item-&gt;parent();<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b>(copy)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>depth;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;copy <a href="CppOperatorAssign.htm">=</a> copy-&gt;parent();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> depth;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Without <b><a href="CppThis.htm">this</a></b> seemingly useless <a href="CppMemberFunction.htm">member function</a>,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>the <a href="CppWidget.htm">widget</a> cannot be edited<br/>
&nbsp;&nbsp;<a href="CppQTreeWidget.htm">QTreeWidget</a>::keyPressEvent(event);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::BuildCluster()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_cluster);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;isHeaderHidden());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;alternatingRowColors());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;dragDropMode() <a href="CppOperatorEqual.htm">==</a> QAbstractItemView::InternalMove);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;isAnimated());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;clear();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_cluster);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt;&amp; v <a href="CppOperatorAssign.htm">=</a> m_cluster-&gt;Get();<br/>
&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[<b><a href="CppThis.htm">this</a></b>](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; concept)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingComplexity() <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingComplexity() <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> top<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb::Competency::un<a href="CppInitialize.htm">initialize</a>d, <a href="CppComment.htm">//</a>A concept is not classified in competencies<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;GetIsComplex(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;GetRatingComplexity(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;GetRatingConcreteness(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;GetRatingSpecificity()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;setText(0,concept-&gt;GetName().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Example&gt; &gt; examples <a href="CppOperatorAssign.htm">=</a> concept-&gt;GetExamples()-&gt;Get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(examples.begin(),examples.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[top,<b><a href="CppThis.htm">this</a></b>](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Example&gt;&amp; example)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> child_item<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;example-&gt;GetCompetency(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;example-&gt;GetIsComplex(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>1, <a href="CppComment.htm">//</a>An example is not rated <b><a href="CppFor.htm">for</a></b> complexity&nbsp;&nbsp; <a href="CppComment.htm">//</a>FIX 2013-02-03<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>1, <a href="CppComment.htm">//</a>An example is not rated <b><a href="CppFor.htm">for</a></b> concreteness <a href="CppComment.htm">//</a>FIX 2013-02-03<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>1&nbsp;&nbsp;<a href="CppComment.htm">//</a>An example is not rated <b><a href="CppFor.htm">for</a></b> specifity&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>FIX 2013-02-03<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child_item-&gt;setText(0,example-&gt;GetText().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;addChild(child_item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child_item-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addTopLevelItem(top);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;setExpanded(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDropEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::RemoveEmptyItem(<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a>* item,<b><a href="CppInt.htm">int</a></b> col)<br/>
{<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (item-&gt;text(col).isEmpty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Started <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::Test");<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt;&amp; c: pvdb::ClusterFactory::GetTests())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!c) <b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a> w(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(w.topLevelItemCount() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(c-&gt;Get().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; d <a href="CppOperatorAssign.htm">=</a> pvdb::ClusterFactory::DeepCopy(w.GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c <a href="CppOperatorNotEqual.htm">!=</a> d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*c,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb::Competency::misc,<b><a href="CppTrue.htm">true</a></b>,0,1,2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(0,<a href="CppQString.htm">QString</a>("An extra line"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.addTopLevelItem(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(w.topLevelItemCount() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(c-&gt;Get().size()) <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Cluster&gt; e <a href="CppOperatorAssign.htm">=</a> w.GetCluster();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c <a href="CppOperatorEqual.htm">==</a> e);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c <a href="CppOperatorNotEqual.htm">!=</a> d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*c,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( IsEqual(*c,*e));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*d,*e));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::Test completed successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCluster<a href="CppWidget.htm">Widget</a>::WriteToCluster()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt; concepts;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItemCount();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_top; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i); <a href="CppComment.htm">//</a>FIX 2012-12-30<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i)); <a href="CppComment.htm">//</a>BUG 2012-12-30<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(top);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> name <a href="CppOperatorAssign.htm">=</a> top-&gt;text(0).toStdString();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Example&gt; &gt; examples;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_child <a href="CppOperatorAssign.htm">=</a> top-&gt;childCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>n_child; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> pvdb_item<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(top-&gt;child(j));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> pvdb::Competency competency <a href="CppOperatorAssign.htm">=</a> pvdb_item ? pvdb_item-&gt;m_competency : pvdb::Competency::un<a href="CppInitialize.htm">initialize</a>d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetDepth(top-&gt;child(j))<a href="CppOperatorEqual.htm">==</a>1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Example&gt; p(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb::ExampleFactory::Create(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top-&gt;child(j)-&gt;text(0).toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;competency<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;examples.push_back(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> pvdb_top <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbTree<a href="CppWidget.htm">Widget</a>Item *&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;topLevelItem(i)); <a href="CppComment.htm">//</a>FIX 2012-12-30<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concepts.push_back(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::Create(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb::ExamplesFactory::Create(examples),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb_top ? pvdb_top-&gt;m_is_complex : <b><a href="CppTrue.htm">true</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb_top ? pvdb_top-&gt;m_rating_complexity : <a href="CppOperatorMinus.htm">-</a>1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb_top ? pvdb_top-&gt;m_rating_concreteness : <a href="CppOperatorMinus.htm">-</a>1,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb_top ? pvdb_top-&gt;m_rating_specifity : <a href="CppOperatorMinus.htm">-</a>1<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concepts.back());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_cluster-&gt;SetConcepts(concepts);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_cluster);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n_top <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_cluster-&gt;Get().size())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "As much top-level items in a <a href="CppQt.htm">Qt</a>Cluster<a href="CppWidget.htm">Widget</a> as Concepts in a Cluster");<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcompetency.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcompetency.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCOMPETENCY_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCOMPETENCY_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppMapH.htm">map</a>&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQColor.htm">QColor</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQIcon.htm">QIcon</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbcompetency.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>Class to <a href="CppConvert.htm">convert</a> pvdb::Competency to <a href="CppQColor.htm">QColor</a> and vice versa<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>Competency<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a <a href="CppQColor.htm">QColor</a> to a pvdb::Competency<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> pvdb::Competency ColorToCompetency(<b><a href="CppConst.htm">const</a></b> <a href="CppQColor.htm">QColor</a>&amp; color);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a pvdb::Competency to a <a href="CppQColor.htm">QColor</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppQColor.htm">QColor</a> CompetencyToColor(<b><a href="CppConst.htm">const</a></b> pvdb::Competency competency);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a pvdb::Competency to a <a href="CppQIcon.htm">QIcon</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppQIcon.htm">QIcon</a> CompetencyToIcon(<b><a href="CppConst.htm">const</a></b> pvdb::Competency competency);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.htm">Convert</a> a <a href="CppQIcon.htm">QIcon</a> to a pvdb::Competency<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> pvdb::Competency IconToCompetency(<b><a href="CppConst.htm">const</a></b> <a href="CppQIcon.htm">QIcon</a>&amp; icon);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The map between pvdb::Competency and <a href="CppQColor.htm">QColor</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppMap.htm">std::map</a>&lt;pvdb::Competency,<a href="CppQColor.htm">QColor</a>&gt; m_color_map;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The map between pvdb::Competency and <a href="CppQIcon.htm">QIcon</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppMap.htm">std::map</a>&lt;pvdb::Competency,<a href="CppQIcon.htm">QIcon</a>&gt; m_icon_map;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create map between pvdb::Competency and <a href="CppQColor.htm">QColor</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppMap.htm">std::map</a>&lt;pvdb::Competency,<a href="CppQColor.htm">QColor</a>&gt; CreateColorMap();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create map between pvdb::Competency and <a href="CppQIcon.htm">QIcon</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppMap.htm">std::map</a>&lt;pvdb::Competency,<a href="CppQIcon.htm">QIcon</a>&gt; CreateIconMap();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCOMPETENCY_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcompetency.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcompetency.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcompetency.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQImage.htm">QImage</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPixmap.htm">QPixmap</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppMap.htm">std::map</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Competency,<a href="CppQColor.htm">QColor</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::m_color_map <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::CreateColorMap();<br/>
<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppMap.htm">std::map</a>&lt;pvdb::Competency,<a href="CppQIcon.htm">QIcon</a> &gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::m_icon_map&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::CreateIconMap();<br/>
<a href="CppMap.htm">std::map</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Competency,<a href="CppQIcon.htm">QIcon</a> &gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::m_icon_map;<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::Competency <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::ColorToCompetency(<b><a href="CppConst.htm">const</a></b> <a href="CppQColor.htm">QColor</a>&amp; color)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppFind_if.htm">std::find_if</a>(m_color_map.begin(),m_color_map.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[color](<b><a href="CppConst.htm">const</a></b> <a href="CppPair.htm">std::pair</a>&lt;pvdb::Competency,<a href="CppQColor.htm">QColor</a>&gt;&amp; p)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; color.red() <a href="CppOperatorEqual.htm">==</a> p.second.red()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> color.green() <a href="CppOperatorEqual.htm">==</a> p.second.green()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> color.blue() <a href="CppOperatorEqual.htm">==</a> p.second.blue();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>m_color_map.end());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> iter-&gt;first;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQColor.htm">QColor</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::CompetencyToColor(<b><a href="CppConst.htm">const</a></b> pvdb::Competency competency)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> m_color_map.find(competency);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>m_color_map.end());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> iter-&gt;second;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppQIcon.htm">QIcon</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::CompetencyToIcon(<b><a href="CppConst.htm">const</a></b> pvdb::Competency competency)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_icon_map.empty()) m_icon_map <a href="CppOperatorAssign.htm">=</a> CreateIconMap();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_icon_map.empty());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> m_icon_map.find(competency);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>m_icon_map.end());<br/>
&nbsp;&nbsp;<a href="CppQIcon.htm">QIcon</a> icon <a href="CppOperatorAssign.htm">=</a> iter-&gt;second;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!icon.isNull());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> icon;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppMap.htm">std::map</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Competency,<a href="CppQColor.htm">QColor</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::CreateColorMap()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::un<a href="CppInitialize.htm">initialize</a>d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, <a href="CppQt.htm">Qt</a>::white },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::profession&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , <a href="CppQt.htm">Qt</a>::red },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::organisations&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, <a href="CppQColor.htm">QColor</a>(255,127,0) }, <a href="CppComment.htm">//</a>Orange<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::social_surroundings, <a href="CppQt.htm">Qt</a>::yellow },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::target_audience&nbsp;&nbsp;&nbsp;&nbsp;, <a href="CppQt.htm">Qt</a>::green },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::ti_knowledge&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , <a href="CppQt.htm">Qt</a>::cyan },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::prof_growth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, <a href="CppQt.htm">Qt</a>::blue },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::misc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , <a href="CppQt.htm">Qt</a>::magenta }<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppMap.htm">std::map</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Competency,<a href="CppQIcon.htm">QIcon</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::CreateIconMap()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::un<a href="CppInitialize.htm">initialize</a>d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, <a href="CppQIcon.htm">QIcon</a>(":/images/PicWhite14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::profession&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , <a href="CppQIcon.htm">QIcon</a>(":/images/PicPurple14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::organisations&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, <a href="CppQIcon.htm">QIcon</a>(":/images/PicBlue14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::social_surroundings, <a href="CppQIcon.htm">QIcon</a>(":/images/PicCyan14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::target_audience&nbsp;&nbsp;&nbsp;&nbsp;, <a href="CppQIcon.htm">QIcon</a>(":/images/PicGreen14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::ti_knowledge&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , <a href="CppQIcon.htm">QIcon</a>(":/images/PicYelow14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::prof_growth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, <a href="CppQIcon.htm">QIcon</a>(":/images/PicOrange14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::misc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , <a href="CppQIcon.htm">QIcon</a>(":/images/PicRed14x14.png") }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::un<a href="CppInitialize.htm">initialize</a>d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, <a href="CppQIcon.htm">QIcon</a>(":/images/PicWhite14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::profession&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , <a href="CppQIcon.htm">QIcon</a>(":/images/PicRed14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::organisations&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, <a href="CppQIcon.htm">QIcon</a>(":/images/PicOrange14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::social_surroundings, <a href="CppQIcon.htm">QIcon</a>(":/images/PicYellow14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::target_audience&nbsp;&nbsp;&nbsp;&nbsp;, <a href="CppQIcon.htm">QIcon</a>(":/images/PicGreen14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::ti_knowledge&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , <a href="CppQIcon.htm">QIcon</a>(":/images/PicCyan14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::prof_growth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, <a href="CppQIcon.htm">QIcon</a>(":/images/PicBlue14x14.png") },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ pvdb::Competency::misc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , <a href="CppQIcon.htm">QIcon</a>(":/images/PicPurple14x14.png") }<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::Competency <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::IconToCompetency(<b><a href="CppConst.htm">const</a></b> <a href="CppQIcon.htm">QIcon</a>&amp; icon)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_icon_map.empty()) m_icon_map <a href="CppOperatorAssign.htm">=</a> CreateIconMap();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_icon_map.empty());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppFind_if.htm">std::find_if</a>(m_icon_map.begin(),m_icon_map.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[icon](<b><a href="CppConst.htm">const</a></b> <a href="CppPair.htm">std::pair</a>&lt;pvdb::Competency,<a href="CppQIcon.htm">QIcon</a>&gt;&amp; p)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> icon.pixmap(14,14).toImage() <a href="CppOperatorEqual.htm">==</a> (p.second).pixmap(14,14).toImage();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppReturn.htm">return</a></b> icon.name() <a href="CppOperatorEqual.htm">==</a> (p.second).name();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(icon.pixmap().size() <a href="CppOperatorEqual.htm">==</a> (p.second).pixmap().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppReturn.htm">return</a></b> icon.pixmap() <a href="CppOperatorEqual.htm">==</a> (p.second).pixmap();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>m_icon_map.end());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> iter-&gt;first;<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Con<a href="CppVersion.htm">version</a> between <a href="CppQColor.htm">QColor</a> and pvdb::Competency<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;pvdb::Competency&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::GetAllCompetencies();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> pvdb::Competency&amp; competency)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQColor.htm">QColor</a> color <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::CompetencyToColor(competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::ColorToCompetency(color) <a href="CppOperatorEqual.htm">==</a> competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Con<a href="CppVersion.htm">version</a> between <a href="CppQIcon.htm">QIcon</a> and pvdb::Competency<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;pvdb::Competency&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::GetAllCompetencies();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> pvdb::Competency&amp; competency)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQIcon.htm">QIcon</a> icon <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::CompetencyToIcon(competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::IconToCompetency(icon) <a href="CppOperatorEqual.htm">==</a> competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::Test finished successfully");<br/>
<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbconcepteditdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbconcepteditdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCONCEPTEDITDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCONCEPTEDITDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptEditDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptEditDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/concept is not <b><a href="CppConst.htm">const</a></b> as user might want to modify it<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/concept is only modified <b><a href="CppIf.htm">if</a></b> user clicks OK<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptEditDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptEditDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptEditDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> RemoveEmptyItem(<a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item * item);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_add_clicked();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Finally <a href="CppConvert.htm">convert</a> what the GUI displays to a Concept<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_ok_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog *ui;<br/>
<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> PVDB_WRITE_TO_CONCEPT<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_rating_complexity;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_rating_concreteness;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_rating_specificity;<br/>
<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The concept being modified, cannot be <b><a href="CppConst.htm">const</a></b><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; m_concept;<br/>
<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCONCEPTEDITDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbconcepteditdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbconcepteditdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconcepteditdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQObject.htm">QObject</a>List&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexample.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamplefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamplesfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbconcepteditdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppQTreeWidgetItem.htm">QTreeWidgetItem</a> with the only <a href="CppFunction.htm">function</a> of storing a pvdb::Competency additionally, only used in testing<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item : <b><a href="CppPublic.htm">public</a></b> <a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Competency competency<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;: <a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item(0),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_competency(competency)<br/>
&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Competency m_competency;<br/>
};<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog::<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog),<br/>
<a href="CppIfdef.htm">#ifdef</a> PVDB_WRITE_TO_CONCEPT<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_rating_complexity(concept-&gt;GetRatingComplexity()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_rating_concreteness(concept-&gt;GetRatingConcreteness()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_rating_specificity(concept-&gt;GetRatingSpecificity())<br/>
<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept(concept)<br/>
<a href="CppEndif.htm">#endif</a><br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppConvert.htm">Convert</a> the concept to its GUI elements<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> the name<br/>
&nbsp;&nbsp;ui-&gt;edit_concept-&gt;setText(concept-&gt;GetName().c_str());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> the examples<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Example&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppAdd.htm">Add</a>Const(concept-&gt;GetExamples()-&gt;Get());<br/>
&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[<b><a href="CppThis.htm">this</a></b>](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Example&gt;&amp; s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!s-&gt;GetText().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item(s-&gt;GetCompetency());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(s-&gt;GetText().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDropEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;list_examples-&gt;addItem(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;list_examples-&gt;isEnabled());<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;list_examples,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppSignalMacro.htm">SIGNAL</a>(itemChanged(<a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item*)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppSLOT.htm">SLOT</a>(RemoveEmptyItem(<a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item*)));<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog::~<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Enter <a href="CppOperatorLogicalOr.htm">||</a> e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Return)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::AltModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on_button_ok_clicked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e); <a href="CppComment.htm">//</a>Causes dialog to close unwanted?<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog::on_button_add_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Close when the user has entered an empty edit<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;edit_text-&gt;text().isEmpty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;close();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(ui-&gt;edit_text-&gt;text());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEditable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDragEnabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsDropEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;list_examples-&gt;addItem(item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;ui-&gt;edit_text-&gt;clear();<br/>
&nbsp;&nbsp;ui-&gt;edit_text-&gt;setFocus();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog::RemoveEmptyItem(<a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item * item)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (item-&gt;text().isEmpty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assume reading in a concept and clicking OK without modification does not modify <a href="CppAny.htm">any</a>thing<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; concept)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; old_concept <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::DeepCopy(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept <a href="CppOperatorNotEqual.htm">!=</a> old_concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*concept,*old_concept));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog d(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Do nothing...<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.on_button_ok_clicked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> PVDB_WRITE_TO_CONCEPT<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.WriteToConcept() <a href="CppOperatorEqual.htm">==</a> old_concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*concept,*old_concept));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assume reading in a concept and clicking OK after modification of the name does modify concept<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; concept)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; old_concept <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::DeepCopy(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*concept,*old_concept));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog d(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;edit_concept-&gt;setText(d.ui-&gt;edit_concept-&gt;text() <a href="CppOperatorPlus.htm">+</a> "MODIFICATION");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.on_button_ok_clicked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> PVDB_WRITE_TO_CONCEPT<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept <a href="CppOperatorNotEqual.htm">!=</a> old_concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assume reading in a concept and clicking OK after adding an example<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; concept)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; old_concept <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::DeepCopy(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*concept,*old_concept));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog d(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;edit_text-&gt;text().isEmpty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;edit_text-&gt;setText("TO BE ADDED EXAMPLE");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.on_button_add_clicked(); <a href="CppComment.htm">//</a>Should add<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.on_button_ok_clicked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> PVDB_WRITE_TO_CONCEPT<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept <a href="CppOperatorNotEqual.htm">!=</a> old_concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assume reading in a concept and NOT clicking OK does not change the concept,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>even when having changed the name and examples in the GUI<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; concept)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; old_concept <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::DeepCopy(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*concept,*old_concept));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog d(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Change name<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;edit_concept-&gt;setText(d.ui-&gt;edit_concept-&gt;text() <a href="CppOperatorPlus.htm">+</a> "MODIFICATION");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Change examples<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;edit_text-&gt;text().isEmpty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;edit_text-&gt;setText("TO BE ADDED EXAMPLE");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.on_button_add_clicked(); <a href="CppComment.htm">//</a>Should add<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>DO NOT PRESS OK d.on_button_ok_clicked();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> PVDB_WRITE_TO_CONCEPT<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*concept,*old_concept));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog::Test completed successfully");<br/>
<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog::on_button_ok_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> PVDB_WRITE_TO_CONCEPT<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Name<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> name <a href="CppOperatorAssign.htm">=</a> ui-&gt;edit_concept-&gt;text().toStdString();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Examples<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Example&gt; &gt; v;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_items <a href="CppOperatorAssign.htm">=</a> ui-&gt;list_examples-&gt;count();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_items; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> ui-&gt;list_examples-&gt;item(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> pvdb_item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item *&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> pvdb::Competency competency <a href="CppOperatorAssign.htm">=</a> pvdb_item ? pvdb_item-&gt;m_competency : pvdb::Competency::un<a href="CppInitialize.htm">initialize</a>d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Example&gt; p(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb::ExampleFactory::Create(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;text().toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;competency<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n_items <a href="CppOperatorEqual.htm">==</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size()));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set to concept<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Examples&gt; examples(<b><a href="CppNew.htm">new</a></b> pvdb::Examples(v));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(examples);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept-&gt;GetExamples());<br/>
&nbsp;&nbsp;m_concept-&gt;SetName(name);<br/>
&nbsp;&nbsp;m_concept-&gt;SetExamples(examples);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> PVDB_WRITE_TO_CONCEPT<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog::WriteToConcept() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Name<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> name <a href="CppOperatorAssign.htm">=</a> ui-&gt;edit_concept-&gt;text().toStdString();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Examples<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Example&gt; &gt; v;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_items <a href="CppOperatorAssign.htm">=</a> ui-&gt;list_examples-&gt;count();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_items; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> ui-&gt;list_examples-&gt;item(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> pvdb_item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item *&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> pvdb::Competency competency <a href="CppOperatorAssign.htm">=</a> pvdb_item ? pvdb_item-&gt;m_competency : pvdb::Competency::un<a href="CppInitialize.htm">initialize</a>d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Example&gt; p(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb::ExampleFactory::Create(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;text().toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;competency<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n_items <a href="CppOperatorEqual.htm">==</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size()));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set to concept<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Examples&gt; examples(<b><a href="CppNew.htm">new</a></b> pvdb::Examples(v));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(examples);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::Create(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;examples,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_rating_complexity,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_rating_concreteness,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_rating_specificity);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> concept;<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbconceptitem.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbconceptitem.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCONCEPT_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCONCEPT_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQBrush.htm">QBrush</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPen.htm">QPen</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>A <a href="CppQt.htm">Qt</a>PvdbConceptItem shows a Concept<br/>
<a href="CppComment.htm">///</a>A Concept can be shown in multiple different ways, which is performed by its derived <b><a href="CppClass.htm">classes</a></b>.<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptItem : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> <a href="CppComment.htm">//</a>NEW 2013-09-15<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> Base;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/concept cannot be <b><a href="CppConst.htm">const</a></b>, the user might edit it (in derived <b><a href="CppClass.htm">classes</a></b> <b><a href="CppFor.htm">for</a></b> example)<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptItem(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; concept);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptItem(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptItem&amp; other) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptItem&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptItem&amp; other) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~<a href="CppQt.htm">Qt</a>PvdbConceptItem() <b><a href="CppNoexcept.htm">noexcept</a></b> {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Read the Concept<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&nbsp;&nbsp;GetConcept() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; GetConcept() <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_concept; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get he brush by which the indicator is filled<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a>&amp; GetIndicatorBrush() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_indicator_brush; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The pen by which the indicator is drawn<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; GetIndicatorPen() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_indicator_pen; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the (un-word-wrapped) name (the text written on the concept-item)<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Move hove<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> hoverStartEvent(<a href="CppQGraphicsSceneHoverEvent.htm">QGraphicsSceneHoverEvent</a> *) <b><a href="CppFinal.htm">final</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> hoverMoveEvent(<a href="CppQGraphicsSceneHoverEvent.htm">QGraphicsSceneHoverEvent</a> *) <b><a href="CppFinal.htm">final</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Derived <b><a href="CppClass.htm">classes</a></b> respond differently to key presses<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event) <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Derived <b><a href="CppClass.htm">classes</a></b> draw the concept the same, only with different pens<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/It is <a href="CppQt.htm">Qt</a>PvdbEdgeItem however, that also draws an arrow underneath<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paint(<a href="CppQPainter.htm">QPainter</a>* painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a> *, <a href="CppQWidget.htm">QWidget</a> *) <b><a href="CppFinal.htm">final</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The brush by which the indicator is filled<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetIndicatorBrush(<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a>&amp; brush);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The pen by which the indicator is filled<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetIndicatorPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the <a href="CppMain.htm">main</a> brush<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetMainBrush(<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a>&amp; <a href="CppAny.htm">any</a>_brush);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the name (the text), the <a href="CppBaseClass.htm">base class</a> (<a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>)<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/will wordwrap it<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/This <b><a href="CppClass.htm">class</a></b> guarantees that GetName() will yield the same string again<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetName(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the position<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetPos(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppIncrease.htm">Increase</a> the sensitive area<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppAdd.htm">Add</a> <b><a href="CppFinal.htm">final</a></b> to be sure that the <a href="CppShape.htm">shape</a> is not set smaller<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQPainterPath.htm">QPainterPath</a> <a href="CppShape.htm">shape</a>() <b><a href="CppConst.htm">const</a></b> <b><a href="CppFinal.htm">final</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppEmit.htm">Emitted</a> by SetPos<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>,<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b>)&gt; m_signal_position_changed;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setBrush(<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a> &amp;brush) { <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>::setBrush(brush); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Hide setPos from callers, let them use SetPos instead<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setPos(<b><a href="CppConst.htm">const</a></b> <a href="CppQPointF.htm">QPointF</a> &amp;pos) { <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::setPos(pos); }<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Hide setPos from callers, let them use SetPos instead<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setPos(qreal x, qreal y) { <a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a>::setPos(x,y); }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> mouseMoveEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> *event) <b><a href="CppFinal.htm">final</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> mousePressEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> *event) <b><a href="CppFinal.htm">final</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Slot whenever the name of the concept is changed<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnConceptNameChanged();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> UpdateBrushesAndPens() <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The concept on the node<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/m_concept cannot be <b><a href="CppConst.htm">const</a></b>: the user might edit it<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; m_concept;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The brush by which the indicator is filled<br/>
&nbsp;&nbsp;<a href="CppQBrush.htm">QBrush</a> m_indicator_brush;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The pen by which the indicator is drawn<br/>
&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> m_indicator_pen;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setFocus(<a href="CppQt.htm">Qt</a>::FocusReason focusReason) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCONCEPT_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbconceptitem.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbconceptitem.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptitem.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQCursor.htm">QCursor</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFont.htm">QFont</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainterPath.htm">QPainterPath</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainterPath.htm">QPainterPath</a>Stroker&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFuzzy_equal_to.htm">fuzzy_equal_to</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbedge.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexample.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbexamplesitem.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::<a href="CppQt.htm">Qt</a>PvdbConceptItem(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&amp; concept)<br/>
&nbsp;&nbsp;: m_signal_position_changed{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept(concept),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_indicator_brush(<a href="CppQBrush.htm">QBrush</a>(<a href="CppQColor.htm">QColor</a>(0,0,0,0))),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_indicator_pen(<a href="CppQPen.htm">QPen</a>(<a href="CppQColor.htm">QColor</a>(0,0,0)))<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept-&gt;GetExamples());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsFocusable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsSelectable);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Allow mouse tracking<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setAcceptHoverEvents(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetPadding(Base::Padding(1.0,6.0,1.0,2.0));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>?FIX 2013-01-06 22:47<br/>
&nbsp;&nbsp;GetConcept()-&gt;m_signal_name_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::OnConceptNameChanged,<b><a href="CppThis.htm">this</a></b>)); <a href="CppComment.htm">//</a>Obligatory<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>FIX? 2013-06-25<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppThis.htm">this</a></b>-&gt;SetText("DUMMY TEXT");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetText() <a href="CppOperatorNotEqual.htm">!=</a> m_concept-&gt;GetName()<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "The text must be set, to get a resize");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetName(m_concept-&gt;GetName());<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::GetConcept() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; p(m_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::GetName() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Unwordwrap(<b><a href="CppThis.htm">this</a></b>-&gt;GetText());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::hoverStartEvent(<a href="CppQGraphicsSceneHoverEvent.htm">QGraphicsSceneHoverEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppExit.htm">std::exit</a>(1); <a href="CppComment.htm">//</a>Never called<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setCursor(<a href="CppQCursor.htm">QCursor</a>(<a href="CppQt.htm">Qt</a>::<a href="CppPoint.htm">Point</a>ingHandCursor));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::hoverMoveEvent(<a href="CppQGraphicsSceneHoverEvent.htm">QGraphicsSceneHoverEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppExit.htm">std::exit</a>(2);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setCursor(<a href="CppQCursor.htm">QCursor</a>(<a href="CppQt.htm">Qt</a>::<a href="CppPoint.htm">Point</a>ingHandCursor));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::mouseMoveEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;Base::mouseMoveEvent(event);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppThis.htm">this</a></b>-&gt;m_signal_item_has_updated(); <a href="CppComment.htm">//</a>2013-06-25<br/>
&nbsp;&nbsp;m_signal_request_scene_update();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::mousePressEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;Base::mousePressEvent(event);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppThis.htm">this</a></b>-&gt;m_signal_item_has_updated(); <a href="CppComment.htm">//</a>2013-06-25<br/>
&nbsp;&nbsp;m_signal_request_scene_update();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::OnConceptNameChanged()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept-&gt;GetExamples());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetName(m_concept-&gt;GetName());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_signal_item_changed(<b><a href="CppThis.htm">this</a></b>); <a href="CppComment.htm">//</a>Called by SetText<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::paint(<a href="CppQPainter.htm">QPainter</a>* painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a>* option, <a href="CppQWidget.htm">QWidget</a>* <a href="CppWidget.htm">widget</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept-&gt;GetExamples());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!<b><a href="CppThis.htm">this</a></b>-&gt;hasFocus()); <a href="CppComment.htm">//</a>Can have focus when used as stand-alone<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(!<b><a href="CppThis.htm">this</a></b>-&gt;isSelected()); <a href="CppComment.htm">//</a>Can have focus when used as stand-alone<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;UpdateBrushesAndPens();<br/>
<br/>
&nbsp;&nbsp;Base::paint(painter,option,<a href="CppWidget.htm">widget</a>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_concept-&gt;GetExamples()-&gt;Get().empty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;setBrush(m_indicator_brush);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;setPen(m_indicator_pen);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw indicator that a concept has examples in it<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;drawRect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rect().right() <a href="CppOperatorMinus.htm">-</a> 5.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rect().top() <a href="CppOperatorPlus.htm">+</a> 3.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::SetIndicatorBrush(<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a>&amp; brush)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_indicator_brush <a href="CppOperatorNotEqual.htm">!=</a> brush)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_indicator_brush <a href="CppOperatorAssign.htm">=</a> brush;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::SetIndicatorPen(<b><a href="CppConst.htm">const</a></b> <a href="CppQPen.htm">QPen</a>&amp; pen)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_indicator_pen <a href="CppOperatorNotEqual.htm">!=</a> pen)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_indicator_pen <a href="CppOperatorAssign.htm">=</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::SetMainBrush(<b><a href="CppConst.htm">const</a></b> <a href="CppQBrush.htm">QBrush</a>&amp; <a href="CppAny.htm">any</a>_brush)<br/>
{<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppThis.htm">this</a></b>-&gt;brush() <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppAny.htm">any</a>_brush)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setBrush(<a href="CppAny.htm">any</a>_brush);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;brush() <a href="CppOperatorEqual.htm">==</a> <a href="CppAny.htm">any</a>_brush);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::SetPos(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (x <a href="CppOperatorNotEqual.htm">!=</a> <b><a href="CppThis.htm">this</a></b>-&gt;x() <a href="CppOperatorLogicalOr.htm">||</a> y <a href="CppOperatorNotEqual.htm">!=</a> <b><a href="CppThis.htm">this</a></b>-&gt;y())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setPos(x,y);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_signal_position_changed(x,y);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::SetName(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set the text<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v { Wordwrap(s,40) };<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetText(v);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppThis.htm">this</a></b>-&gt;GetName() <a href="CppOperatorNotEqual.htm">!=</a> s)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetName());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetName() <a href="CppOperatorEqual.htm">==</a> s);<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppQPainterPath.htm">QPainterPath</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::<a href="CppShape.htm">shape</a>() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> click_easy_width <a href="CppOperatorAssign.htm">=</a> 5;<br/>
&nbsp;&nbsp;<a href="CppQPainterPath.htm">QPainterPath</a> path;<br/>
&nbsp;&nbsp;<a href="CppQPainterPath.htm">QPainterPath</a>Stroker stroker;<br/>
<br/>
&nbsp;&nbsp;path.addRect(<b><a href="CppThis.htm">this</a></b>-&gt;boundingRect());<br/>
&nbsp;&nbsp;stroker.setWidth(click_easy_width);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> stroker.createStroke(path);<br/>
}<br/>
<a href="CppComment.htm">*/</a><br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Starting <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::Test()");<br/>
<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Successfully finished <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptItem::Test()");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCONCEPTMAPDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCONCEPTMAPDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> ::<a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Do random stuff, <b><a href="CppFor.htm">for</a></b> example, add a node and an edge (used <b><a href="CppFor.htm">for</a></b> <a href="CppDebug.htm">debugging</a>)<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoRandomStuff();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a> * Get<a href="CppWidget.htm">Widget</a>() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a> * Get<a href="CppWidget.htm">Widget</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Does the user need to go back to the student menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GoBackToMenu() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_back_to_menu; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Save to m_file<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Save to disk<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Shuffle to concepts (used <b><a href="CppFor.htm">for</a></b> <a href="CppDebug.htm">debugging</a>)<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Shuffle();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_print_clicked();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> on_button_test_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Must we go back to the student menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_back_to_menu;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The file<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The concept map <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapEdit<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppStatic.htm">static</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapEdit<a href="CppWidget.htm">Widget</a> * Create<a href="CppWidget.htm">Widget</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/DON'T USE: puts a <b><a href="CppNew.htm">new</a></b> ConceptMap in file<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapEdit<a href="CppWidget.htm">Widget</a> * Create<a href="CppWidget.htm">Widget</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/NEW 2013-01-07<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnConceptMapItemRequestsEdit(<a href="CppQt.htm">Qt</a>PvdbConceptMapItem* <b><a href="CppConst.htm">const</a></b> item);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCONCEPTMAPDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLayout.htm">QLayout</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQMessageBox.htm">QMessageBox</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbcenternode.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbedge.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconcepteditdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmap<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbedgeitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbnodeitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtScopedDisable.htm">qtscopeddisable</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbconceptmapdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppComment.htm">///</a>Collect all <a href="CppQGraphicsItem.htm">QGraphicsItem</a>s with <b><a href="CppClass.htm">class</a></b> T in an unorderly way<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<a href="CppVector.htm">std::vector</a>&lt;T*&gt; Collect(<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsScene.htm">QGraphicsScene</a>* <b><a href="CppConst.htm">const</a></b> scene)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;T*&gt; v;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQList.htm">QList</a>&lt;<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *&gt; items <a href="CppOperatorAssign.htm">=</a> scene-&gt;items();<br/>
&nbsp;&nbsp;<a href="CppTransform.htm">std::transform</a>(items.begin(),items.end(),<a href="CppBack_inserter.htm">std::back_inserter</a>(v),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a>* <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;T*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;v.erase(<a href="CppRemove.htm">std::remove</a>(v.begin(),v.end(),<b><a href="CppNullptr.htm">nullptr</a></b>),v.end());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount.htm">std::count</a>(v.begin(),v.end(),<b><a href="CppNullptr.htm">nullptr</a></b>)<a href="CppOperatorEqual.htm">==</a>0);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(Create<a href="CppWidget.htm">Widget</a>(file))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_file-&gt;GetConceptMap()-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;pvdb::CenterNode&gt;(m_file-&gt;GetConceptMap()-&gt;GetNodes()[0])<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "The first node in a file's ConceptMap must be a CenterNode");<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file <a href="CppOperatorEqual.htm">==</a> m_file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;GetConceptMap() <a href="CppOperatorEqual.htm">==</a> m_file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;layout());<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;layout()-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!Collect&lt;<a href="CppQt.htm">Qt</a>PvdbNodeItem&gt;(m_<a href="CppWidget.htm">widget</a>-&gt;scene()).empty());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Center the dialog<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setGeometry(screen.adjusted(64,64,-64,-64));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().center() );<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;m_signal_conceptmapitem_requests_edit.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::OnConceptMapItemRequestsEdit,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1));<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::~<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapEdit<a href="CppWidget.htm">Widget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Create<a href="CppWidget.htm">Widget</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_cluster <a href="CppOperatorAssign.htm">=</a> file-&gt;GetCluster().get();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> had_concept_map <a href="CppOperatorAssign.htm">=</a> file-&gt;GetConceptMap().get();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("User starts building a concept map from scratch");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::Create(file-&gt;Get<a href="CppQuestion.htm">Question</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("User supplied a filled-in cluster");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::CreateFromCluster(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Get<a href="CppQuestion.htm">Question</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;GetCluster()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((file-&gt;GetCluster()-&gt;Get().size() <a href="CppOperatorPlus.htm">+</a> 1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> (concept_map-&gt;GetNodes().size())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "As much cluster items as nodes <a href="CppOperatorPlus.htm">+</a> focus <a href="CppQuestion.htm">question</a>");<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap()); <a href="CppComment.htm">//</a>Created<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !had_concept_map)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap()); <a href="CppComment.htm">//</a>Created from concept map<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( had_cluster <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;had_concept_map)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapEdit<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapEdit<a href="CppWidget.htm">Widget</a>(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppWidget.htm">widget</a>;<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::DoRandomStuff()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Do random stuff<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_file-&gt;GetConceptMap()-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;pvdb::CenterNode&gt;(m_file-&gt;GetConceptMap()-&gt;GetNodes()[0])<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "The first node in a file's ConceptMap must be a CenterNode");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_edges_before <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetEdges().size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_nodes_before <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetNodes().size());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;DoRandomStuff();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_edges_after <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetEdges().size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_nodes_after <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetNodes().size());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n_edges_after &gt; n_edges_before);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n_nodes_after &gt; n_nodes_before);<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Get<a href="CppWidget.htm">Widget</a>() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Get<a href="CppWidget.htm">Widget</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Calls the <b><a href="CppConst.htm">const</a></b> <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <a href="CppMemberFunction.htm">member function</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>To avoid duplication in <b><a href="CppConst.htm">const</a></b> and non-<a href="CppConstMemberFunction.htm">const member function</a>s [1]<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[1] <a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C<a href="CppOperatorIncrement.htm">++</a> (3rd edition). ISBN: 0-321-33487-6.<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;Item 3, paragraph 'Avoid duplication in <b><a href="CppConst.htm">const</a></b> and non-<a href="CppConstMemberFunction.htm">const member function</a>s'<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppConst_cast.htm">const_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>*&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst_cast.htm">const_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog*&gt;(<b><a href="CppThis.htm">this</a></b>)-&gt;Get<a href="CppWidget.htm">Widget</a>());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_S) { on_button_save_clicked(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !(e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ShiftModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Z)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQMessageBox.htm">QMessageBox</a> box;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.setText("TODO: Undo");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.exec();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> (e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ShiftModifier)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Z)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQMessageBox.htm">QMessageBox</a> box;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.setText("TODO: Redo");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;box.exec();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::on_button_print_clicked()<br/>
{<br/>
&nbsp;&nbsp;Save();<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog d(<b><a href="CppThis.htm">this</a></b>-&gt;m_file);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::OnConceptMapItemRequestsEdit(<a href="CppQt.htm">Qt</a>PvdbConceptMapItem* <b><a href="CppConst.htm">const</a></b> item)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item-&gt;GetConcept());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog d(item-&gt;GetConcept());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>item-&gt;GetConcept()-&gt;m_signal_examples_changed(item-&gt;GetConcept().get()); <a href="CppComment.htm">//</a>NEW 2013-01-08 21:40<br/>
&nbsp;&nbsp;item-&gt;m_signal_item_has_updated(item);<br/>
&nbsp;&nbsp;item-&gt;update();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::on_button_save_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Temporarily disable to <a href="CppWidget.htm">widget</a>, otherwise saving cannot succeed<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtScopedDisable.htm">QtScopedDisable</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>&gt; <a href="CppScope.htm">scope</a>d_disable1(Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQtScopedDisable.htm">QtScopedDisable</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog&gt; <a href="CppScope.htm">scope</a>d_disable2(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla de concept map op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> <a href="CppString.htm">std::string</a>(".") <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save(filename);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppThis.htm">this</a></b>-&gt;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>; <a href="CppComment.htm">//</a>2013-04-19 Request by client<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>close(); <a href="CppComment.htm">//</a>2013-04-19 Request by client<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Save() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetConceptMap() <a href="CppOperatorEqual.htm">==</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_file-&gt;SetConceptMap(concept_map);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save();<br/>
&nbsp;&nbsp;m_file-&gt;Save(filename);<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog::Shuffle()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;Get<a href="CppWidget.htm">Widget</a>()-&gt;Shuffle();<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCREATEASSESSMENTCOMPLETEDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCREATEASSESSMENTCOMPLETEDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the filled in concept map focal <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Get<a href="CppQuestion.htm">Question</a>() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Must the parent go back to the menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GoBackToMenu() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_back_to_menu; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Save file to disk<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Fill in the concept map focal <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Set<a href="CppQuestion.htm">Question</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>);<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Must the parent go back to the menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_back_to_menu;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCREATEASSESSMENTCOMPLETEDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentcompletedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbcreateassessmentcompletedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu(<b><a href="CppFalse.htm">false</a></b>)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::~<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::Get<a href="CppQuestion.htm">Question</a>() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ui-&gt;edit-&gt;text().toStdString();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::on_button_save_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla het assessment invoer-bestand op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!filename_raw.empty());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> <a href="CppString.htm">std::string</a>(".") <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save(filename);<br/>
<br/>
&nbsp;&nbsp;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> ui-&gt;edit-&gt;text().toStdString();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(<b><a href="CppNew.htm">new</a></b> pvdb::File);<br/>
&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;file-&gt;Save(filename);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::Set<a href="CppQuestion.htm">Question</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; <a href="CppQuestion.htm">question</a>)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;edit-&gt;setText(<a href="CppQuestion.htm">question</a>.c_str());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog::on_edit_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;edit-&gt;text() <a href="CppOperatorEqual.htm">==</a> arg1);<br/>
&nbsp;&nbsp;ui-&gt;button_save-&gt;setEnabled(!arg1.isEmpty());<br/>
<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCREATEASSESSMENTMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCREATEASSESSMENTMENUDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Must the parent go back to the menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GoBackToMenu() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_back_to_menu; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_create_assessment_complete_clicked();<br/>
<br/>
<b><a href="CppQtSignals.htm">signals</a></b>:<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Must the parent go back to the menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_back_to_menu;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The focal concept map <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> m_<a href="CppQuestion.htm">question</a>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCREATEASSESSMENTMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentmenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentcompletedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentpartialdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbcreateassessmentmenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu{<b><a href="CppFalse.htm">false</a></b>},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppQuestion.htm">question</a>{}<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog::~<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog::on_button_create_assessment_complete_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog d;<br/>
&nbsp;&nbsp;d.Set<a href="CppQuestion.htm">Question</a>(m_<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;m_<a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> d.Get<a href="CppQuestion.htm">Question</a>();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d.GoBackToMenu())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;close();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBCREATEASSESSMENTPARTIALDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBCREATEASSESSMENTPARTIALDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDialog.htm">QDialog</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppQDialog.htm">QDialog</a><br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> AnyEditChanged();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBCREATEASSESSMENTPARTIALDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentpartialdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbcreateassessmentpartialdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQDialog.htm">QDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"TODO");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> m_file-&gt;Get<a href="CppQuestion.htm">Question</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (v.size() <a href="CppOperatorEqual.htm">==</a> 4)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_1-&gt;setText(v[0].c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_2-&gt;setText(v[1].c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_3-&gt;setText(v[2].c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_complete-&gt;setText(v[3].c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_1-&gt;setText("");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_2-&gt;setText("");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_3-&gt;setText("");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_complete-&gt;setText("");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;edit_1,<a href="CppSignalMacro.htm">SIGNAL</a>(textChanged(<a href="CppQString.htm">QString</a>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(AnyEditChanged()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;edit_2,<a href="CppSignalMacro.htm">SIGNAL</a>(textChanged(<a href="CppQString.htm">QString</a>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(AnyEditChanged()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;edit_3,<a href="CppSignalMacro.htm">SIGNAL</a>(textChanged(<a href="CppQString.htm">QString</a>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(AnyEditChanged()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;edit_complete,<a href="CppSignalMacro.htm">SIGNAL</a>(textChanged(<a href="CppQString.htm">QString</a>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(AnyEditChanged()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog::AnyEditChanged()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;m_file.Set<a href="CppQuestion.htm">Question</a>s(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_1-&gt;text().toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_2-&gt;text().toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_3-&gt;text().toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_complete-&gt;text().toStdString()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog::~<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentPartialDialog::on_button_save_clicked()<br/>
{<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbdisplay.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbdisplay.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBDISPLAY_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBDISPLAY_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppFunction.htm">Function</a>s <b><a href="CppFor.htm">for</a></b> printing<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>Display<br/>
{<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> DisplayRatedConcepts(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt; file,<a href="CppQTableWidget.htm">QTableWidget</a> * <b><a href="CppConst.htm">const</a></b> table);<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> DisplayExamples(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt; file,<a href="CppQTableWidget.htm">QTableWidget</a> * <b><a href="CppConst.htm">const</a></b> table);<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> DisplayValues(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt; file,<a href="CppQTableWidget.htm">QTableWidget</a> * <b><a href="CppConst.htm">const</a></b> table);<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBDISPLAY_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbdisplay.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbdisplay.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbdisplay.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;QHeaderView&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTableWidget.htm">QTableWidget</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbedge.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexample.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcompetency.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayRatedConcepts(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a> * <b><a href="CppConst.htm">const</a></b> table)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(file-&gt;GetConceptMap()-&gt;GetNodes().size());<br/>
&nbsp;&nbsp;table-&gt;setRowCount(sz <a href="CppOperatorMinus.htm">-</a> 1); <a href="CppComment.htm">//</a>-1 to skip focus <a href="CppQuestion.htm">question</a> node at index 0<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=1; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> row <a href="CppOperatorAssign.htm">=</a> i-1; <a href="CppComment.htm">//</a>-1 to skip focus <a href="CppQuestion.htm">question</a> node at index 0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> file-&gt;GetConceptMap()-&gt;GetNodes().at(i)-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Name<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(concept-&gt;GetName().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setVerticalHeaderItem(row,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Rating complexity<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(<a href="CppQString.htm">QString</a>::number(concept-&gt;GetRatingComplexity()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(row,0,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Rating concreteness<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(<a href="CppQString.htm">QString</a>::number(concept-&gt;GetRatingConcreteness()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(row,1,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Rating specificity<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(<a href="CppQString.htm">QString</a>::number(concept-&gt;GetRatingSpecificity()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(row,2,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;table-&gt;verticalHeader()-&gt;setMinimumWidth(300);<br/>
&nbsp;&nbsp;table-&gt;verticalHeader()-&gt;setMaximumWidth(300);<br/>
&nbsp;&nbsp;table-&gt;setColumnWidth(0,100);<br/>
&nbsp;&nbsp;table-&gt;setColumnWidth(1,100);<br/>
&nbsp;&nbsp;table-&gt;setColumnWidth(2,100);<br/>
&nbsp;&nbsp;table-&gt;setMaximumWidth(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;verticalHeader()-&gt;width()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> table-&gt;columnWidth(0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> table-&gt;columnWidth(1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> table-&gt;columnWidth(2)<br/>
&nbsp;&nbsp;);<br/>
<br/>
<br/>
<br/>
}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Examples' icons<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayExamples(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a> * <b><a href="CppConst.htm">const</a></b> table)<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_rows <a href="CppOperatorAssign.htm">=</a> table-&gt;rowCount();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_rows; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> pvdb::Competency competency <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;pvdb::Competency&gt;(i <a href="CppOperatorPlus.htm">+</a> 1); <a href="CppComment.htm">//</a>Skip 0 <a href="CppOperatorEqual.htm">==</a> un<a href="CppInitialize.htm">initialize</a>d<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> pvdb::CompetencyToDutchStr(competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQIcon.htm">QIcon</a> icon <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>Competency::CompetencyToIcon(competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setIcon(icon);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setVerticalHeaderItem(i,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Examples' competencies<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppMap.htm">std::map</a>&lt;pvdb::Competency,<b><a href="CppInt.htm">int</a></b>&gt; cnts;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Node&gt; node: <a href="CppAdd.htm">Add</a>Const(file-&gt;GetConceptMap()-&gt;GetNodes()))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Example&gt; example: node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> cnts.find(example-&gt;GetCompetency());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (iter <a href="CppOperatorNotEqual.htm">!=</a> cnts.end())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>(*iter).second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> pvdb::Competency competency <a href="CppOperatorAssign.htm">=</a> example-&gt;GetCompetency();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnts.insert(<a href="CppMake_pair.htm">std::make_pair</a>(competency,1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sum <a href="CppOperatorAssign.htm">=</a> <a href="CppAccumulate.htm">std::accumulate</a>(cnts.begin(),cnts.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init,<b><a href="CppConst.htm">const</a></b> <a href="CppPair.htm">std::pair</a>&lt;pvdb::Competency,<b><a href="CppInt.htm">int</a></b>&gt;&amp; p)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;init <a href="CppOperatorPlusAssign.htm">+=</a> p.second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sum <a href="CppOperatorNotEqual.htm">!=</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppPair.htm">std::pair</a>&lt;pvdb::Competency,<b><a href="CppInt.htm">int</a></b>&gt;&amp; p: cnts)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> col <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> row <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(p.first) <a href="CppOperatorMinus.htm">-</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (row <a href="CppOperatorEqual.htm">==</a> <a href="CppOperatorMinus.htm">-</a>1) <b><a href="CppContinue.htm">continue</a></b>; <a href="CppComment.htm">//</a>0 <a href="CppOperatorEqual.htm">==</a> un<a href="CppInitialize.htm">initialize</a>d<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row &lt; table-&gt;rowCount());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> f <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(p.second) <a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(sum);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> percentage <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppStd.htm">std</a>::round(100.0 * f));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(percentage);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(row,col,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayValues(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a> * <b><a href="CppConst.htm">const</a></b> table)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Node&gt; &gt; all_nodes <a href="CppOperatorAssign.htm">=</a> <a href="CppAdd.htm">Add</a>Const(file-&gt;GetConceptMap()-&gt;GetNodes());<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> all_sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(all_nodes.size());<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;all_nodes.erase(all_nodes.begin());<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(all_nodes.size());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sz <a href="CppOperatorEqual.htm">==</a> all_sz <a href="CppOperatorMinus.htm">-</a> 1);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Node&gt; &gt; nodes <a href="CppOperatorAssign.htm">=</a> all_nodes;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_nodes <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(nodes.size());&nbsp;&nbsp;<a href="CppComment.htm">//</a>Constant 'c'<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concreteness experimental: C_e at row <a href="CppOperatorAssign.htm">=</a> 1, col <a href="CppOperatorAssign.htm">=</a> 0<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>50.0 * sum_rated_concreteness <a href="CppOperatorDivide.htm">/</a> n_nodes<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sum_rated_concreteness <a href="CppComment.htm">//</a>Constant 'k_c'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppAccumulate.htm">std::accumulate</a>(nodes.begin(),nodes.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init, <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Node&gt;&amp; node)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> node-&gt;GetConcept()-&gt;GetRatingConcreteness();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> "N/A";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_nodes <a href="CppOperatorNotEqual.htm">!=</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> c_e<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::round(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 50.0 * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(sum_rated_concreteness)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_nodes)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(c_e);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(1,0,item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concreteness eStimated: C_s at row <a href="CppOperatorAssign.htm">=</a> 1, col <a href="CppOperatorAssign.htm">=</a> 1<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>C_s <a href="CppOperatorAssign.htm">=</a> 100.0 * n_examples <a href="CppOperatorDivide.htm">/</a> (n_examples <a href="CppOperatorPlus.htm">+</a> n_nodes <a href="CppOperatorPlus.htm">+</a> n_relations_not_to_focus)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Edge&gt; &gt; edges <a href="CppOperatorAssign.htm">=</a> <a href="CppAdd.htm">Add</a>Const(file-&gt;GetConceptMap()-&gt;GetEdges());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_nodes_examples <a href="CppOperatorAssign.htm">=</a> <a href="CppAccumulate.htm">std::accumulate</a>(nodes.begin(),nodes.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init, <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Node&gt;&amp; node)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_edges_examples <a href="CppOperatorAssign.htm">=</a> <a href="CppAccumulate.htm">std::accumulate</a>(edges.begin(),edges.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init, <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Edge&gt;&amp; edge)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(edge-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_relations_not_to_focus <a href="CppComment.htm">//</a>Constant 'r'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppCount_if.htm">std::count_if</a>(edges.begin(),edges.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Edge&gt;&amp; edge)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> edge-&gt;GetFrom() <a href="CppOperatorNotEqual.htm">!=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> edge-&gt;GetTo() <a href="CppOperatorNotEqual.htm">!=</a> 0; <a href="CppComment.htm">//</a>Not connected to focus <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples <a href="CppComment.htm">//</a>Constant 'v'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> n_nodes_examples <a href="CppOperatorPlus.htm">+</a> n_edges_examples;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> "N/A";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_examples <a href="CppOperatorPlus.htm">+</a> n_nodes <a href="CppOperatorPlus.htm">+</a> n_relations_not_to_focus <a href="CppOperatorNotEqual.htm">!=</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> c_s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::round(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;100.0 * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_examples)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_examples <a href="CppOperatorPlus.htm">+</a> n_nodes <a href="CppOperatorPlus.htm">+</a> n_relations_not_to_focus)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(c_s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(1,1,item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Complexity experimental value: X_e at row <a href="CppOperatorAssign.htm">=</a> 0, col <a href="CppOperatorAssign.htm">=</a> 0<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>50.0 * sum_rated_complexity <a href="CppOperatorDivide.htm">/</a> n_nodes<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sum_rated_complexity <a href="CppComment.htm">//</a>Constant 'k_i'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppAccumulate.htm">std::accumulate</a>(nodes.begin(),nodes.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init, <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Node&gt;&amp; node)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> node-&gt;GetConcept()-&gt;GetRatingComplexity();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> "N/A";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_nodes <a href="CppOperatorNotEqual.htm">!=</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_e<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::round(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 50.0 * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(sum_rated_complexity)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_nodes)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(x_e);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(0,0,item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>compleXity eStimated: X_s at row <a href="CppOperatorAssign.htm">=</a> 0, col <a href="CppOperatorAssign.htm">=</a> 1<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>x_s <a href="CppOperatorAssign.htm">=</a> ((2*n_relations_not_to_focus)/(n_nodes*(n_nodes-1))))^0.25*100%<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Edge&gt; &gt; edges <a href="CppOperatorAssign.htm">=</a> <a href="CppAdd.htm">Add</a>Const(file-&gt;GetConceptMap()-&gt;GetEdges());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_relations_not_to_focus <a href="CppComment.htm">//</a>Constant 'r'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppCount_if.htm">std::count_if</a>(edges.begin(),edges.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Edge&gt;&amp; edge)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> edge-&gt;GetFrom() <a href="CppOperatorNotEqual.htm">!=</a> 0 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> edge-&gt;GetTo() <a href="CppOperatorNotEqual.htm">!=</a> 0; <a href="CppComment.htm">//</a>Not connected to focus <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> "N/A";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_nodes &gt; 1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x_s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::round(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;100.0<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* <a href="CppPow.htm">std::pow</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_relations_not_to_focus * 2)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_nodes * (n_nodes <a href="CppOperatorMinus.htm">-</a> 1) ),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.25)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; text <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(x_s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(0,1,item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Experimental specificity: s_e at row <a href="CppOperatorAssign.htm">=</a> 2, col <a href="CppOperatorAssign.htm">=</a> 0<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>s_e <a href="CppOperatorAssign.htm">=</a> 50.0 * sum_rated_specificity <a href="CppOperatorDivide.htm">/</a> n_nodes<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sum_rated_specificity <a href="CppComment.htm">//</a>Constant 'k_s'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppAccumulate.htm">std::accumulate</a>(nodes.begin(),nodes.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init, <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Node&gt;&amp; node)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> node-&gt;GetConcept()-&gt;GetRatingSpecificity();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> "N/A";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_nodes <a href="CppOperatorNotEqual.htm">!=</a> 0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> s_e<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::round(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(50 * sum_rated_specificity)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_nodes)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(s_e);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(2,0,item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Richness Experimental: r_e at row <a href="CppOperatorAssign.htm">=</a> 3, col <a href="CppOperatorAssign.htm">=</a> 0<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>r_e <a href="CppOperatorAssign.htm">=</a> ((a <a href="CppOperatorPlus.htm">+</a> b) <a href="CppOperatorDivide.htm">/</a> 14) * 100%<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>a <a href="CppOperatorAssign.htm">=</a> number of different Competencies<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>b <a href="CppOperatorAssign.htm">=</a> number of Competencies between 1/12th and 1/4th of number of examples<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppMap.htm">std::map</a>&lt;pvdb::Competency,<b><a href="CppInt.htm">int</a></b>&gt; m;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Tally the competencies<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Node&gt;&amp; node: nodes)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Example&gt; example: node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> pvdb::Competency competency <a href="CppOperatorAssign.htm">=</a> example-&gt;GetCompetency();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> m.find(competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (iter <a href="CppOperatorNotEqual.htm">!=</a> m.end())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>(*iter).second; <a href="CppComment.htm">//</a>Tally the known competency<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.insert(<a href="CppMake_pair.htm">std::make_pair</a>(competency,1)); <a href="CppComment.htm">//</a>Tally the first of <b><a href="CppThis.htm">this</a></b> competency<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Remove category 'misc'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppDebug.htm">debug</a>_m_size_old <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> <a href="CppDebug.htm">debug</a>_will_resize <a href="CppOperatorAssign.htm">=</a> m.count(pvdb::Competency::misc);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;m.erase(pvdb::Competency::misc);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppDebug.htm">debug</a>_m_size_new <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( ( <a href="CppDebug.htm">debug</a>_will_resize <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> <a href="CppDebug.htm">debug</a>_m_size_old <a href="CppOperatorEqual.htm">==</a> <a href="CppDebug.htm">debug</a>_m_size_new <a href="CppOperatorPlus.htm">+</a> 1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorLogicalOr.htm">||</a> (!<a href="CppDebug.htm">debug</a>_will_resize <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> <a href="CppDebug.htm">debug</a>_m_size_old <a href="CppOperatorEqual.htm">==</a> <a href="CppDebug.htm">debug</a>_m_size_new&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> a <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples <a href="CppOperatorAssign.htm">=</a> <a href="CppAccumulate.htm">std::accumulate</a>(m.begin(),m.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b>&amp; init,<b><a href="CppConst.htm">const</a></b> <a href="CppPair.htm">std::pair</a>&lt;pvdb::Competency,<b><a href="CppInt.htm">int</a></b>&gt;&amp; p)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> p.second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> my_min <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppCeil.htm">std::ceil</a>( <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_examples) <a href="CppOperatorDivide.htm">/</a> 12.0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> my_max <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppFloor.htm">std::floor</a>(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(n_examples) <a href="CppOperatorDivide.htm">/</a>&nbsp;&nbsp;4.0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> b <a href="CppOperatorAssign.htm">=</a> <a href="CppCount_if.htm">std::count_if</a>(m.begin(),m.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[my_min,my_max](<b><a href="CppConst.htm">const</a></b> <a href="CppPair.htm">std::pair</a>&lt;pvdb::Competency,<b><a href="CppInt.htm">int</a></b>&gt;&amp; p)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p.second <a href="CppOperatorGreaterEqual.htm">&gt;=</a> my_min <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> p.second <a href="CppOperatorLessEqual.htm">&lt;=</a> my_max;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> r_e<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStd.htm">std</a>::round(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;100.0 * ( <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(a+b) <a href="CppOperatorDivide.htm">/</a> 12.0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(r_e);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;setItem(3,0,item);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;table-&gt;verticalHeader()-&gt;setMaximumWidth(100);<br/>
&nbsp;&nbsp;table-&gt;verticalHeader()-&gt;setMinimumWidth(100);<br/>
&nbsp;&nbsp;table-&gt;setColumnWidth(0,200);<br/>
&nbsp;&nbsp;table-&gt;setColumnWidth(1,200);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(table-&gt;verticalHeader()-&gt;width() <a href="CppOperatorEqual.htm">==</a> 100);<br/>
&nbsp;&nbsp;table-&gt;setMaximumWidth(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table-&gt;verticalHeader()-&gt;width()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> table-&gt;columnWidth(0)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> table-&gt;columnWidth(1)<br/>
&nbsp;&nbsp;);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbfiledialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbfiledialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDB<a href="CppCfile.htm">FILE</a>DIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDB<a href="CppCfile.htm">FILE</a>DIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQFile.htm">QFile</a>Dialog;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>FileDialog<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppEnumClass.htm">enum class</a></b> FileType { cmp, pdf };<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a <a href="CppQFile.htm">QFile</a>Dialog to open <a href="ProjectBrainweaver.htm">Brainweaver</a> files with<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; GetOpenFileDialog();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a <a href="CppQFile.htm">QFile</a>Dialog to save <a href="ProjectBrainweaver.htm">Brainweaver</a> files with<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; GetSaveFileDialog(<b><a href="CppConst.htm">const</a></b> FileType type);<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDB<a href="CppCfile.htm">FILE</a>DIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbfiledialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbfiledialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQApplication.htm">QApplication</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; <a href="CppQt.htm">Qt</a>FileDialog::GetOpenFileDialog()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQFile.htm">QFile</a>Dialog);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> ViewMode { Detail, List };<br/>
&nbsp;&nbsp;d-&gt;setViewMode(<a href="CppQFile.htm">QFile</a>Dialog::Detail);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> FileMode { AnyFile, ExistingFile, Directory, ExistingFiles, DirectoryOnly };<br/>
&nbsp;&nbsp;d-&gt;setFileMode(<a href="CppQFile.htm">QFile</a>Dialog::ExistingFile);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> AcceptMode { AcceptOpen, AcceptSave };<br/>
&nbsp;&nbsp;d-&gt;setAcceptDrops(<a href="CppQFile.htm">QFile</a>Dialog::AcceptOpen);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> Option { ShowDirsOnly, DontResolveSym<a href="CppLink.htm">link</a>s, DontConfirmOverwrite, DontUseSheet, DontUseNativeDialog, ReadOnly, HideNameFilterDetails }<br/>
&nbsp;&nbsp;d-&gt;setOptions(<a href="CppQFile.htm">QFile</a>Dialog::ReadOnly);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> namefile <a href="CppOperatorAssign.htm">=</a> <a href="CppString.htm">std::string</a>("<a href="ProjectBrainweaver.htm">Brainweaver</a> concept map (*.")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension() <a href="CppOperatorPlus.htm">+</a> <a href="CppString.htm">std::string</a>(")");<br/>
<br/>
&nbsp;&nbsp;d-&gt;setNameFilter(namefile.c_str());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put the dialog in the screen center<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>d-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> d-&gt;rect().center() );<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> d;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; <a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(<b><a href="CppConst.htm">const</a></b> FileType type)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQFile.htm">QFile</a>Dialog);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> ViewMode { Detail, List };<br/>
&nbsp;&nbsp;d-&gt;setViewMode(<a href="CppQFile.htm">QFile</a>Dialog::Detail);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> FileMode { AnyFile, ExistingFile, Directory, ExistingFiles, DirectoryOnly };<br/>
&nbsp;&nbsp;d-&gt;setFileMode(<a href="CppQFile.htm">QFile</a>Dialog::AnyFile);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> AcceptMode { AcceptOpen, AcceptSave };<br/>
&nbsp;&nbsp;d-&gt;setAcceptDrops(<a href="CppQFile.htm">QFile</a>Dialog::AcceptSave);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEnum.htm">enum</a></b> Option { ShowDirsOnly, DontResolveSym<a href="CppLink.htm">link</a>s, DontConfirmOverwrite, DontUseSheet, DontUseNativeDialog, ReadOnly, HideNameFilterDetails }<br/>
&nbsp;&nbsp;d-&gt;setOptions( <a href="CppQFile.htm">QFile</a>Dialog::DontUseNativeDialog ); <a href="CppComment.htm">//</a>Workaround <b><a href="CppFor.htm">for</a></b> https:<a href="CppComment.htm">//</a><a href="CppBug.htm">bug</a>reports.qt-project.org/browse/QTBUG-29248<br/>
<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> namefile;<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (type)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> FileType::cmp:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namefile <a href="CppOperatorAssign.htm">=</a> <a href="CppString.htm">std::string</a>("<a href="ProjectBrainweaver.htm">Brainweaver</a> concept map (*.")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension() <a href="CppOperatorPlus.htm">+</a> <a href="CppString.htm">std::string</a>(")");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> FileType::pdf:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namefile <a href="CppOperatorAssign.htm">=</a> <a href="CppString.htm">std::string</a>("Portable document format (*.pdf)");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;d-&gt;setNameFilter(namefile.c_str());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> d;<br/>
}<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbitemhighlighter.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbitemhighlighter.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTHIGHLIGHTER_H<br/>
<a href="CppDefine.htm">#define</a> QTHIGHLIGHTER_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQObject.htm">QObject</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbItemHighlighter : <b><a href="CppPublic.htm">public</a></b> <a href="CppQObject.htm">QObject</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbItemHighlighter(<a href="CppQObject.htm">QObject</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbItemHighlighter(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbItemHighlighter&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbItemHighlighter&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbItemHighlighter&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the item being highlighted<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Returns <b><a href="CppNullptr.htm">nullptr</a></b> <b><a href="CppIf.htm">if</a></b> no item is highlighted<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem* GetItem()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_item; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem* GetItem() <b><a href="CppConst.htm">const</a></b> <b><a href="CppNoexcept.htm">noexcept</a></b> { <b><a href="CppReturn.htm">return</a></b> m_item; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the item to highlight.<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/If set with a <b><a href="CppNullptr.htm">nullptr</a></b>, highlighting the current item stops<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/If set with the same item twice, nothing <b><a href="CppNew.htm">new</a></b> happens<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetItem(<a href="CppQt.htm">Qt</a>PvdbNodeItem* <b><a href="CppConst.htm">const</a></b> item);<br/>
<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/A simple <a href="CppCounter.htm">counter</a><br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_cnt;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The item being highlighted<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem* m_item;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppTime.htm">time</a>r used <b><a href="CppFor.htm">for</a></b> highlighting every 100 ms<br/>
&nbsp;&nbsp;<a href="CppQTimer.htm">QTimer</a> * <b><a href="CppConst.htm">const</a></b> m_<a href="CppTime.htm">time</a>r;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>r();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTHIGHLIGHTER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbitemhighlighter.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbitemhighlighter.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbitemhighlighter.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/math/constants/constants.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "qtpvdbconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbnodeitem.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbItemHighlighter::<a href="CppQt.htm">Qt</a>PvdbItemHighlighter(<a href="CppQObject.htm">QObject</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQObject.htm">QObject</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_cnt(0),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>(<b><a href="CppThis.htm">this</a></b>))<br/>
{<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;setInterval(10); <a href="CppComment.htm">//</a>ms<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r,<a href="CppSignalMacro.htm">SIGNAL</a>(<a href="CppTime.htm">time</a>out()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(On<a href="CppTime.htm">Time</a>r()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbItemHighlighter::SetItem(<a href="CppQt.htm">Qt</a>PvdbNodeItem* <b><a href="CppConst.htm">const</a></b> item)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_item <a href="CppOperatorEqual.htm">==</a> item) <b><a href="CppReturn.htm">return</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (item)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppTime.htm">time</a>r-&gt;start();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the current item in its normal rotation<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_item) m_item-&gt;setRotation(0.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppTime.htm">time</a>r-&gt;stop();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;m_item <a href="CppOperatorAssign.htm">=</a> item;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbItemHighlighter::On<a href="CppTime.htm">Time</a>r()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_item)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorIncrement.htm">++</a>m_cnt;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppDefine.htm">#define</a> USE_ROTATION_ANIMATION_675982734653425297529<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> USE_MOVING_POSITION_ANIMATION_723497235973450873659360843975308<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPointF.htm">QPointF</a> pos <a href="CppOperatorAssign.htm">=</a> m_item-&gt;pos();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (m_cnt <a href="CppOperatorModulus.htm">%</a> 4)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: pos.setX(pos.x() <a href="CppOperatorPlus.htm">+</a> 2.0); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1: pos.setY(pos.y() <a href="CppOperatorPlus.htm">+</a> 2.0); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2: pos.setX(pos.x() <a href="CppOperatorMinus.htm">-</a> 2.0); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 3: pos.setY(pos.y() <a href="CppOperatorMinus.htm">-</a> 2.0); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>: <a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;setPos(pos);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> USE_ROTATION_ANIMATION_675982734653425297529<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> pi <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::math::constants::pi&lt;<b><a href="CppDouble.htm">double</a></b>&gt;();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle <a href="CppOperatorAssign.htm">=</a> 2.0 * pi * <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppDouble.htm">double</a></b>&gt;(m_cnt) <a href="CppOperatorDivide.htm">/</a> 360.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> speed_up <a href="CppOperatorAssign.htm">=</a> 5.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> r <a href="CppOperatorAssign.htm">=</a> <a href="CppSin.htm">std::sin</a>(angle * speed_up) * 5.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;setRotation(r);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;update();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbmenudialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBMENUDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbMenuDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbMenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbMenuDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbMenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b> and all other <a href="CppQDialog.htm">QDialog</a>s<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPublic.htm">public</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_assessor_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_create_test_files_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_modify_stylesheet_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_overview_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_print_concept_map_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_print_rating_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_rate_concept_<b><a href="CppAuto.htm">auto</a></b>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_rate_concept_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_rate_concept_map_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_rate_examples_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_rating_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_student_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_arrowitems_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_cluster_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_conceptedit_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_conceptitem_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_conceptmap_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_create_sub_concept_map_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_edge_item_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_node_item_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_qtconceptmapdisplay<a href="CppWidget.htm">widget</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_qtconceptmapedit<a href="CppWidget.htm">widget</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_qtconceptmaprate<a href="CppWidget.htm">widget</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_test_<a href="CppQtRoundedTextRectItem.htm">qtroundedtextrectitem</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_view_files_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_view_test_concept_maps_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e) <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbMenuDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The file to work on<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The mode at which the child dialogs are displayed<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_show_child_dialogs_modal;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbmenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLayout.htm">QLayout</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFileIo.htm">fileio</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconcepttallydialog.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestcreatesubconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfilefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdb<a href="CppAbout.htm">about</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbassessormenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcluster<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexample.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconcepteditdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentcompletedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestconceptmapdisplay<a href="CppWidget.htm">widget</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestconceptmapedit<a href="CppWidget.htm">widget</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestconceptmaprate<a href="CppWidget.htm">widget</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdboverviewdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintratingdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateexamplesdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbratingdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestconceptitemdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestconceptmapdisplay<a href="CppWidget.htm">widget</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestconceptmapedit<a href="CppWidget.htm">widget</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestconceptmaprate<a href="CppWidget.htm">widget</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestedgeitemdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestnodeitemdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbviewfilesdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbviewtestsdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtstylesheetsettermaindialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestedgeitemdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestQtArrowItems.htm">testqtarrowitems</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestQtRoundedEditRectItem.htm">testqtroundededitrectitem</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qt<a href="ToolTestQtRoundedTextRectItem.htm">testqtroundedtextrectitem</a>menudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbmenudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::<a href="CppQt.htm">Qt</a>PvdbMenuDialog(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbMenuDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_show_child_dialogs_modal(<b><a href="CppTrue.htm">true</a></b>)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::~<a href="CppQt.htm">Qt</a>PvdbMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e) <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(e);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_assessor_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); } <a href="CppComment.htm">//</a>For testing<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_concept_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain an empty file<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::Create();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set HeteromorphousTestConceptMap[15]<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::GetHeteromorphousTestConceptMaps().at(18);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Can only set a concept map once");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain a random sub-concept-map<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; &gt; concept_maps <a href="CppOperatorAssign.htm">=</a> file-&gt;GetConceptMap()-&gt;CreateSubs();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display <b><a href="CppThis.htm">this</a></b> random concept map<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> <a href="CppRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> concept_maps.size();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> concept_maps[ index ];<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create and show the dialog<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog&gt; d(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptDialog(concept_map));<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(d.get()); } <b><a href="CppElse.htm">else</a></b> { d-&gt;close(); } <a href="CppComment.htm">//</a>For testing<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_concept_map_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("***");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::Create();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::GetHeteromorphousTestConceptMaps().at(18);<br/>
&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog d(file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_examples_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::GetTests().at(5);<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog(concept));<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(d.get()); } <b><a href="CppElse.htm">else</a></b> { d-&gt;close(); } <a href="CppComment.htm">//</a>For testing<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rating_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::GetTests().at(5);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRatingDialog d(file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_student_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_show_child_dialogs_modal) <b><a href="CppReturn.htm">return</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetOpenFileDialog();<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Kies een assessment bestand");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!v.isEmpty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> v[0].toStdString();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); } <a href="CppComment.htm">//</a>For testing<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCatch.htm">catch</a></b> (...)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Gotta <b><a href="CppCatch.htm">catch</a></b> 'm all<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_cluster_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::Create();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "qtvdbmenudialog<a href="CppImplementationFile.htm">.cpp</a> 79?";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map(pvdb::ConceptMapFactory::Create(<a href="CppQuestion.htm">question</a>));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Can only set concept map once");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>file-&gt;Set<a href="CppQuestion.htm">Question</a>("Wat zal ik als test focusvraag schrijven?");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog d(file);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetCluster());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_overview_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> old_title <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;windowTitle();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle("Loading, please wait...");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbOverviewDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_about_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> <a href="CppQt.htm">Qt</a>Pvdb<a href="CppAbout.htm">About</a>Dialog::Get();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;exec();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;close();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_conceptmap_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::Create();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::GetHeteromorphousTestConceptMaps().at(18);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Can only set a concept map once");<br/>
&nbsp;&nbsp;file-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_conceptedit_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> concepts <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::GetTests();<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;&nbsp;&nbsp;concept <a href="CppOperatorAssign.htm">=</a> concepts[ <a href="CppRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> concepts.size() ];<br/>
&nbsp;&nbsp;<b><a href="CppWhile.htm">while</a></b> (concept-&gt;GetExamples()-&gt;Get().empty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept <a href="CppOperatorAssign.htm">=</a> concepts[ <a href="CppRand.htm">std::rand</a>() <a href="CppOperatorModulus.htm">%</a> concepts.size() ];<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptEditDialog d(concept);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_view_files_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_view_test_concept_maps_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Started <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test");<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbOverviewDialog d; <a href="CppComment.htm">//</a>Creates all screens, does all tests<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Press all buttons<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbMenuDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_show_child_dialogs_modal <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbMenuDialog * <b><a href="CppConst.htm">const</a></b> ui <a href="CppOperatorAssign.htm">=</a> d.ui;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppQPushButton.htm">QPushButton</a>*&gt; buttons<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Duplication of tests, the ones I am most interested in now<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_conceptedit,<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Normal alphabetical order of tests<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_about,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_assessor,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_create_test_files,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_modify_stylesheet,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_overview,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_print_concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_print_rating,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_rate_concept,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_rate_concept_<b><a href="CppAuto.htm">auto</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_rate_concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_rate_examples,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_rating,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_student,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_arrowitems,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_cluster,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_conceptedit,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_conceptitem,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_conceptmap,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_create_sub_concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_edge_item,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_node_item,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_qtconceptmapdisplay<a href="CppWidget.htm">widget</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_qtconceptmapedit<a href="CppWidget.htm">widget</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_qtconceptmaprate<a href="CppWidget.htm">widget</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_test_<a href="CppQtRoundedTextRectItem.htm">qtroundedtextrectitem</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_view_files,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_view_test_concept_maps<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> n_buttons <a href="CppOperatorAssign.htm">=</a> buttons.size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppSize_t.htm">std::size_t</a> i <a href="CppOperatorAssign.htm">=</a> 0; i<a href="CppOperatorNotEqual.htm">!=</a>n_buttons; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; buttons.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPushButton.htm">QPushButton</a> * <b><a href="CppConst.htm">const</a></b> button <a href="CppOperatorAssign.htm">=</a> buttons[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(button);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (button-&gt;isEnabled()) button-&gt;click();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>THE MULTI DIALOG TESTS HERE<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>MULTI DIALOG TEST #1<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>1) Create an assessor <a href="CppQuestion.htm">question</a> file<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>2) Load the assessor file (as a student)<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>3) Fill in a name<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>4) Start with concept map<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>5) Save<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>6) Test <b><a href="CppIf.htm">if</a></b> clustering is disabled<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "DEBUG_QUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> pvdb::File::GetTestFileName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> name <a href="CppOperatorAssign.htm">=</a> "DEBUG_NAME";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>1) Create an assessor <a href="CppQuestion.htm">question</a> file<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>2) Load the assessor file (as a student)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>3) Fill in a name<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.SetName(name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.GetName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>4) Start with concept map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>5) Save<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;GetNodes().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;GetEdges().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoRandomStuff();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;GetNodes().size() &gt; 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetEdges().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>6) Test <b><a href="CppIf.htm">if</a></b> clustering is disabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;GetNodes().size() &gt; 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetEdges().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((file-&gt;GetCluster() <a href="CppOperatorLogicalOr.htm">||</a> !file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "If the file has no cluster, the cluster dialog creates it,"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<b><a href="CppIf.htm">if</a></b> no concept map was present");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d.Get<a href="CppWidget.htm">Widget</a>()-&gt;isEnabled()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Cluster <a href="CppWidget.htm">widget</a> should be disabled <b><a href="CppFor.htm">for</a></b> a file with a filled in ConceptMap");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRemove.htm">std::remove</a>(pvdb::File::GetTestFileName().c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Long test #2<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>1) Create an assessor <a href="CppQuestion.htm">question</a> file<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>2) Load the assessor file (as a student)<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>3) Fill in a name<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>4) Start with clustering<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>5) Start with concept map<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>6) Save<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppQuestion.htm">question</a> <a href="CppOperatorAssign.htm">=</a> "DEBUG_QUESTION";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> pvdb::File::GetTestFileName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> name <a href="CppOperatorAssign.htm">=</a> "DEBUG_NAME";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>1) Create an assessor <a href="CppQuestion.htm">question</a> file<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Set<a href="CppQuestion.htm">Question</a>(<a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>2) Load the assessor file (as a student)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>3) Fill in a name<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.SetName(name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.GetName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>4) Start with clustering<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((file-&gt;GetCluster() <a href="CppOperatorLogicalOr.htm">||</a> !file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "If the file has no cluster, the cluster dialog creates it,"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "<b><a href="CppIf.htm">if</a></b> and only <b><a href="CppIf.htm">if</a></b> there is no concept map");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "the cluster dialog used an existing or created a cluster");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoRandomStuff();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>5) Start with concept map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>6) Save<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DoRandomStuff();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;GetNodes().size() &gt; 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetEdges().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.Save(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>7) Test <b><a href="CppIf.htm">if</a></b> clustering is disabled<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::File::Load(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;Get<a href="CppQuestion.htm">Question</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQuestion.htm">question</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetStudentName() <a href="CppOperatorEqual.htm">==</a> name);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap()-&gt;GetNodes().size() &gt; 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!file-&gt;GetConceptMap()-&gt;GetEdges().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((file-&gt;GetCluster() <a href="CppOperatorLogicalOr.htm">||</a> !file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "If the file has no cluster, the cluster dialog creates it,"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "<b><a href="CppIf.htm">if</a></b> and only <b><a href="CppIf.htm">if</a></b> there is no concept map");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "the cluster dialog used an existing or created a cluster");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!d.Get<a href="CppWidget.htm">Widget</a>()-&gt;isEnabled()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Cluster <a href="CppWidget.htm">widget</a> should be disabled <b><a href="CppFor.htm">for</a></b> a file with a filled in ConceptMap");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRemove.htm">std::remove</a>(pvdb::File::GetTestFileName().c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_conceptitem_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_node_item_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_<a href="CppQtRoundedTextRectItem.htm">qtroundedtextrectitem</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestQtRoundedTextRectItem.htm">TestQtRoundedTextRectItem</a>MenuDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_<a href="CppQtRoundedEditRectItem.htm">qtroundededitrectitem</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestQtRoundededitRectItem.htm">TestQtRoundedEditRectItem</a>MenuDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_edge_item_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_arrowitems_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a><a href="ToolTestQtArrowItems.htm">TestQtArrowItems</a>MenuDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_qtconceptmapedit<a href="CppWidget.htm">widget</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestConceptMapEdit<a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_qtconceptmaprate<a href="CppWidget.htm">widget</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestConceptMapRate<a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_create_test_files_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain the human student concept maps<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; ; <a href="CppOperatorIncrement.htm">++</a>i)&nbsp;&nbsp;<a href="CppComment.htm">//</a>Break when no file is found<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Base 1 counting<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(i+1) <a href="CppOperatorPlus.htm">+</a> "." <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy the file from <a href="CppQt.htm">Qt</a> resources to local file<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> qtfilename <a href="CppOperatorAssign.htm">=</a> ":/files/" <a href="CppOperatorPlus.htm">+</a> filename;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFile.htm">QFile</a> qtfile(qtfilename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtfile.copy(filename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtfile.close();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppFileIo.htm">fileio</a>::<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Obtain the artificial concept maps<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::GetTests();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> v[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(i <a href="CppOperatorPlus.htm">+</a> 5)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> "."<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;file-&gt;Save(s);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_modify_stylesheet_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>StyleSheetSetterMainDialog d(qApp-&gt;styleSheet().toStdString());<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
&nbsp;&nbsp;qApp-&gt;setStyleSheet(d.GetStyleSheet().c_str());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_qtconceptmapdisplay<a href="CppWidget.htm">widget</a>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestConceptMapDisplay<a href="CppWidget.htm">Widget</a>Dialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_print_concept_map_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;on_button_create_test_files_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> "1." <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::File::Load(filename);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog d(file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_print_rating_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;on_button_create_test_files_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> "1." <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::File::Load(filename);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog d(file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_rate_concept_<b><a href="CppAuto.htm">auto</a></b>_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::CreateTestConceptMap();<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog&gt; d(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog(concept_map));<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(d.get()); } <b><a href="CppElse.htm">else</a></b> { d-&gt;close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbMenuDialog::on_button_test_create_sub_concept_map_clicked() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_show_child_dialogs_modal) { <b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d); } <b><a href="CppElse.htm">else</a></b> { d.close(); }<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbnewarrow.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbnewarrow.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBNEWARROW_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBNEWARROW_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQBrush.htm">QBrush</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtArrowItem.htm">qtarrowitem</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppQt.htm">Qt</a>PvdbNewArrow is the arrow shown before a <b><a href="CppNew.htm">new</a></b> one is added<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbNewArrow : <b><a href="CppPublic.htm">public</a></b> <a href="CppQtArrowItem.htm">QtArrowItem</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNewArrow(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem * <b><a href="CppConst.htm">const</a></b> from,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPointF.htm">QPointF</a>&amp; current_to);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNewArrow(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNewArrow&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNewArrow&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNewArrow&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the source node<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem * GetFrom() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_from; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem * GetFrom()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <b><a href="CppReturn.htm">return</a></b> m_from; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Must be suppplied<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paint(<a href="CppQPainter.htm">QPainter</a>* painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a>* option <a href="CppOperatorAssign.htm">=</a> 0, <a href="CppQWidget.htm">QWidget</a>* <a href="CppWidget.htm">widget</a> <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The source node<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Cannot be <b><a href="CppConst.htm">const</a></b> as the user might want to edit it<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem * <b><a href="CppConst.htm">const</a></b> m_from;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBNEWARROW_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbnewarrow.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbnewarrow.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbnewarrow.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFont.htm">QFont</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "qtpvdbconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbnodeitem.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/geometries/linestring.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppGeometry.htm">geometry</a>/geometries/<a href="CppPointer.htm">point</a>_xy.hpp&gt;<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppComment.htm">///</a>Obtain the zero or one intersections between two finite lines<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetLineLineIntersections.htm">GetLineLineIntersections</a>.htm<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;T&gt;<br/>
&gt;<br/>
<a href="CppGetLineLineIntersections.htm">GetLineLineIntersections</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::linestring&lt;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;T&gt;<br/>
&nbsp;&nbsp;&gt; line1,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::linestring&lt;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;T&gt;<br/>
&nbsp;&nbsp;&gt; line2)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;T&gt; <a href="CppPoint.htm">Point</a>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::linestring&lt;<a href="CppPoint.htm">Point</a>&gt; Line;<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppPoint.htm">Point</a>&gt; <a href="CppPointer.htm">point</a>s;<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::intersection(line1,line2,<a href="CppPointer.htm">point</a>s);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppPointer.htm">point</a>s.empty() <a href="CppOperatorLogicalOr.htm">||</a> <a href="CppPointer.htm">point</a>s.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppPointer.htm">point</a>s;<br/>
}<br/>
<br/>
<a href="CppComment.htm">//</a>Helper <a href="CppFunction.htm">function</a> to create a <b><a href="CppConst.htm">const</a></b> line without a temporary <a href="CppVector.htm">std::vector</a><br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::linestring&lt;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;T&gt;<br/>
&gt;<br/>
CreateLine(<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;T&gt; &gt;&amp; v)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::linestring&lt;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;T&gt;<br/>
&nbsp;&nbsp;&gt;(v.begin(),v.end());<br/>
}<br/>
<br/>
<a href="CppComment.htm">///</a>Obtain the zero, one or two intersections between a line and a rectanle<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetLineRectIntersections.htm">GetLineRectIntersections</a>.htm<br/>
<b><a href="CppTemplate.htm">template</a></b> &lt;<b><a href="CppClass.htm">class</a></b> T&gt;<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;T&gt;<br/>
&gt;<br/>
<a href="CppGetLineRectIntersections.htm">GetLineRectIntersections</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::linestring&lt;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;T&gt;<br/>
&nbsp;&nbsp;&gt; line,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::box&lt;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;T&gt;<br/>
&nbsp;&nbsp;&gt; rect)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;T&gt; <a href="CppPoint.htm">Point</a>;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::linestring&lt;<a href="CppPoint.htm">Point</a>&gt; Line;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::box&lt;<a href="CppPoint.htm">Point</a>&gt; Rect;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a> p0 <a href="CppOperatorAssign.htm">=</a> <a href="CppPoint.htm">Point</a>(rect.min_corner().x(), rect.min_corner().y());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a> p1 <a href="CppOperatorAssign.htm">=</a> <a href="CppPoint.htm">Point</a>(rect.max_corner().x(), rect.min_corner().y());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a> p2 <a href="CppOperatorAssign.htm">=</a> <a href="CppPoint.htm">Point</a>(rect.min_corner().x(), rect.max_corner().y());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a> p3 <a href="CppOperatorAssign.htm">=</a> <a href="CppPoint.htm">Point</a>(rect.max_corner().x(), rect.max_corner().y());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;Line&gt; lines<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CreateLine(<a href="CppVector.htm">std::vector</a>&lt;<a href="CppPoint.htm">Point</a>&gt;( {p0,p1} )),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CreateLine(<a href="CppVector.htm">std::vector</a>&lt;<a href="CppPoint.htm">Point</a>&gt;( {p0,p2} )),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CreateLine(<a href="CppVector.htm">std::vector</a>&lt;<a href="CppPoint.htm">Point</a>&gt;( {p1,p3} )),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CreateLine(<a href="CppVector.htm">std::vector</a>&lt;<a href="CppPoint.htm">Point</a>&gt;( {p2,p3} ))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppPoint.htm">Point</a>&gt; <a href="CppPointer.htm">point</a>s;<br/>
&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(lines.begin(),lines.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[&amp;<a href="CppPointer.htm">point</a>s,line](<b><a href="CppConst.htm">const</a></b> Line&amp; side)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppPoint.htm">Point</a>&gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppGetLineLineIntersections.htm">GetLineLineIntersections</a>(line,side);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCopy.htm">std::copy</a>(v.begin(),v.end(),<a href="CppBack_inserter.htm">std::back_inserter</a>(<a href="CppPointer.htm">point</a>s));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Remove doublures<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put '<b><a href="CppTypename.htm">typename</a></b>' before '<a href="CppVector.htm">std::vector</a>&lt;<a href="CppPoint.htm">Point</a>&gt;::<a href="CppIterator.htm">iterator</a>type' to prevent getting the error below:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>error: need '<b><a href="CppTypename.htm">typename</a></b>' before '<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;T&gt; &gt;::<a href="CppIterator.htm">iterator</a>'<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;because '<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;T&gt; &gt;' is a dependent <a href="CppScope.htm">scope</a><br/>
&nbsp;&nbsp;<b><a href="CppTypename.htm">typename</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppPoint.htm">Point</a>&gt;::<a href="CppIterator.htm">iterator</a> new_end <a href="CppOperatorAssign.htm">=</a> <a href="CppUnique.htm">std::unique</a>( <a href="CppPointer.htm">point</a>s.begin(),<a href="CppPointer.htm">point</a>s.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppPoint.htm">Point</a>&amp; rhs)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> lhs.x() <a href="CppOperatorEqual.htm">==</a> rhs.x() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> lhs.y() <a href="CppOperatorEqual.htm">==</a> rhs.y();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppPointer.htm">point</a>s.erase(new_end,<a href="CppPointer.htm">point</a>s.end());<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppPointer.htm">point</a>s.size() <a href="CppOperatorLessEqual.htm">&lt;=</a> 2);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppPointer.htm">point</a>s;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbNewArrow::<a href="CppQt.htm">Qt</a>PvdbNewArrow(<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem * <b><a href="CppConst.htm">const</a></b> from,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPointF.htm">QPointF</a>&amp; current_to)<br/>
&nbsp;&nbsp;: <a href="CppQtArrowItem.htm">QtArrowItem</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from-&gt;pos().x(),from-&gt;pos().y(),<b><a href="CppFalse.htm">false</a></b>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current_to.x(),current_to.y(),<b><a href="CppTrue.htm">true</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_from(from)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_from);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>New arrows are above all items<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setZValue(2.0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>A <b><a href="CppNew.htm">new</a></b> arrow must not be moveable<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setFlag(<a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsSelectable,<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setFlag(<a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsMovable,<b><a href="CppFalse.htm">false</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Reject enterHoverEvents<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setAcceptHoverEvents(<b><a href="CppFalse.htm">false</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!(<b><a href="CppThis.htm">this</a></b>-&gt;flags() &amp; <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsSelectable));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!(<b><a href="CppThis.htm">this</a></b>-&gt;flags() &amp; <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsMovable ));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbNewArrow::paint(<a href="CppQPainter.htm">QPainter</a>* painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a>* option, <a href="CppQWidget.htm">QWidget</a>* <a href="CppWidget.htm">widget</a>)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::d2::<a href="CppPointer.htm">point</a>_xy&lt;<b><a href="CppDouble.htm">double</a></b>&gt; <a href="CppPoint.htm">Point</a>;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::linestring&lt;<a href="CppPoint.htm">Point</a>&gt; Line;<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppBoost.htm">boost</a>::<a href="CppGeometry.htm">geometry</a>::model::box&lt;<a href="CppPoint.htm">Point</a>&gt; Rect;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Line line <a href="CppOperatorAssign.htm">=</a> CreateLine(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppPoint.htm">Point</a>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPoint.htm">Point</a>(m_from-&gt;pos().x(),m_from-&gt;pos().y()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPoint.htm">Point</a>(<b><a href="CppThis.htm">this</a></b>-&gt;line().p2().x(),<b><a href="CppThis.htm">this</a></b>-&gt;line().p2().y())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a>F qr1 <a href="CppOperatorAssign.htm">=</a> m_from-&gt;boundingRect().translated(m_from-&gt;pos());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Rect r1(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPoint.htm">Point</a>(qr1.topLeft().x()&nbsp;&nbsp;&nbsp;&nbsp;,qr1.topLeft().y()&nbsp;&nbsp;&nbsp;&nbsp;),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppPoint.htm">Point</a>(qr1.bottomRight().x(),qr1.bottomRight().y())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppPoint.htm">Point</a>&gt; p1 <a href="CppOperatorAssign.htm">=</a> <a href="CppGetLineRectIntersections.htm">GetLineRectIntersections</a>(line,r1);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (p1.empty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Yes,it happens, when the line does not leave the <a href="CppRectangle.htm">rectangle</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppThis.htm">this</a></b> happens when the two node rectanges overlap<br/>
&nbsp;&nbsp;&nbsp;&nbsp;p1.push_back(<a href="CppPoint.htm">Point</a>(m_from-&gt;pos().x(),m_from-&gt;pos().y()));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!p1.empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p1.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQPointF.htm">QPointF</a> p2 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;line().p2();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setLine(QLineF(<a href="CppQPointF.htm">QPointF</a>(p1[0].x(),p1[0].y()),p2));<br/>
&nbsp;&nbsp;<a href="CppQtArrowItem.htm">QtArrowItem</a>::paint(painter,option,<a href="CppWidget.htm">widget</a>);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdboverviewdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdboverviewdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBOVERVIEWDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBOVERVIEWDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbOverviewDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbOverviewDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBOVERVIEWDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdboverviewdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdboverviewdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdboverviewdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtpvdboverview<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbOverviewDialog::<a href="CppQt.htm">Qt</a>PvdbOverviewDialog(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent)<br/>
{<br/>
&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setLayout(layout);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a> <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a>;<br/>
&nbsp;&nbsp;layout-&gt;addWidget(<a href="CppWidget.htm">widget</a>);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbOverviewDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(e);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdboverviewwidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdboverviewwidget.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBOVERVIEWWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBOVERVIEWWIDGET_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsView.htm">QGraphicsView</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQGraphicsView.htm">QGraphicsView</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a>(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mouse<a href="CppDouble.htm">Double</a>ClickEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *event);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create all dialogs<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* &gt; GetAllDialogs();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/NASTY BUG ALERT: It crashes <a href="CppWine.htm">Wine</a> <b><a href="CppIf.htm">if</a></b> m_dialogs is created as<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>&gt; &gt; m_dialogs;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/No idea why...<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* &gt; m_dialogs;<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBOVERVIEWWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdboverviewwidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdboverviewwidget.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdboverviewdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDialog.htm">QDialog</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsScene.htm">QGraphicsScene</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsProxyWidget.htm">QGraphicsProxyWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsTextItem.htm">QGraphicsTextItem</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQIcon.htm">QIcon</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQWidget.htm">QWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qtpvdboverview<a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfilefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestconceptitemdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbviewtestsdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconcepteditdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconcepttallydialog.h"<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "pvdbmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintratingdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestedgeitemdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestnodeitemdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestconceptmapedit<a href="CppWidget.htm">widget</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestconceptmaprate<a href="CppWidget.htm">widget</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbassessormenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateexamplesdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentcompletedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentpartialdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbratingdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentstartcompletedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a>::<a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a>(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQGraphicsView.htm">QGraphicsView</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppQGraphicsScene.htm">QGraphicsScene</a>,parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_dialogs(GetAllDialogs())<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount_if.htm">std::count_if</a>(m_dialogs.begin(),m_dialogs.end(),[](<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p) { <b><a href="CppReturn.htm">return</a></b> !p; } ) <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<a href="CppAll_of.htm">std::all_of</a>(m_dialogs.begin(),m_dialogs.end(),[](<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p) { <b><a href="CppReturn.htm">return</a></b> p; } ));<br/>
&nbsp;&nbsp;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> y_sum <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> max_width <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> m_dialogs.size();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> 0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppConvert.htm">Convert</a> dialog to <a href="CppWidget.htm">widget</a> <b><a href="CppExplicit.htm">explicit</a></b>ly <b><a href="CppFor.htm">for</a></b> <a href="CppWine.htm">Wine</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_dialogs[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a> <a href="CppOperatorAssign.htm">=</a> m_dialogs[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsProxyWidget.htm">QGraphicsProxyWidget</a> * <b><a href="CppConst.htm">const</a></b> proxy <a href="CppOperatorAssign.htm">=</a> scene()-&gt;addWidget(<a href="CppWidget.htm">widget</a>,<a href="CppQt.htm">Qt</a>::Dialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(proxy);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;proxy-&gt;setPos(32,y_sum);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;y_sum <a href="CppOperatorPlusAssign.htm">+=</a> proxy-&gt;rect().height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;y_sum <a href="CppOperatorPlusAssign.htm">+=</a> 64; <a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a>ed by window height<br/>
&nbsp;&nbsp;&nbsp;&nbsp;max_width <a href="CppOperatorAssign.htm">=</a> <a href="CppMax.htm">std::max</a>(max_width,proxy-&gt;rect().width());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> window_title<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> m_dialogs[i]-&gt;windowTitle().toStdString()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> " ("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_dialogs[i]-&gt;objectName().toStdString()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ")";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;proxy-&gt;setWindowTitle(window_title.c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setGeometry(0,0,max_width,y_sum);<br/>
}<br/>
<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* &gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a>::GetAllDialogs()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* &gt; v;<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbAssessorMenuDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file(pvdb::FileFactory::GetTests().at(3));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetCluster());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbClusterDialog(file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptEditDialog(pvdb::ConceptFactory::GetTests().at(4)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDialog(pvdb::FileFactory::GetTests().at(2)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentCompleteDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbCreateAssessmentMenuDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbMenuDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::GetTests().at(4);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog(file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::GetTests().at(4);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog(file));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::GetHeteromorphousTestConceptMaps().at(18);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptDialog(concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::GetHeteromorphousTestConceptMaps().at(18);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog(concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog(pvdb::FileFactory::GetTests().at(2)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog(pvdb::ConceptFactory::GetTests().at(4)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRatingDialog(pvdb::FileFactory::GetTests().at(4)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> REALLY_DEMONSTRATE_INFINITE_RECURSION_7236834589746034<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>*(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbOverviewDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog(pvdb::FileFactory::GetTests().at(2)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog(pvdb::FileFactory::GetTests().at(2)));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> PVDB_ALSO_SHOW_TEST_DIALOGS<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTestConceptMapEdit<a href="CppWidget.htm">Widget</a>Dialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTestConceptMapRate<a href="CppWidget.htm">Widget</a>Dialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbViewTestsDialog);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppCount_if.htm">std::count_if</a>(v.begin(),v.end(),[](<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p) { <b><a href="CppReturn.htm">return</a></b> !p; } ) <a href="CppOperatorEqual.htm">==</a> 0);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(<a href="CppAll_of.htm">std::all_of</a>(v.begin(),v.end(),[](<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>* p) { <b><a href="CppReturn.htm">return</a></b> p; } )); <a href="CppComment.htm">//</a>MAJ<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbOverview<a href="CppWidget.htm">Widget</a>::mouse<a href="CppDouble.htm">Double</a>ClickEvent(<a href="CppQMouseEvent.htm">QMouseEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQImage.htm">QImage</a> image(scene()-&gt;sceneRect().size().toSize(), <a href="CppQImage.htm">QImage</a>::Format_ARGB32); <a href="CppComment.htm">//</a> Create the image with the exact size of the shrunk scene<br/>
&nbsp;&nbsp;image.fill(<a href="CppQt.htm">Qt</a>::transparent);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">//</a> Start all pixels transparent<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter(&amp;image);<br/>
&nbsp;&nbsp;scene()-&gt;render(&amp;painter);<br/>
&nbsp;&nbsp;image.save("file_name.png");<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbprintconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbprintconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBPRINTCONCEPTMAPDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBPRINTCONCEPTMAPDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>View the current work, optimized <b><a href="CppFor.htm">for</a></b> humans<br/>
<a href="CppComment.htm">///</a>This dialog will not be visible <b><a href="CppFor.htm">for</a></b> humans at all in release<br/>
<a href="CppComment.htm">///</a><a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog is optimized <b><a href="CppFor.htm">for</a></b> printers<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/file be <b><a href="CppConst.htm">const</a></b>, as the Display Concept map cannot deal with <b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap (yet?)<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt;&amp; file,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Print();<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> showEvent(<a href="CppQShowEvent.htm">QShowEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_print_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/m_file be <b><a href="CppConst.htm">const</a></b>, as the Display Concept map cannot deal with <b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap (yet?)<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDisplay<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; Collect<a href="CppWidget.htm">Widget</a>s() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBPRINTCONCEPTMAPDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbprintconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbprintconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCtimeH.htm">ctime</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/con<a href="CppVersion.htm">version</a>/cast.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPrinter.htm">QPrinter</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbratedconcept<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbprintconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdisplay<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt;&amp; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDisplay<a href="CppWidget.htm">Widget</a>(file-&gt;GetConceptMap()))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;frame_concept_map-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;frame_concept_map-&gt;layout()-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;ui-&gt;label_student_name-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(<a href="CppString.htm">std::string</a>("Concept map van ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_file-&gt;GetStudentName()).c_str()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTime_t.htm">std::time_t</a> my_<a href="CppTime.htm">time</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTime.htm">std::time</a>( &amp;my_<a href="CppTime.htm">time</a> );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTm.htm">std::tm</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppTime.htm">time</a>_and_date <a href="CppOperatorAssign.htm">=</a> <a href="CppLocaltime.htm">std::localtime</a>(&amp;my_<a href="CppTime.htm">time</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> <a href="CppAsctime.htm">std::asctime</a>(<a href="CppTime.htm">time</a>_and_date);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_date-&gt;setText( (<a href="CppString.htm">std::string</a>("Datum: ") <a href="CppOperatorPlus.htm">+</a> s).c_str());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Much work done in ShowEvent<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::~<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::Collect<a href="CppWidget.htm">Widget</a>s() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; v;<br/>
&nbsp;&nbsp;v.push_back(ui-&gt;frame_top);<br/>
&nbsp;&nbsp;v.push_back(ui-&gt;frame_concept_map);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> <a href="CppWidget.htm">widget</a>s in <a href="CppWidget.htm">widget</a>_concept_map_as_text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n <a href="CppOperatorAssign.htm">=</a> ui-&gt;frame_concept_map_as_text-&gt;layout()-&gt;count();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(ui-&gt;frame_concept_map_as_text-&gt;layout()-&gt;itemAt(i)-&gt;<a href="CppWidget.htm">widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::on_button_print_clicked()<br/>
{<br/>
&nbsp;&nbsp;Print();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::Print()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start save dialog<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; print_dialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::pdf));<br/>
&nbsp;&nbsp;print_dialog-&gt;setWindowTitle("Exporteer document naar PDF");<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (print_dialog-&gt;exec() <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppQDialog.htm">QDialog</a>::Accepted<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> print_dialog-&gt;selectedFiles().empty() )<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!print_dialog-&gt;selectedFiles().empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(print_dialog-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> print_dialog-&gt;selectedFiles()[0].toStdString();<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppQPrinter.htm">QPrinter</a> printer;<br/>
&nbsp;&nbsp;printer.setOrientation(<a href="CppQPrinter.htm">QPrinter</a>::Portrait);<br/>
&nbsp;&nbsp;printer.setPaperSize(<a href="CppQPrinter.htm">QPrinter</a>::A4);<br/>
&nbsp;&nbsp;printer.setOutputFormat(<a href="CppQPrinter.htm">QPrinter</a>::PdfFormat); <a href="CppComment.htm">//</a>Student <b><a href="CppExport.htm">export</a></b>s to PDF<br/>
&nbsp;&nbsp;printer.setFullPage(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;printer.setOutputFileName(filename.c_str());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the image to painter to printer (?must be done before printing)<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter;<br/>
<br/>
&nbsp;&nbsp;painter.begin(&amp;printer);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Collect <a href="CppWidget.htm">widget</a>s to print<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; <a href="CppWidget.htm">widget</a>s <a href="CppOperatorAssign.htm">=</a> Collect<a href="CppWidget.htm">Widget</a>s();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppQWidget.htm">QWidget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a>: <a href="CppWidget.htm">widget</a>s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> h <a href="CppOperatorAssign.htm">=</a> <a href="CppWidget.htm">widget</a>-&gt;height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (y+h &gt; painter.window().height())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printer.<b><a href="CppNew.htm">new</a></b>Page();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;render(&amp;painter,<a href="CppQPoint.htm">QPoint</a>(0,y));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y<a href="CppOperatorPlusAssign.htm">+=</a>h;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;painter.end();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintConceptMapDialog::showEvent(<a href="CppQShowEvent.htm">QShowEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; copy_concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> m_file-&gt;GetConceptMap();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;GetConceptMap());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppWidget.htm">widget</a>-&gt;ReadFromConceptMap(copy_concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setHorizontalScrollBarPolicy(<a href="CppQt.htm">Qt</a>::ScrollBarAlwaysOff);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setVerticalScrollBarPolicy(<a href="CppQt.htm">Qt</a>::ScrollBarAlwaysOff);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> 2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Fit concept map to <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;fitInView(m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;items().count()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;GetConceptMap()-&gt;GetNodes().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_<a href="CppWidget.htm">widget</a>-&gt;GetConceptMap()-&gt;GetEdges().size()));<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept map as text<br/>
&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;frame_concept_map_as_text-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.htm">std::string</a> text;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_nodes <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetNodes().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> node_index <a href="CppOperatorAssign.htm">=</a> 1; node_index <a href="CppOperatorNotEqual.htm">!=</a> n_nodes; <a href="CppOperatorIncrement.htm">++</a>node_index) <a href="CppComment.htm">//</a>1: skip center node<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; node <a href="CppOperatorAssign.htm">=</a> m_file-&gt;GetConceptMap()-&gt;GetNodes().at(node_index);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>(m_file-&gt;GetConceptMap(),node);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;HideRating();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;frame_concept_map_as_text-&gt;layout()-&gt;addWidget(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbprintratingdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbprintratingdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBPRINTRATINGDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBPRINTRATINGDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog;<br/>
}<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>View the current rating, optimized <b><a href="CppFor.htm">for</a></b> printers<br/>
<a href="CppComment.htm">///</a>This dialog will not be visible <b><a href="CppFor.htm">for</a></b> humans at all in release<br/>
<a href="CppComment.htm">///</a><a href="CppQt.htm">Qt</a>PvdbRatingDialog is optimized <b><a href="CppFor.htm">for</a></b> humans<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/file be <b><a href="CppConst.htm">const</a></b>, as the Display Concept map cannot deal with <b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap (yet?)<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt;&amp; file,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a> * GetTableConcepts();<br/>
&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a> * GetTableExamples();<br/>
&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a> * GetTableValues();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Print();<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> showEvent(<a href="CppQShowEvent.htm">QShowEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_print_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; Collect<a href="CppWidget.htm">Widget</a>s() <b><a href="CppConst.htm">const</a></b>;<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/m_file be <b><a href="CppConst.htm">const</a></b>, as the Display Concept map cannot deal with <b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap (yet?)<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapRate<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBPRINTRATINGDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbprintratingdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbprintratingdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintratingdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCtimeH.htm">ctime</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;QScrollBar&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPrinter.htm">QPrinter</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbedge.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexample.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbratedconcept<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbdisplay.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbprintratingdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt;&amp; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapRate<a href="CppWidget.htm">Widget</a>(file-&gt;GetConceptMap()))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;ui-&gt;label_focal_<a href="CppQuestion.htm">question</a>-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(<a href="CppString.htm">std::string</a>("FOCUSVRAAG: ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_file-&gt;Get<a href="CppQuestion.htm">Question</a>()).c_str()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;ui-&gt;label_student_name-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(<a href="CppString.htm">std::string</a>("VAN: ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_file-&gt;GetStudentName()).c_str()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;ui-&gt;label_assessor_name-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(<a href="CppString.htm">std::string</a>("ASSESSOR: ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_file-&gt;GetAssessorName()).c_str()<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;frame_concept_map-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;frame_concept_map-&gt;layout()-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTime_t.htm">std::time_t</a> my_<a href="CppTime.htm">time</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTime.htm">std::time</a>( &amp;my_<a href="CppTime.htm">time</a> );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppTm.htm">std::tm</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppTime.htm">time</a>_and_date <a href="CppOperatorAssign.htm">=</a> <a href="CppLocaltime.htm">std::localtime</a>(&amp;my_<a href="CppTime.htm">time</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> <a href="CppAsctime.htm">std::asctime</a>(<a href="CppTime.htm">time</a>_and_date);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_date-&gt;setText( (<a href="CppString.htm">std::string</a>("Datum: ") <a href="CppOperatorPlus.htm">+</a> s).c_str()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::~<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::Collect<a href="CppWidget.htm">Widget</a>s() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; v { ui-&gt;frame_header, ui-&gt;frame_concept_map, ui-&gt;label_concept_map_as_text };<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> <a href="CppWidget.htm">widget</a>s in <a href="CppWidget.htm">widget</a>_concept_map_as_text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n <a href="CppOperatorAssign.htm">=</a> ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map_as_text-&gt;layout()-&gt;count();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map_as_text-&gt;layout()-&gt;itemAt(i)-&gt;<a href="CppWidget.htm">widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;v.push_back(ui-&gt;frame_concepts);<br/>
&nbsp;&nbsp;v.push_back(ui-&gt;frame_competencies);<br/>
&nbsp;&nbsp;v.push_back(ui-&gt;frame_values);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppQTableWidget.htm">QTableWidget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::GetTableConcepts()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ui-&gt;table_concepts;<br/>
}<br/>
<br/>
<a href="CppQTableWidget.htm">QTableWidget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::GetTableExamples()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ui-&gt;table_examples;<br/>
}<br/>
<br/>
<a href="CppQTableWidget.htm">QTableWidget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::GetTableValues()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ui-&gt;table_values;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::on_button_print_clicked()<br/>
{<br/>
&nbsp;&nbsp;Print();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::Print()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start save dialog<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQFile.htm">QFile</a>Dialog&gt; print_dialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::pdf));<br/>
&nbsp;&nbsp;print_dialog-&gt;setWindowTitle("Exporteer document naar PDF");<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (print_dialog-&gt;exec() <a href="CppOperatorNotEqual.htm">!=</a> <a href="CppQDialog.htm">QDialog</a>::Accepted<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> print_dialog-&gt;selectedFiles().empty() )<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!print_dialog-&gt;selectedFiles().empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(print_dialog-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> print_dialog-&gt;selectedFiles()[0].toStdString();<br/>
<br/>
&nbsp;&nbsp;<a href="CppQPrinter.htm">QPrinter</a> printer;<br/>
&nbsp;&nbsp;printer.setOrientation(<a href="CppQPrinter.htm">QPrinter</a>::Portrait);<br/>
&nbsp;&nbsp;printer.setPaperSize(<a href="CppQPrinter.htm">QPrinter</a>::A4);<br/>
&nbsp;&nbsp;printer.setFullPage(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;printer.setOutputFileName(filename.c_str());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Draw the image to painter to printer (?must be done before printing)<br/>
&nbsp;&nbsp;<a href="CppQPainter.htm">QPainter</a> painter;<br/>
<br/>
&nbsp;&nbsp;painter.begin(&amp;printer);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Collect <a href="CppWidget.htm">widget</a>s to print<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppQWidget.htm">QWidget</a> *&gt; <a href="CppWidget.htm">widget</a>s <a href="CppOperatorAssign.htm">=</a> Collect<a href="CppWidget.htm">Widget</a>s();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppQWidget.htm">QWidget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a>: <a href="CppWidget.htm">widget</a>s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> h <a href="CppOperatorAssign.htm">=</a> <a href="CppWidget.htm">widget</a>-&gt;height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (y+h &gt; painter.window().height())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printer.<b><a href="CppNew.htm">new</a></b>Page();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;render(&amp;painter,<a href="CppQPoint.htm">QPoint</a>(0,y));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y<a href="CppOperatorPlusAssign.htm">+=</a>h;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;painter.end();<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog::showEvent(<a href="CppQShowEvent.htm">QShowEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept map<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; copy_concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> m_file-&gt;GetConceptMap();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; copy_concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::DeepCopy(m_file-&gt;GetConceptMap()); <a href="CppComment.htm">//</a>2013-05-31 REJECT DEEP COPIES<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_<a href="CppWidget.htm">widget</a>-&gt;ReadFromConceptMap(copy_concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setHorizontalScrollBarPolicy(<a href="CppQt.htm">Qt</a>::ScrollBarAlwaysOff);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setVerticalScrollBarPolicy(<a href="CppQt.htm">Qt</a>::ScrollBarAlwaysOff);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setMaximumHeight(m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> 2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> 2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Fit concept map to <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;fitInView(m_<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept map as text<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map_as_text-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.htm">std::string</a> text;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_nodes <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetNodes().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> node_index <a href="CppOperatorAssign.htm">=</a> 1; node_index <a href="CppOperatorNotEqual.htm">!=</a> n_nodes; <a href="CppOperatorIncrement.htm">++</a>node_index) <a href="CppComment.htm">//</a>1: skip center node<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> node <a href="CppOperatorAssign.htm">=</a> m_file-&gt;GetConceptMap()-&gt;GetNodes().at(node_index);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> <a href="CppWidget.htm">widget</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>(m_file-&gt;GetConceptMap(),node);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map_as_text-&gt;layout()-&gt;addWidget(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copied from caller<br/>
&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayRatedConcepts(m_file,<b><a href="CppThis.htm">this</a></b>-&gt;GetTableConcepts());<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_file-&gt;GetConceptMap()-&gt;GetNodes().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetTableConcepts()-&gt;setMinimumHeight( ((sz-1) * 30) <a href="CppOperatorPlus.htm">+</a> 26 ); <a href="CppComment.htm">//</a>Standard row is 30 pixels high, header 25 pixels<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayExamples(m_file,<b><a href="CppThis.htm">this</a></b>-&gt;GetTableExamples());<br/>
&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayValues(m_file,<b><a href="CppThis.htm">this</a></b>-&gt;GetTableValues());<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbrateconceptdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbrateconceptdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBRATECONCEPTDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBRATECONCEPTDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>Rate the focal concept of a sub-ConceptMap.<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/concept is the center node<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/sub_concept_map[0] is the same as concept and might be changed<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/sub_concept_map is non-<b><a href="CppConst.htm">const</a></b>, as GetRatedConcept will produce a <b><a href="CppNew.htm">new</a></b> concept<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; sub_concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set suggested values <b><a href="CppFor.htm">for</a></b> <b><a href="CppThis.htm">this</a></b> concept<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppVoid.htm">void</a></b> MakeSuggestions(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; sub_concept_map);<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_ok_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_tally_relevancies_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_complexity_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_concreteness_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_specificity_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/To distinguish between closing the dialog by clicking OK, or by ALT-F4<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_button_ok_clicked;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The center concept, may be changed when the user clicks OK<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppComment.htm">/*</a> NO CONST <a href="CppComment.htm">*/</a> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; m_concept;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The complexity at <b><a href="CppThis.htm">this</a></b> dialog its creation, stored so that the user can cancel the dialog<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_initial_complexity;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_initial_concreteness;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> m_initial_specificity;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Cannot be <b><a href="CppConst.htm">const</a></b>, only used in calculating the suggestions<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; m_sub_concept_map;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMapRate<a href="CppWidget.htm">Widget</a>&gt; m_<a href="CppWidget.htm">widget</a>;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbConceptMapRate<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> m_<a href="CppWidget.htm">widget</a>; <a href="CppComment.htm">//</a>WHY DID I DO THIS???<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnRatingComplexityChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept* concept);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnRatingConcretenessChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept* concept);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnRatingSpecificityChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept* concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBRATECONCEPTDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbrateconceptdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbrateconceptdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/bind.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/con<a href="CppVersion.htm">version</a>/cast.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbedge.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamplesfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbrating.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconcepttallydialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbrateconceptdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; sub_concept_map,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_button_ok_clicked(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept(sub_concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;() ),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_initial_complexity(sub_concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept()-&gt;GetRatingComplexity()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <a href="CppOperatorMinus.htm">-</a>1 ),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_initial_concreteness(sub_concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept()-&gt;GetRatingConcreteness()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <a href="CppOperatorMinus.htm">-</a>1),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_initial_specificity(sub_concept_map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept()-&gt;GetRatingSpecificity()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <a href="CppOperatorMinus.htm">-</a>1),<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_sub_concept_map(sub_concept_map),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapRate<a href="CppWidget.htm">Widget</a>(sub_concept_map))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_sub_concept_map) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_sub_concept_map);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_sub_concept_map-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_sub_concept_map-&gt;GetNodes()[0]);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;concept_map_layout);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;concept_map_layout-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>.get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_complexity-&gt;setCurrentIndex(m_initial_complexity);<br/>
&nbsp;&nbsp;ui-&gt;box_concreteness-&gt;setCurrentIndex(m_initial_concreteness);<br/>
&nbsp;&nbsp;ui-&gt;box_specificity-&gt;setCurrentIndex(m_initial_specificity);<br/>
&nbsp;&nbsp;ui-&gt;box_complexity-&gt;setFocus();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set suggestions<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Formeel uitgangspunt: "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(pvdb::Rating::SuggestComplexity(m_sub_concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_complexity-&gt;set<a href="Tools.htm">Tool</a>Tip(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Formeel uitgangspunt: "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(pvdb::Rating::SuggestConcreteness(m_sub_concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_concreteness-&gt;set<a href="Tools.htm">Tool</a>Tip(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Formeel uitgangspunt: "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(pvdb::Rating::SuggestSpecificity(m_sub_concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_specificity-&gt;set<a href="Tools.htm">Tool</a>Tip(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Center the dialog<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setGeometry(screen.adjusted(64,64,-64,-64));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().center() );<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>The rating by the Tally dialog must be visible as of 2013-08-30<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>so let <b><a href="CppThis.htm">this</a></b> dialog follow the ratings done by the tally dialog<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>DOES NOT WORK<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_concept-&gt;m_signal_rating_complexity_changed.connect(<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::OnRatingComplexityChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_concept-&gt;m_signal_rating_concreteness_changed.connect(<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::OnRatingConcretenessChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_concept-&gt;m_signal_rating_specificity_changed.connect(<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::OnRatingSpecificityChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1));<br/>
}<br/>
<br/>
<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::~<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>If user clicked OK, keep the current ratings (which are updated by the comboboxes)<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppElse.htm">else</a></b> the user cancelled, so put back the initial ratings<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_button_ok_clicked <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> m_concept)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept-&gt;SetRatingComplexity(m_initial_complexity);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept-&gt;SetRatingConcreteness(m_initial_concreteness);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept-&gt;SetRatingSpecificity(m_initial_specificity);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppIf.htm">if</a></b> (m_concept)<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;<a href="CppComment.htm">//</a>Just to be sure<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;m_concept-&gt;m_signal_rating_complexity_changed.disconnect(<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::OnRatingComplexityChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;m_concept-&gt;m_signal_rating_concreteness_changed.disconnect(<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::OnRatingConcretenessChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;m_concept-&gt;m_signal_rating_specificity_changed.disconnect(<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::OnRatingSpecificityChanged,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>}<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::on_button_ok_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Ratings already set by comboboxes<br/>
&nbsp;&nbsp;m_button_ok_clicked <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::OnRatingComplexityChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept* concept)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;box_complexity-&gt;currentIndex() <a href="CppOperatorNotEqual.htm">!=</a> concept-&gt;GetRatingComplexity())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_complexity-&gt;setCurrentIndex(concept-&gt;GetRatingComplexity());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::OnRatingConcretenessChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept* concept)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;box_concreteness-&gt;currentIndex() <a href="CppOperatorNotEqual.htm">!=</a> concept-&gt;GetRatingConcreteness())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_concreteness-&gt;setCurrentIndex(concept-&gt;GetRatingConcreteness());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::OnRatingSpecificityChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept* concept)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;box_specificity-&gt;currentIndex() <a href="CppOperatorNotEqual.htm">!=</a> concept-&gt;GetRatingSpecificity())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_specificity-&gt;setCurrentIndex(concept-&gt;GetRatingSpecificity());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Started <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::Test");<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; &gt; concept_maps<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::GetAllTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> n_concept_maps <a href="CppOperatorAssign.htm">=</a> concept_maps.size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_concept_maps; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> concept_maps[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog d(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> concept_map-&gt;GetNodes().at(0)-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; old_concept <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::DeepCopy(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(old_concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept <a href="CppOperatorNotEqual.htm">!=</a> old_concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*concept,*old_concept));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog d(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingComplexity() <a href="CppOperatorEqual.htm">==</a> d.ui-&gt;box_complexity-&gt;currentIndex());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingConcreteness() <a href="CppOperatorEqual.htm">==</a> d.ui-&gt;box_concreteness-&gt;currentIndex());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingSpecificity() <a href="CppOperatorEqual.htm">==</a> d.ui-&gt;box_specificity-&gt;currentIndex());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Change all boxes<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;box_complexity-&gt;setCurrentIndex(((d.ui-&gt;box_complexity-&gt;currentIndex() <a href="CppOperatorPlus.htm">+</a> 2) <a href="CppOperatorModulus.htm">%</a> 4) <a href="CppOperatorMinus.htm">-</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;box_concreteness-&gt;setCurrentIndex(((d.ui-&gt;box_complexity-&gt;currentIndex() <a href="CppOperatorPlus.htm">+</a> 2) <a href="CppOperatorModulus.htm">%</a> 4) <a href="CppOperatorMinus.htm">-</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;box_specificity-&gt;setCurrentIndex(((d.ui-&gt;box_complexity-&gt;currentIndex() <a href="CppOperatorPlus.htm">+</a> 2) <a href="CppOperatorModulus.htm">%</a> 4) <a href="CppOperatorMinus.htm">-</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>But <b><a href="CppDo.htm">do</a></b> not click OK<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.close();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Need to call the <a href="CppDestructor.htm">destructor</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*concept,*old_concept) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Without clicking OK, <a href="CppQt.htm">Qt</a>PvdbRateConceptDialog must not change the concept");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; &gt; concept_maps<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::GetAllTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> n_concept_maps <a href="CppOperatorAssign.htm">=</a> concept_maps.size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_concept_maps; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> concept_maps[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!concept_map)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog d(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> concept_map-&gt;GetNodes().at(0)-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; old_concept <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::DeepCopy(concept);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(old_concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept <a href="CppOperatorNotEqual.htm">!=</a> old_concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*concept,*old_concept));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog d(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingComplexity()&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> d.ui-&gt;box_complexity-&gt;currentIndex());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingConcreteness() <a href="CppOperatorEqual.htm">==</a> d.ui-&gt;box_concreteness-&gt;currentIndex());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetRatingSpecificity()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> d.ui-&gt;box_specificity-&gt;currentIndex());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Change all boxes, in range [-1,2]<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;box_complexity-&gt;setCurrentIndex(((d.ui-&gt;box_complexity-&gt;currentIndex() <a href="CppOperatorPlus.htm">+</a> 2) <a href="CppOperatorModulus.htm">%</a> 4) <a href="CppOperatorMinus.htm">-</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;box_concreteness-&gt;setCurrentIndex(((d.ui-&gt;box_complexity-&gt;currentIndex() <a href="CppOperatorPlus.htm">+</a> 2) <a href="CppOperatorModulus.htm">%</a> 4) <a href="CppOperatorMinus.htm">-</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;box_specificity-&gt;setCurrentIndex(((d.ui-&gt;box_complexity-&gt;currentIndex() <a href="CppOperatorPlus.htm">+</a> 2) <a href="CppOperatorModulus.htm">%</a> 4) <a href="CppOperatorMinus.htm">-</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;button_ok-&gt;click();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*concept,*old_concept) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog must change the concept when clicked OK");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::on_button_tally_relevancies_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppBool.htm">bool</a></b> has_concept_map <a href="CppOperatorAssign.htm">=</a> m_sub_concept_map.get(); <a href="CppComment.htm">//</a>.get() needed <b><a href="CppFor.htm">for</a></b> cross<a href="CppCompiler.htm">compiler</a><br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog d(m_sub_concept_map);<br/>
&nbsp;&nbsp;d.exec(); <a href="CppComment.htm">//</a>Keep <b><a href="CppThis.htm">this</a></b> dialog visible, as of 2013-08-30<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(has_concept_map <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppBool.htm">bool</a></b>&gt;(m_sub_concept_map.get()));<br/>
&nbsp;&nbsp;ui-&gt;box_complexity-&gt;setCurrentIndex(d.GetSuggestedComplexity());<br/>
&nbsp;&nbsp;ui-&gt;box_concreteness-&gt;setCurrentIndex(d.GetSuggestedConcreteness());<br/>
&nbsp;&nbsp;ui-&gt;box_specificity-&gt;setCurrentIndex(d.GetSuggestedSpecificity());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::on_box_complexity_currentIndexChanged(<b><a href="CppInt.htm">int</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_concept-&gt;GetRatingComplexity() <a href="CppOperatorNotEqual.htm">!=</a> ui-&gt;box_complexity-&gt;currentIndex())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept-&gt;SetRatingComplexity(ui-&gt;box_complexity-&gt;currentIndex());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::on_box_concreteness_currentIndexChanged(<b><a href="CppInt.htm">int</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_concept-&gt;GetRatingConcreteness() <a href="CppOperatorNotEqual.htm">!=</a> ui-&gt;box_concreteness-&gt;currentIndex())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept-&gt;SetRatingConcreteness(ui-&gt;box_concreteness-&gt;currentIndex());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog::on_box_specificity_currentIndexChanged(<b><a href="CppInt.htm">int</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_concept-&gt;GetRatingSpecificity() <a href="CppOperatorNotEqual.htm">!=</a> ui-&gt;box_specificity-&gt;currentIndex())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept-&gt;SetRatingSpecificity(ui-&gt;box_specificity-&gt;currentIndex());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbrateconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbrateconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBRATECONCEPTMAPDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBRATECONCEPTMAPDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapRate<a href="CppWidget.htm">Widget</a> * Get<a href="CppWidget.htm">Widget</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to key press<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_next_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapRate<a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppWidget.htm">widget</a> requested <b><a href="CppFor.htm">for</a></b> a rating of the already supplied sub concept map,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/with the focal concept item as the central node<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnRequestRateConceptDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; sub_concept_map);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBRATECONCEPTMAPDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbrateconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbrateconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/bind.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/lambda/lambda.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/con<a href="CppVersion.htm">version</a>/cast.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfilefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtScopedDisable.htm">qtscopeddisable</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbratingdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbrateconceptmapdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog(<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog),<br/>
&nbsp;&nbsp;m_file(file),<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapRate<a href="CppWidget.htm">Widget</a>(file-&gt;GetConceptMap()))<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> m_file-&gt;GetConceptMap();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept_map);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> QGridLayout;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>-&gt;setLayout(layout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> <a href="CppString.htm">std::string</a>("Naam student: ") <a href="CppOperatorPlus.htm">+</a> m_file-&gt;GetStudentName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_name-&gt;setText(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Center the dialog<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setGeometry(screen.adjusted(64,64,-64,-64));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().center() );<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>-&gt;m_signal_request_rate_concept_dialog.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::OnRequestRateConceptDialog,<b><a href="CppThis.htm">this</a></b>,<a href="CppBoostLambda.htm">boost::lambda</a>::_1));<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::~<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMapRate<a href="CppWidget.htm">Widget</a> * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::Get<a href="CppWidget.htm">Widget</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_<a href="CppWidget.htm">widget</a>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_S) { Save(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::on_button_next_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;GetConceptMap() <a href="CppOperatorEqual.htm">==</a> m_file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRatingDialog d(m_file);<br/>
&nbsp;&nbsp;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d.GetBackToMenu())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;close();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::OnRequestRateConceptDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; sub_concept_map)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sub_concept_map);<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> HIDE_PARENT_IDEA_5675869837643987593795<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog d(sub_concept_map); <a href="CppComment.htm">//</a>Item may be changed<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.htm">widget</a>-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;<a href="CppPreElse.htm">#else</a><br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptDialog d(sub_concept_map); <a href="CppComment.htm">//</a>Item may be changed<br/>
&nbsp;&nbsp;d.exec();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::Test started");<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::FileFactory::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file <a href="CppOperatorAssign.htm">=</a> v[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>( (file-&gt;GetConceptMap() <a href="CppOperatorLogicalOr.htm">||</a> !file-&gt;GetConceptMap() )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "A file may or may not have an <a href="CppInitialize.htm">initialize</a>d concept map");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Cannot rate a null concept map<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog d(file);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.Get<a href="CppWidget.htm">Widget</a>());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(( file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a>&nbsp;&nbsp;d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> (!file-&gt;GetConceptMap() <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> !d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; !file-&gt;GetConceptMap()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap::HasSameContent(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *file-&gt;GetConceptMap(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *d.Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::Save()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide(); <a href="CppComment.htm">//</a>Obligatory, otherwise program will freeze<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla het assessment invoer-bestand op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected <a href="CppOperatorLogicalOr.htm">||</a> d-&gt;selectedFiles().empty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!filename_raw.empty());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> <a href="CppString.htm">std::string</a>(".") <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save(filename);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>close(); <a href="CppComment.htm">//</a>Do not close after saving<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_<a href="CppWidget.htm">widget</a>-&gt;GetConceptMap() <a href="CppOperatorEqual.htm">==</a> m_file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_file-&gt;SetConceptMap(concept_map);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(IsEqual(*m_file-&gt;GetConceptMap(),*Get<a href="CppWidget.htm">Widget</a>()-&gt;GetConceptMap()));<br/>
&nbsp;&nbsp;m_file-&gt;Save(filename);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptMapDialog::on_button_save_clicked()<br/>
{<br/>
&nbsp;&nbsp;Save();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbrateconcepttallydialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbrateconcepttallydialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBRATECONCEPTTALLYDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBRATECONCEPTTALLYDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Sub concept map is modified by <b><a href="CppThis.htm">this</a></b> dialog<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppComment.htm">/*</a> <b><a href="CppConst.htm">const</a></b> <a href="CppComment.htm">*/</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; sub_concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; CreateTestConceptMap();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the suggested complexity, calculated from <b><a href="CppThis.htm">this</a></b> dialog<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetSuggestedComplexity() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the suggested concreteness, calculated from <b><a href="CppThis.htm">this</a></b> dialog<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetSuggestedConcreteness() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the suggested specificity, calculated from <b><a href="CppThis.htm">this</a></b> dialog<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetSuggestedSpecificity() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> resizeEvent(<a href="CppQResizeEvent.htm">QResizeEvent</a> *);<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_ok_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnCellChanged(<b><a href="CppInt.htm">int</a></b> row, <b><a href="CppInt.htm">int</a></b> col);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppComment.htm">/*</a> <b><a href="CppConst.htm">const</a></b> <a href="CppComment.htm">*/</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; m_map;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The concept map is <a href="CppConvert.htm">convert</a>ed to <b><a href="CppThis.htm">this</a></b> data type<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppVector.htm">std::vector</a> index equals the row<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Every row is a pair of a <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; and an <a href="CppInt.htm">integer</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; is the concept being judged,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a>&nbsp;&nbsp;which might be the concept on the focal node and the concept on the egdes connected to the focal node<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The index is the index of the example being judged, or <a href="CppOperatorMinus.htm">-</a>1, denoting it is the concept name being judged<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppPair.htm">std::pair</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt;,<b><a href="CppInt.htm">int</a></b>&gt; Row;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;Row&gt; m_data;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;Row&gt;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;CreateData(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppComment.htm">/*</a> <b><a href="CppConst.htm">const</a></b> <a href="CppComment.htm">*/</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; map);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBRATECONCEPTTALLYDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbrateconcepttallydialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbrateconcepttallydialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconcepttallydialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppSstreamH.htm">sstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppNumericH.htm">numeric</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/con<a href="CppVersion.htm">version</a>/cast.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcenternode.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcenternodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbedge.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbedgefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexample.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbedge.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbrating.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbrateconcepttallydialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppComment.htm">/*</a> <b><a href="CppConst.htm">const</a></b> <a href="CppComment.htm">*/</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; sub_concept_map,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_data(CreateData(sub_concept_map))<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_rows <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_data.size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_cols <a href="CppOperatorAssign.htm">=</a> 4;<br/>
&nbsp;&nbsp;ui-&gt;table-&gt;setRowCount(n_rows);<br/>
&nbsp;&nbsp;ui-&gt;table-&gt;setWordWrap(<b><a href="CppTrue.htm">true</a></b>); <a href="CppComment.htm">//</a>NEW 2013-09-23<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> row_index=0; row_index<a href="CppOperatorNotEqual.htm">!=</a>n_rows; <a href="CppOperatorIncrement.htm">++</a>row_index)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Row&amp; row <a href="CppOperatorAssign.htm">=</a> m_data[row_index];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> row.first;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> example_index <a href="CppOperatorAssign.htm">=</a> row.second;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (example_index <a href="CppOperatorEqual.htm">==</a> <a href="CppOperatorMinus.htm">-</a>1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display concept text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put X checkbox in the relation's name<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Keep C and S columns empty<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put X checkbox in the relation's name in column[0]<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> column <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> i <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsUserCheckable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled | <a href="CppQt.htm">Qt</a>::ItemIsSelectable);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i-&gt;setCheck<a href="CppState.htm">State</a>(concept-&gt;GetIsComplex() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setItem(row_index, column, i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put uneditable nothing column[1]<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> column <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> i <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setItem(row_index, column, i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put uneditable nothing column[2]<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> column <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> i <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setItem(row_index, column, i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put the relation's name in place<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> i <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> concept-&gt;GetName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i-&gt;setText(s.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> column <a href="CppOperatorAssign.htm">=</a> 3;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setItem(row_index, column, i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(example_index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(concept-&gt;GetExamples()-&gt;Get().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Example&gt; example <a href="CppOperatorAssign.htm">=</a> concept-&gt;GetExamples()-&gt;Get()[example_index];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display index'th example<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> col_index=0; col_index<a href="CppOperatorNotEqual.htm">!=</a>n_cols; <a href="CppOperatorIncrement.htm">++</a>col_index)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (col_index <a href="CppOperatorNotEqual.htm">!=</a> 3)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<a href="CppQt.htm">Qt</a>::ItemIsUserCheckable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled | <a href="CppQt.htm">Qt</a>::ItemIsSelectable);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (col_index)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: item-&gt;setCheck<a href="CppState.htm">State</a>(example-&gt;GetIsComplex() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1: item-&gt;setCheck<a href="CppState.htm">State</a>(example-&gt;GetIsConcrete() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2: item-&gt;setCheck<a href="CppState.htm">State</a>(example-&gt;GetIsSpecific() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>: <a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setItem(row_index, col_index, item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>::ItemIsSelectable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQt.htm">Qt</a>::ItemIsEnabled);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> example-&gt;GetText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setText(s.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;table-&gt;setItem(row_index, col_index, item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set text on top<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sub_concept_map)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!sub_concept_map-&gt;GetNodes().empty());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; focal_concept <a href="CppOperatorAssign.htm">=</a> sub_concept_map-&gt;GetNodes().at(0)-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(focal_concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_concept_name-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<a href="CppString.htm">std::string</a>("Voorbeelden/toelichting bij concept: ") <a href="CppOperatorPlus.htm">+</a> focal_concept-&gt;GetName()).c_str() );<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_concept_name-&gt;setText("Voorbeelden/toelichting bij concept: (geen concept)");<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;ui-&gt;table-&gt;setHorizontalScrollBarPolicy(<a href="CppQt.htm">Qt</a>::ScrollBarAlwaysOff);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;label_<a href="CppDebug.htm">debug</a>-&gt;setVisible(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;table,<a href="CppSignalMacro.htm">SIGNAL</a>(cellChanged(<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(OnCellChanged(<b><a href="CppInt.htm">int</a></b>,<b><a href="CppInt.htm">int</a></b>)));<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> GetSuggestedComplexity();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> c <a href="CppOperatorAssign.htm">=</a> GetSuggestedConcreteness();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> s <a href="CppOperatorAssign.htm">=</a> GetSuggestedSpecificity();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStringstream.htm">std::stringstream</a> m;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Complexiteit: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> x <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ", concreetheid: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> c <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ", specificiteit: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_<a href="CppDebug.htm">debug</a>-&gt;setText(m.str().c_str());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::~<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::Row&gt;<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::CreateData(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppComment.htm">/*</a> <b><a href="CppConst.htm">const</a></b> <a href="CppComment.htm">*/</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; map)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;Row&gt; data;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!map) <b><a href="CppReturn.htm">return</a></b> data;<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(map);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!map-&gt;GetNodes().empty());<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> the focal concept its examples (not its name: <b><a href="CppThis.htm">this</a></b> cannot be judged)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; focal_concept <a href="CppOperatorAssign.htm">=</a> map-&gt;GetNodes().at(0)-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(focal_concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(focal_concept-&gt;GetExamples()-&gt;Get().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_examples; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data.push_back(<a href="CppMake_pair.htm">std::make_pair</a>(focal_concept,i));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Collect all relations of the focal node of <b><a href="CppThis.htm">this</a></b> sub concept map<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Edge&gt; edge: map-&gt;GetEdges())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>But skip the connections to the focal <a href="CppQuestion.htm">question</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;pvdb::CenterNode&gt;(edge-&gt;GetTo())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> <a href="CppDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;pvdb::CenterNode&gt;(edge-&gt;GetFrom()))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("X");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> edge-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;data.push_back(<a href="CppMake_pair.htm">std::make_pair</a>(concept,-1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(concept-&gt;GetExamples()-&gt;Get().size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_examples; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data.push_back(<a href="CppMake_pair.htm">std::make_pair</a>(concept,i));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> data;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::CreateTestConceptMap()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create a subconcept map <b><a href="CppFor.htm">for</a></b> testing:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> node with a concept with (1) text 'TextNode' (2) one example with text 'TextExampleNode'<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> edge with a concept with (1) text 'TextEdge' (2) one example with text 'TextExampleEdge'<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a> <a href="CppOperatorMinus.htm">-</a> node with a concept with (1) text 'TextDontCare'<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept_node_focal(pvdb::ConceptFactory::Create("TextNode",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{"TextExampleNode",pvdb::Competency::misc}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;0,1,2));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept_node_other(pvdb::ConceptFactory::Create("TextDontCare",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;0,1,2));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept_edge(pvdb::ConceptFactory::Create("TextEdge",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{"TextExampleEdge",pvdb::Competency::misc}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;2,1,0));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; node_focal(pvdb::NodeFactory::Create(concept_node_focal));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; node_other(pvdb::NodeFactory::Create(concept_node_other));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; sub_concept_map(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::Create(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_focal,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_other<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} ,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb::EdgeFactory::Create(concept_edge,1.2,3.4,node_focal,<b><a href="CppTrue.htm">true</a></b>,node_other,<b><a href="CppTrue.htm">true</a></b>)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(sub_concept_map);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;pvdb::CenterNode&gt;(sub_concept_map-&gt;GetNodes()[0]));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppDynamic_pointer_cast.htm">boost::dynamic_pointer_cast</a>&lt;pvdb::CenterNode&gt;(sub_concept_map-&gt;GetNodes()[1]));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> sub_concept_map;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::GetSuggestedComplexity() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Tally the edges that contribute to complexity<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_edges <a href="CppOperatorAssign.htm">=</a> <a href="CppAccumulate.htm">std::accumulate</a>(m_data.begin(),m_data.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b> init, <b><a href="CppConst.htm">const</a></b> Row&amp; row)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> (row.second <a href="CppOperatorEqual.htm">==</a> <a href="CppOperatorMinus.htm">-</a>1 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> row.first-&gt;GetIsComplex() ? 1 : 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Tally the examples that contribute to complexity<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples <a href="CppOperatorAssign.htm">=</a> <a href="CppAccumulate.htm">std::accumulate</a>(m_data.begin(),m_data.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b> init, <b><a href="CppConst.htm">const</a></b> Row&amp; row)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> row.second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (index <a href="CppOperatorEqual.htm">==</a> <a href="CppOperatorMinus.htm">-</a>1) <b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row.first);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row.first-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(row.first-&gt;GetExamples()-&gt;Get().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> (row.first-&gt;GetExamples()-&gt;Get()[index]-&gt;GetIsComplex() ? 1 : 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_tallied <a href="CppOperatorAssign.htm">=</a> n_examples <a href="CppOperatorPlus.htm">+</a> n_edges;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_tallied &lt; 2) <b><a href="CppReturn.htm">return</a></b> 0;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_tallied &lt; 4) <b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 2;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::GetSuggestedConcreteness() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Tally the examples that contribute to concreteness<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples <a href="CppOperatorAssign.htm">=</a> <a href="CppAccumulate.htm">std::accumulate</a>(m_data.begin(),m_data.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b> init, <b><a href="CppConst.htm">const</a></b> Row&amp; row)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> row.second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (index <a href="CppOperatorEqual.htm">==</a> <a href="CppOperatorMinus.htm">-</a>1) <b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row.first);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row.first-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(row.first-&gt;GetExamples()-&gt;Get().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> (row.first-&gt;GetExamples()-&gt;Get()[index]-&gt;GetIsConcrete() ? 1 : 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_tallied <a href="CppOperatorAssign.htm">=</a> n_examples;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_tallied &lt; 2) <b><a href="CppReturn.htm">return</a></b> 0;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_tallied &lt; 4) <b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 2;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::GetSuggestedSpecificity() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Tally the examples that contribute to specificity<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_examples <a href="CppOperatorAssign.htm">=</a> <a href="CppAccumulate.htm">std::accumulate</a>(m_data.begin(),m_data.end(),0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppInt.htm">int</a></b> init, <b><a href="CppConst.htm">const</a></b> Row&amp; row)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> row.second;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (index <a href="CppOperatorEqual.htm">==</a> <a href="CppOperatorMinus.htm">-</a>1) <b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row.first);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(row.first-&gt;GetExamples()-&gt;Get().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row.first-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> init <a href="CppOperatorPlus.htm">+</a> (row.first-&gt;GetExamples()-&gt;Get()[index]-&gt;GetIsSpecific() ? 1 : 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_tallied <a href="CppOperatorAssign.htm">=</a> n_examples;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_tallied &lt; 2) <b><a href="CppReturn.htm">return</a></b> 0;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n_tallied &lt; 4) <b><a href="CppReturn.htm">return</a></b> 1;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> 2;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::OnCellChanged(<b><a href="CppInt.htm">int</a></b> row_index, <b><a href="CppInt.htm">int</a></b> col)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row_index <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(row_index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_data.size()));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(col <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(col &lt; 4);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>Item * <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> ui-&gt;table-&gt;item(row_index,col);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Row&amp; row <a href="CppOperatorAssign.htm">=</a> m_data[row_index];<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> row.first;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index <a href="CppOperatorAssign.htm">=</a> row.second;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (index <a href="CppOperatorEqual.htm">==</a> <a href="CppOperatorMinus.htm">-</a>1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept name<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (col)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: concept-&gt;SetIsComplex( item-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Checked );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1: <b><a href="CppBreak.htm">break</a></b>; <a href="CppComment.htm">//</a>Empty cell<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2: <b><a href="CppBreak.htm">break</a></b>; <a href="CppComment.htm">//</a>Empty cell<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 3: <b><a href="CppBreak.htm">break</a></b>; <a href="CppComment.htm">//</a>It's read-only! <a href="CppComment.htm">//</a>concept-&gt;SetName( item-&gt;text().toStdString() ); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept example<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(concept-&gt;GetExamples()-&gt;Get().size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Example&gt; example <a href="CppOperatorAssign.htm">=</a> concept-&gt;GetExamples()-&gt;Get()[index];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (col)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: example-&gt;SetIsComplex( item-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Checked ); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1: example-&gt;SetIsConcrete( item-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Checked ); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2: example-&gt;SetIsSpecific( item-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Checked ); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 3: <b><a href="CppBreak.htm">break</a></b>; <a href="CppComment.htm">//</a>It's read-only! <a href="CppComment.htm">//</a>example-&gt;SetText( item-&gt;text().toStdString() ); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> GetSuggestedComplexity();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> c <a href="CppOperatorAssign.htm">=</a> GetSuggestedConcreteness();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> s <a href="CppOperatorAssign.htm">=</a> GetSuggestedSpecificity();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppStringstream.htm">std::stringstream</a> m;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Complexiteit: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> x <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ", concreetheid: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> c <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ", specificiteit: " <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_<a href="CppDebug.htm">debug</a>-&gt;setText(m.str().c_str());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::resizeEvent(<a href="CppQResizeEvent.htm">QResizeEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> small_col_width <a href="CppOperatorAssign.htm">=</a> 20;<br/>
&nbsp;&nbsp;ui-&gt;table-&gt;setColumnWidth(0, small_col_width);<br/>
&nbsp;&nbsp;ui-&gt;table-&gt;setColumnWidth(1, small_col_width);<br/>
&nbsp;&nbsp;ui-&gt;table-&gt;setColumnWidth(2, small_col_width);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> extra_space <a href="CppOperatorAssign.htm">=</a> 8;<br/>
&nbsp;&nbsp;ui-&gt;table-&gt;setColumnWidth(3,ui-&gt;table-&gt;width() <a href="CppOperatorMinus.htm">-</a> (3 * small_col_width) <a href="CppOperatorMinus.htm">-</a> (3 * extra_space));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::on_button_ok_clicked()<br/>
{<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Started <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Empty table<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog d(concept_map);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> CreateTestConceptMap();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog d(concept_map);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>TEMP<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b>(d.ui-&gt;table-&gt;columnCount() <a href="CppOperatorNotEqual.htm">!=</a> 4) <a href="CppTRACE.htm">TRACE</a>(d.ui-&gt;table-&gt;columnCount());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b>(d.ui-&gt;table-&gt;rowCount() <a href="CppOperatorNotEqual.htm">!=</a> 3) <a href="CppTRACE.htm">TRACE</a>(d.ui-&gt;table-&gt;rowCount());<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;columnCount() <a href="CppOperatorEqual.htm">==</a> 4);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;rowCount() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map-&gt;GetNodes().size() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map-&gt;GetEdges().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; focal_node <a href="CppOperatorAssign.htm">=</a> concept_map-&gt;GetNodes()[0];<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; other_node <a href="CppOperatorAssign.htm">=</a> concept_map-&gt;GetNodes()[1]; <a href="CppComment.htm">//</a>Don't care<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Edge&gt; edge <a href="CppOperatorAssign.htm">=</a> concept_map-&gt;GetEdges()[0];<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(0,0)-&gt;flags() <a href="CppOperatorEqual.htm">==</a> (<a href="CppQt.htm">Qt</a>::ItemIsUserCheckable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled | <a href="CppQt.htm">Qt</a>::ItemIsSelectable));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(0,1)-&gt;flags() <a href="CppOperatorEqual.htm">==</a> (<a href="CppQt.htm">Qt</a>::ItemIsUserCheckable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled | <a href="CppQt.htm">Qt</a>::ItemIsSelectable));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(0,2)-&gt;flags() <a href="CppOperatorEqual.htm">==</a> (<a href="CppQt.htm">Qt</a>::ItemIsUserCheckable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled | <a href="CppQt.htm">Qt</a>::ItemIsSelectable));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(0,3)-&gt;flags() <a href="CppOperatorEqual.htm">==</a> (<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled));<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(1,0)-&gt;flags() <a href="CppOperatorEqual.htm">==</a> (<a href="CppQt.htm">Qt</a>::ItemIsUserCheckable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled | <a href="CppQt.htm">Qt</a>::ItemIsSelectable));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(1,1)-&gt;flags() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::ItemIsEnabled); <a href="CppComment.htm">//</a>Empty<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(1,2)-&gt;flags() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::ItemIsEnabled); <a href="CppComment.htm">//</a>Empty<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(1,3)-&gt;flags() <a href="CppOperatorEqual.htm">==</a> (<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled));<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(2,0)-&gt;flags() <a href="CppOperatorEqual.htm">==</a> (<a href="CppQt.htm">Qt</a>::ItemIsUserCheckable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled | <a href="CppQt.htm">Qt</a>::ItemIsSelectable));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(2,1)-&gt;flags() <a href="CppOperatorEqual.htm">==</a> (<a href="CppQt.htm">Qt</a>::ItemIsUserCheckable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled | <a href="CppQt.htm">Qt</a>::ItemIsSelectable));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(2,2)-&gt;flags() <a href="CppOperatorEqual.htm">==</a> (<a href="CppQt.htm">Qt</a>::ItemIsUserCheckable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled | <a href="CppQt.htm">Qt</a>::ItemIsSelectable));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(2,3)-&gt;flags() <a href="CppOperatorEqual.htm">==</a> (<a href="CppQt.htm">Qt</a>::ItemIsSelectable | <a href="CppQt.htm">Qt</a>::ItemIsEnabled));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check current state, before modification<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(0,0)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (focal_node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetIsComplex() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(0,1)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (focal_node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetIsConcrete() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(0,2)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (focal_node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetIsSpecific() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(0,3)-&gt;text() <a href="CppOperatorEqual.htm">==</a> <a href="CppQString.htm">QString</a>(focal_node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetText().c_str()));<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(1,0)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (edge-&gt;GetConcept()-&gt;GetIsComplex() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(1,1)-&gt;text() <a href="CppOperatorEqual.htm">==</a> "");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(1,2)-&gt;text() <a href="CppOperatorEqual.htm">==</a> "");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(1,3)-&gt;text() <a href="CppOperatorEqual.htm">==</a> <a href="CppQString.htm">QString</a>(edge-&gt;GetConcept()-&gt;GetName().c_str()));<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(2,0)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (edge-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetIsComplex() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(2,1)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (edge-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetIsConcrete() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(2,2)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (edge-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetIsSpecific() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(2,3)-&gt;text() <a href="CppOperatorEqual.htm">==</a> <a href="CppQString.htm">QString</a>(edge-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetText().c_str()));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Modify table<br/>
&nbsp;&nbsp;d.ui-&gt;table-&gt;item(0,0)-&gt;setCheck<a href="CppState.htm">State</a>(d.ui-&gt;table-&gt;item(0,0)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Unchecked ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked);<br/>
&nbsp;&nbsp;d.ui-&gt;table-&gt;item(0,1)-&gt;setCheck<a href="CppState.htm">State</a>(d.ui-&gt;table-&gt;item(0,1)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Unchecked ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked);<br/>
&nbsp;&nbsp;d.ui-&gt;table-&gt;item(0,2)-&gt;setCheck<a href="CppState.htm">State</a>(d.ui-&gt;table-&gt;item(0,2)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Unchecked ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>d.ui-&gt;table-&gt;item(0,3)-&gt;setText("MODIFIED"); <a href="CppComment.htm">//</a>User should not be able to modify <b><a href="CppThis.htm">this</a></b><br/>
<br/>
&nbsp;&nbsp;d.ui-&gt;table-&gt;item(1,0)-&gt;setCheck<a href="CppState.htm">State</a>(d.ui-&gt;table-&gt;item(1,0)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Unchecked ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>d.ui-&gt;table-&gt;item(1,3)-&gt;setText("MODIFIED TOO"); <a href="CppComment.htm">//</a>User should not be able to modify <b><a href="CppThis.htm">this</a></b><br/>
<br/>
&nbsp;&nbsp;d.ui-&gt;table-&gt;item(2,0)-&gt;setCheck<a href="CppState.htm">State</a>(d.ui-&gt;table-&gt;item(2,0)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Unchecked ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked);<br/>
&nbsp;&nbsp;d.ui-&gt;table-&gt;item(2,1)-&gt;setCheck<a href="CppState.htm">State</a>(d.ui-&gt;table-&gt;item(2,1)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Unchecked ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked);<br/>
&nbsp;&nbsp;d.ui-&gt;table-&gt;item(2,2)-&gt;setCheck<a href="CppState.htm">State</a>(d.ui-&gt;table-&gt;item(2,2)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Unchecked ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>d.ui-&gt;table-&gt;item(2,3)-&gt;setText("MODIFIED AS WELL"); <a href="CppComment.htm">//</a>User should not be able to modify <b><a href="CppThis.htm">this</a></b><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check that data is modified by GUI<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(0,0)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (focal_node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetIsComplex() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(0,1)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (focal_node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetIsConcrete() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(0,2)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (focal_node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetIsSpecific() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(0,3)-&gt;text() <a href="CppOperatorEqual.htm">==</a> <a href="CppQString.htm">QString</a>(focal_node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetText().c_str()));<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(1,0)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (edge-&gt;GetConcept()-&gt;GetIsComplex() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(1,1)-&gt;text() <a href="CppOperatorEqual.htm">==</a> "");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(1,2)-&gt;text() <a href="CppOperatorEqual.htm">==</a> "");<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(1,3)-&gt;text() <a href="CppOperatorEqual.htm">==</a> <a href="CppQString.htm">QString</a>(edge-&gt;GetConcept()-&gt;GetName().c_str()));<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(2,0)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (edge-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetIsComplex() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(2,1)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (edge-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetIsConcrete() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(2,2)-&gt;check<a href="CppState.htm">State</a>() <a href="CppOperatorEqual.htm">==</a> (edge-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetIsSpecific() ? <a href="CppQt.htm">Qt</a>::Checked : <a href="CppQt.htm">Qt</a>::Unchecked));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.ui-&gt;table-&gt;item(2,3)-&gt;text() <a href="CppOperatorEqual.htm">==</a> <a href="CppQString.htm">QString</a>(edge-&gt;GetConcept()-&gt;GetExamples()-&gt;Get()[0]-&gt;GetText().c_str()));<br/>
<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Finished <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateConceptTallyDialog::Test successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbratedconceptwidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbratedconceptwidget.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBRATEDCONCEPTWIDGET_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBRATEDCONCEPTWIDGET_H<br/>
<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDialog.htm">QDialog</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a> : <b><a href="CppPublic.htm">public</a></b> <a href="CppQDialog.htm">QDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Node&gt; node,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Hides the rating. This is used when a student views his/her<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/work before an assessor has rated his/her work<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> HideRating();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoResizeLists();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a> *ui;<br/>
&nbsp;&nbsp;<a href="CppQTimer.htm">QTimer</a> * <b><a href="CppConst.htm">const</a></b> m_<a href="CppTime.htm">time</a>r;<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBRATEDCONCEPTWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbratedconceptwidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbratedconceptwidget.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbratedconcept<a href="CppWidget.htm">widget</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;QScrollBar&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQTimer.htm">QTimer</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbedge.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexample.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbratedconcept<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>::<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Node&gt; node,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQDialog.htm">QDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.htm">QTimer</a>)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> font_in_list_height <a href="CppOperatorAssign.htm">=</a> 16;<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQFont.htm">QFont</a> font <a href="CppOperatorAssign.htm">=</a> ui-&gt;list_cluster_relations-&gt;font();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;font.set<a href="CppPoint.htm">Point</a>Size(8);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;list_concept_examples-&gt;setFont(font);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;list_cluster_relations-&gt;setFont(font);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;ui-&gt;label_name-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(<a href="CppString.htm">std::string</a>("Cluster bij concept: ") <a href="CppOperatorPlus.htm">+</a> node-&gt;GetConcept()-&gt;GetName()).c_str()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;ui-&gt;label_complexity-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(<a href="CppString.htm">std::string</a>("Complexiteit: ") <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(node-&gt;GetConcept()-&gt;GetRatingComplexity())).c_str()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;ui-&gt;label_concreteness-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(<a href="CppString.htm">std::string</a>("Concreetheid: ") <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(node-&gt;GetConcept()-&gt;GetRatingConcreteness())).c_str()<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;ui-&gt;label_specificity-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;(<a href="CppString.htm">std::string</a>("Specificiteit: ") <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(node-&gt;GetConcept()-&gt;GetRatingSpecificity())).c_str()<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put examples in list<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Example&gt; example: node-&gt;GetConcept()-&gt;GetExamples()-&gt;Get())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;list_concept_examples-&gt;addItem(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(example-&gt;GetCompetency())) <a href="CppOperatorPlus.htm">+</a> ". " <a href="CppOperatorPlus.htm">+</a> example-&gt;GetText()).c_str()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Edge&gt; edge: concept_map-&gt;GetEdges())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (edge-&gt;GetFrom() <a href="CppOperatorEqual.htm">==</a> node <a href="CppOperatorLogicalOr.htm">||</a> edge-&gt;GetTo() <a href="CppOperatorEqual.htm">==</a> node)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Dependent on arrow<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (edge-&gt;GetFrom() <a href="CppOperatorEqual.htm">==</a> node)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> first_arrow<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ( edge-&gt;HasTailArrow() ? "&lt;<a href="CppOperatorMinus.htm">-</a> " : "<a href="CppOperatorDecrement.htm">--</a> ");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> second_arrow<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> ( edge-&gt;HasHeadArrow() ? " <a href="CppOperatorMinus.htm">-</a>&gt; " : " <a href="CppOperatorDecrement.htm">--</a> ");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> first_arrow<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> edge-&gt;GetConcept()-&gt;GetName()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> second_arrow<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> node-&gt;GetConcept()-&gt;GetName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;list_cluster_relations-&gt;addItem(<b><a href="CppNew.htm">new</a></b> <a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item(text.c_str()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b> <b><a href="CppIf.htm">if</a></b> (edge-&gt;GetTo() <a href="CppOperatorEqual.htm">==</a> node)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(edge-&gt;GetTo() <a href="CppOperatorEqual.htm">==</a> node);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> first_arrow&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> (edge-&gt;HasHeadArrow() ? "&lt;<a href="CppOperatorMinus.htm">-</a> " : "<a href="CppOperatorDecrement.htm">--</a> ");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> second_arrow <a href="CppOperatorAssign.htm">=</a> (edge-&gt;HasTailArrow() ? " <a href="CppOperatorMinus.htm">-</a>&gt; " : " <a href="CppOperatorDecrement.htm">--</a> ");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> first_arrow<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> edge-&gt;GetConcept()-&gt;GetName()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> second_arrow<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> node-&gt;GetConcept()-&gt;GetName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;list_cluster_relations-&gt;addItem(<b><a href="CppNew.htm">new</a></b> <a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item(text.c_str()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Indendent on arrow: all examples<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Example&gt; example: edge-&gt;GetConcept()-&gt;GetExamples()-&gt;Get())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;list_cluster_relations-&gt;addItem(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<a href="CppString.htm">std::string</a>("&nbsp;&nbsp;") <a href="CppOperatorPlus.htm">+</a> example-&gt;GetText()).c_str()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r,&amp;<a href="CppQTimer.htm">QTimer</a>::<a href="CppTime.htm">time</a>out,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>::DoResizeLists);<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;setInterval(1);<br/>
&nbsp;&nbsp;m_<a href="CppTime.htm">time</a>r-&gt;start();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>::~<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>::HideRating()<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;label_complexity-&gt;hide();<br/>
&nbsp;&nbsp;ui-&gt;label_concreteness-&gt;hide();<br/>
&nbsp;&nbsp;ui-&gt;label_specificity-&gt;hide();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatedConcept<a href="CppWidget.htm">Widget</a>::DoResizeLists()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set the list displaying the concept its height and widt<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> done <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a> * <b><a href="CppConst.htm">const</a></b> w:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{ ui-&gt;list_cluster_relations, ui-&gt;list_concept_examples } )<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (w-&gt;verticalScrollBar()-&gt;isVisible())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;done <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> h <a href="CppOperatorAssign.htm">=</a> w-&gt;height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w-&gt;setMaximumHeight(h+1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w-&gt;setMinimumHeight(h+1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(w-&gt;height() <a href="CppOperatorEqual.htm">==</a> h <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Calculate the height of list_cluster_relations from its sizehint its heights<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Approach 2<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> USE_APPROACH_2_20131013<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_items <a href="CppOperatorAssign.htm">=</a> w-&gt;count();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> height <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n_items; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height <a href="CppOperatorPlusAssign.htm">+=</a> <a href="CppMax.htm">std::max</a>(w-&gt;item(i)-&gt;sizeH<b><a href="CppInt.htm">int</a></b>().height(),16);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(height <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;w-&gt;setMinimumHeight(height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;w-&gt;setMaximumHeight(height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (done) m_<a href="CppTime.htm">time</a>r-&gt;stop();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Approach 1: set the height manually<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>ui-&gt;list_concept_examples-&gt;setMinimumHeight(<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;ui-&gt;list_concept_examples-&gt;count() * font_in_list_height);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>ui-&gt;list_concept_examples-&gt;setMaximumHeight(<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;ui-&gt;list_concept_examples-&gt;count() * font_in_list_height);<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbrateexamplesdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbrateexamplesdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBRATEEXAMPLESDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBRATEEXAMPLESDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>Allows the user to rate the examples of a concept<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_prof_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_organisations_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_social_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_target_audience_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_prof_development_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_misc_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_ti_knowledge_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_ok_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The concept, which is modified when clicking OK, but remains unmodified when<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/the user clicks cancel<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; m_concept;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the rated examples<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Examples&gt; GetRatedExamples() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBRATEEXAMPLESDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbrateexamplesdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbrateexamplesdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateexamplesdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;pvdbexamplefactory.h&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;pvdbexamplesfactory.h&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbrateexamplesdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item : <b><a href="CppPublic.htm">public</a></b> <a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Example&gt;&amp; example)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Wordwrap text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> example-&gt;GetText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v { <a href="CppRibi.htm">ribi</a>::pvdb::Wordwrap(s,40) };<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display multi-line<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.htm">std::string</a> t;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; i: v) { t <a href="CppOperatorPlusAssign.htm">+=</a> i <a href="CppOperatorPlus.htm">+</a> "\n"; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!t.empty()) t.resize(t.size() <a href="CppOperatorMinus.htm">-</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setText(t.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Icon<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setIcon(<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Competency::CompetencyToIcon(example-&gt;GetCompetency()));<br/>
&nbsp;&nbsp;}<br/>
};<br/>
<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_concept(concept)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept-&gt;GetExamples());<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Ensure that the dialog does not resize beyond the screen's size<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setMaximumWidth( <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;width() );<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppConvert.htm">Convert</a> the Concept to GUI elements<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_concept_name-&gt;setText(concept-&gt;GetName().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;list-&gt;clear();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> concept-&gt;GetExamples()-&gt;Get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> v.size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> pvdb::Example&gt;&amp; example <a href="CppOperatorAssign.htm">=</a> v[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> example-&gt;GetText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_lines <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::Wordwrap(s,40).size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ui-&gt;list-&gt;setRowHeight(row,ui-&gt;list-&gt;fontMetrics().height() * 2 * (n_lines <a href="CppOperatorPlus.htm">+</a> 1));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item * <b><a href="CppConst.htm">const</a></b> item<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item(example);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;list-&gt;addItem(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Align the button icons and texts to the left<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppQPushButton.htm">QPushButton</a>*&gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_misc,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_organisations,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_prof,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_prof_development,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_social,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_target_audience,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_ti_knowledge<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<a href="CppQPushButton.htm">QPushButton</a>* button: v) button-&gt;setStyleSheet("text-align: left;");<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put the dialog in the screen its center<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().center() );<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::~<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Examples&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::GetRatedExamples() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Example&gt; &gt; v;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> ui-&gt;list-&gt;count();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQList.htm">QList</a><a href="CppWidget.htm">Widget</a>Item* <b><a href="CppConst.htm">const</a></b> qtitem <a href="CppOperatorAssign.htm">=</a> ui-&gt;list-&gt;item(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtitem);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item* <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item*&gt;(qtitem);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::Example&gt; example<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> pvdb::ExampleFactory::Create(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;text().toStdString(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>Competency::IconToCompetency(item-&gt;icon())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(example);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(example);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Examples&gt; examples<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> pvdb::ExamplesFactory::Create(v);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(examples);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> examples;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test con<a href="CppVersion.htm">version</a> between reading and writing a concept<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptFactory::GetTests().size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> a <a href="CppOperatorAssign.htm">=</a> <a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog(pvdb::ConceptFactory::GetTests()[i]).GetRatedExamples();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(a);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> b <a href="CppOperatorAssign.htm">=</a> <a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog(pvdb::ConceptFactory::GetTests()[j]).GetRatedExamples();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(b);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(a <a href="CppOperatorNotEqual.htm">!=</a> b);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (i <a href="CppOperatorEqual.htm">==</a> j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*a,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*a,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::Test finished successfully");<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::on_button_prof_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;list-&gt;currentItem())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item* <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item*&gt;(ui-&gt;list-&gt;currentItem());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setIcon(pvdb::<a href="CppQt.htm">Qt</a>Competency::CompetencyToIcon(pvdb::Competency::profession));<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::on_button_organisations_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;list-&gt;currentItem())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item* <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item*&gt;(ui-&gt;list-&gt;currentItem());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setIcon(pvdb::<a href="CppQt.htm">Qt</a>Competency::CompetencyToIcon(pvdb::Competency::organisations));<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::on_button_social_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;list-&gt;currentItem())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item* <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item*&gt;(ui-&gt;list-&gt;currentItem());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setIcon(pvdb::<a href="CppQt.htm">Qt</a>Competency::CompetencyToIcon(pvdb::Competency::social_surroundings));<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::on_button_target_audience_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;list-&gt;currentItem())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item* <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item*&gt;(ui-&gt;list-&gt;currentItem());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setIcon(pvdb::<a href="CppQt.htm">Qt</a>Competency::CompetencyToIcon(pvdb::Competency::target_audience));<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::on_button_prof_development_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;list-&gt;currentItem())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item* <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item*&gt;(ui-&gt;list-&gt;currentItem());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setIcon(pvdb::<a href="CppQt.htm">Qt</a>Competency::CompetencyToIcon(pvdb::Competency::prof_growth));<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::on_button_misc_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;list-&gt;currentItem())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item* <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item*&gt;(ui-&gt;list-&gt;currentItem());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setIcon(pvdb::<a href="CppQt.htm">Qt</a>Competency::CompetencyToIcon(pvdb::Competency::misc));<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::on_button_ti_knowledge_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (ui-&gt;list-&gt;currentItem())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item* <b><a href="CppConst.htm">const</a></b> item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbList<a href="CppWidget.htm">Widget</a>Item*&gt;(ui-&gt;list-&gt;currentItem());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;item-&gt;setIcon(pvdb::<a href="CppQt.htm">Qt</a>Competency::CompetencyToIcon(pvdb::Competency::ti_knowledge));<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRateExamplesDialog::on_button_ok_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Examples&gt; p <a href="CppOperatorAssign.htm">=</a> GetRatedExamples();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept);<br/>
&nbsp;&nbsp;m_concept-&gt;SetExamples(p);<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbratingdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbratingdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBRATINGDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBRATINGDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIosfwdH.htm">iosfwd</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRatingDialog; }<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQTableWidget.htm">QTableWidget</a>;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>View the current rating, optimized <b><a href="CppFor.htm">for</a></b> humans<br/>
<a href="CppComment.htm">///</a><a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog is optimized <b><a href="CppFor.htm">for</a></b> printers<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbRatingDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbRatingDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRatingDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRatingDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRatingDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRatingDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbRatingDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GetBackToMenu() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_back_to_menu; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_print_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_name_textEdited(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRatingDialog *ui;<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_back_to_menu;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBRATINGDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbratingdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbratingdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbratingdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQDesktopWidget.htm">QDesktopWidget</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPrinter.htm">QPrinter</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmap<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbprintratingdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbdisplay.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbdisplayconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbratingdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::<a href="CppQt.htm">Qt</a>PvdbRatingDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbRatingDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(file-&gt;GetConceptMap());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Student name<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "Naam student: " <a href="CppOperatorPlus.htm">+</a> file-&gt;GetStudentName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_student_name-&gt;setText(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Assessor name<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;label_assessor_name-&gt;setText("Naam assessor: ");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!file-&gt;GetAssessorName().empty())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_name-&gt;setText(file-&gt;GetAssessorName().c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ui-&gt;edit_name-&gt;setReadOnly(<b><a href="CppTrue.htm">true</a></b>); <a href="CppComment.htm">//</a>TVDB request<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_print-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_print-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayRatedConcepts(file,ui-&gt;table_concepts);<br/>
&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayExamples(file,ui-&gt;table_examples);<br/>
&nbsp;&nbsp;pvdb::<a href="CppQt.htm">Qt</a>Display::DisplayValues(file,ui-&gt;table_values);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Center the dialog<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setGeometry(screen.adjusted(64,64,-64,-64));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().center() );<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::~<a href="CppQt.htm">Qt</a>PvdbRatingDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::on_button_save_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Temporarily disable to <a href="CppWidget.htm">widget</a>, otherwise saving cannot succeed<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla het assessment invoer-bestand op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!filename_raw.empty());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> <a href="CppString.htm">std::string</a>(".") <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save(filename);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
<br/>
&nbsp;&nbsp;m_file-&gt;Save(filename);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>{ <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppDebug.htm">debug</a>_str <a href="CppOperatorAssign.htm">=</a> "File saved as " <a href="CppOperatorPlus.htm">+</a> filename; <a href="CppTRACE.htm">TRACE</a>(<a href="CppDebug.htm">debug</a>_str); }<br/>
}<br/>
<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::on_button_print_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbPrintRatingDialog d(<b><a href="CppThis.htm">this</a></b>-&gt;m_file);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Center the dialog<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQRect.htm">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.htm">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.setGeometry(screen.adjusted(64,64,-64,-64));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.move( screen.center() <a href="CppOperatorMinus.htm">-</a> d.rect().center() );<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbRatingDialog::on_edit_name_textEdited(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (arg1.size() &gt; 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file-&gt;SetAssessorName(arg1.toStdString());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_print-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_print-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbstudentmenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbstudentmenudialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBSTUDENTMENUDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBSTUDENTMENUDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the student his/her name<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Save to file<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the student his/her name<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetName(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; name);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_start_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_about_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_quit_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_save_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBSTUDENTMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbstudentmenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbstudentmenudialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentmenudialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdb<a href="CppAbout.htm">about</a>dialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentstartcompletedialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbstudentmenudialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_file-&gt;GetStudentName().empty())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;SetName(m_file-&gt;GetStudentName());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;on_edit_name_textChanged(ui-&gt;edit_name-&gt;text());<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::~<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::GetName() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> ui-&gt;edit_name-&gt;text().toStdString();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_S) { on_button_save_clicked(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::on_button_about_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d(<a href="CppQt.htm">Qt</a>Pvdb<a href="CppAbout.htm">About</a>Dialog::Get());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;hide();<br/>
&nbsp;&nbsp;d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;show();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::on_button_quit_clicked()<br/>
{<br/>
&nbsp;&nbsp;close();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::on_button_start_clicked()<br/>
{<br/>
&nbsp;&nbsp;m_file-&gt;SetStudentName(ui-&gt;edit_name-&gt;text().toStdString());<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog d(m_file);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Enable start button when student has entered at least two <a href="CppChar.htm">character</a>s<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;edit_name-&gt;text() <a href="CppOperatorEqual.htm">==</a> arg1);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (arg1.size() &gt; 1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_start-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;button_start-&gt;setEnabled(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::on_button_save_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla de concept map op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!filename_raw.empty());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> <a href="CppString.htm">std::string</a>(".") <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;Save(filename);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::Save(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; filename) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;m_file-&gt;SetStudentName(ui-&gt;edit_name-&gt;text().toStdString());<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;m_file-&gt;Save(filename);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>{ <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppDebug.htm">debug</a>_str <a href="CppOperatorAssign.htm">=</a> "File saved as " <a href="CppOperatorPlus.htm">+</a> filename; <a href="CppTRACE.htm">TRACE</a>(<a href="CppDebug.htm">debug</a>_str); }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentMenuDialog::SetName(<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a>&amp; name)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;edit_name-&gt;setText(name.c_str());<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbstudentstartcompletedialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbstudentstartcompletedialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBSTUDENTSTARTCOMPLETEDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBSTUDENTSTARTCOMPLETEDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file, <a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Does the user need to go back to the student menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> GoBackToMenu() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_back_to_menu; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_start_associate_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_start_<a href="CppConstructor.htm">construct</a>_clicked();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Does the dialog want to go back to the student menu?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_back_to_menu;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; m_file;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Save to file<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Save();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBSTUDENTSTARTCOMPLETEDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbstudentstartcompletedialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbstudentstartcompletedialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbstudentstartcompletedialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppFstreamH.htm">fstream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbfile.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> "pvdbmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbclusterdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbcreateassessmentmenudialog.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbstudentstartcompletedialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;pvdb::File&gt; file,<br/>
&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu(<b><a href="CppFalse.htm">false</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file(file)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*file,*m_file));<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog::~<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (e-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ((e-&gt;modifiers() &amp; <a href="CppQt.htm">Qt</a>::ControlModifier) <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> e-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_S) { Save(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(e);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog::on_button_start_associate_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>((m_file-&gt;GetCluster() <a href="CppOperatorLogicalOr.htm">||</a> !m_file-&gt;GetCluster())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "If the file has no cluster, the cluster dialog creates it,"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "<b><a href="CppIf.htm">if</a></b> and only <b><a href="CppIf.htm">if</a></b> there is no concept map");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbClusterDialog d(m_file);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!m_file-&gt;GetConceptMap())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_file-&gt;GetCluster()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "If the file has no cluster, the cluster dialog creates it,"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "<b><a href="CppIf.htm">if</a></b> and only <b><a href="CppIf.htm">if</a></b> there is no concept map");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d.GoBackToMenu())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;close();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog::on_button_start_<a href="CppConstructor.htm">construct</a>_clicked()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbConceptMapDialog d(m_file);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ShowChild(&amp;d);<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (d.GoBackToMenu())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_back_to_menu <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;close();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbStudentStartCompleteDialog::Save()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetSaveFileDialog(pvdb::<a href="CppQt.htm">Qt</a>FileDialog::FileType::cmp);<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Sla de concept map op");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;selectedFiles().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename_raw <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles()[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!filename_raw.empty());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;(filename_raw.size() &lt; pvdb::File::GetFilenameExtension().size()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> filename_raw.substr( filename_raw.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorNotEqual.htm">!=</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; ? filename_raw <a href="CppOperatorPlus.htm">+</a> <a href="CppString.htm">std::string</a>(".") <a href="CppOperatorPlus.htm">+</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; : filename_raw);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filename.size() &gt; 3<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> filename.substr( filename.size() <a href="CppOperatorMinus.htm">-</a> 3, 3 ) <a href="CppOperatorEqual.htm">==</a> pvdb::File::GetFilenameExtension()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "File must have correct file extension name");<br/>
&nbsp;&nbsp;m_file-&gt;Save(filename);<br/>
&nbsp;&nbsp;{ <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> <a href="CppDebug.htm">debug</a>_str <a href="CppOperatorAssign.htm">=</a> "File saved as " <a href="CppOperatorPlus.htm">+</a> filename; <a href="CppTRACE.htm">TRACE</a>(<a href="CppDebug.htm">debug</a>_str); }<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbtestconceptitemdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbtestconceptitemdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBTESTCONCEPTITEMDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBTESTCONCEPTITEMDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>PvdbConceptItem items, especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event);<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog *ui;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; m_concept;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbDisplayConceptItem* m_display_concept;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbEditConceptItem* m_edit_concept;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptItem* m_rate_concept;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Concept via the route chosen by box_edit<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; GetChosenConcept();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Test <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBTESTCONCEPTITEMDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbtestconceptitemdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbtestconceptitemdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestconceptitemdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbdisplayconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbeditconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexample.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbtestconceptitemdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog),<br/>
&nbsp;&nbsp;m_concept(pvdb::ConceptFactory::GetTests().at(1)),<br/>
&nbsp;&nbsp;m_display_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;m_edit_concept(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;m_rate_concept(<b><a href="CppNullptr.htm">nullptr</a></b>)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_node<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
<br/>
&nbsp;&nbsp;m_display_concept <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbDisplayConceptItem(m_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_display_concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_node and <a href="CppQt.htm">Qt</a>PvdbNodeConcept::m_node<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept is used in: m_node::m_concept, <a href="CppQt.htm">Qt</a>PvdbDisplayConcept::m_node::m_concept and <a href="CppQt.htm">Qt</a>PvdbConcept::m_concept<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.get() <a href="CppOperatorEqual.htm">==</a> m_display_concept-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.get() <a href="CppOperatorEqual.htm">==</a> m_display_concept-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_node, <a href="CppQt.htm">Qt</a>PvdbNodeConcept::m_node<br/>
&nbsp;&nbsp;m_edit_concept <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbEditConceptItem(m_concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edit_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
<br/>
&nbsp;&nbsp;m_rate_concept <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptItem(m_concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_rate_concept);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_concept.use_count() <a href="CppOperatorEqual.htm">==</a> 4);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_display_concept-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> m_concept.get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edit_concept-&gt;GetConcept().get()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> m_concept.get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_rate_concept-&gt;GetConcept().get()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> m_concept.get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbConceptItems are not aware of their surroundings, so put them into place manually<br/>
&nbsp;&nbsp;m_display_concept-&gt;SetPos(0.0,-40.0);<br/>
&nbsp;&nbsp;m_edit_concept-&gt;SetPos(&nbsp;&nbsp; 0.0,&nbsp;&nbsp;0.0);<br/>
&nbsp;&nbsp;m_rate_concept-&gt;SetPos(&nbsp;&nbsp; 0.0, 40.0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_display_concept-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_edit_concept-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_rate_concept-&gt;scene());<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_display_concept);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_edit_concept);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_rate_concept);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene()-&gt;items().size() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptItem*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[0]));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptItem*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[1]));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptItem*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[2]));<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;pvdb::Competency&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::GetAllCompetencies();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_competency-&gt;addItem(pvdb::CompetencyToDutchStr(v[i]).c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_complexity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetRatingComplexity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_concreteness-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetRatingConcreteness() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_specificity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetRatingSpecificity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;edit_name-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetName().c_str());<br/>
&nbsp;&nbsp;ui-&gt;edit_example_text-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetText().c_str());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_competency-&gt;setCurrentIndex(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetCompetency()));<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::~<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::GetChosenConcept()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(ui-&gt;box_edit-&gt;currentIndex())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: <b><a href="CppReturn.htm">return</a></b> m_concept;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbDisplayConceptItem*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbDisplayConceptItem * <b><a href="CppConst.htm">const</a></b> qtconcept <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbDisplayConceptItem*&gt;(*iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtconcept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtconcept-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbEditConceptItem*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbEditConceptItem * <b><a href="CppConst.htm">const</a></b> qtconcept <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbEditConceptItem*&gt;(*iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtconcept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtconcept-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 3:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbRateConceptItem*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptItem * <b><a href="CppConst.htm">const</a></b> qtconcept <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbRateConceptItem*&gt;(*iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtconcept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtconcept-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppLogic_error.htm">std::logic_error</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::GetChosenConcept: chosen concept unknown");<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> pvdb::Competency c <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;pvdb::Competency&gt;(index);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetCompetency(c);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetChosenConcept());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;SetName(arg1.toStdString());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_complexity <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;SetRatingComplexity(rating_complexity);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;SetRatingConcreteness(<a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;SetRatingSpecificity(<a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetChosenConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetText(arg1.toStdString());<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog d;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept.get() <a href="CppOperatorEqual.htm">==</a> d.m_display_concept-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept.get() <a href="CppOperatorEqual.htm">==</a> d.m_edit_concept-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_concept.get() <a href="CppOperatorEqual.htm">==</a> d.m_rate_concept-&gt;GetConcept().get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test resizing due to text being changed<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> d.m_concept-&gt;GetName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_concept-&gt;boundingRect().width() <a href="CppOperatorEqual.htm">==</a> d.m_edit_concept-&gt;boundingRect().width());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_concept-&gt;boundingRect().width() <a href="CppOperatorEqual.htm">==</a> d.m_rate_concept-&gt;boundingRect().width());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w <a href="CppOperatorAssign.htm">=</a> d.m_display_concept-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> h <a href="CppOperatorAssign.htm">=</a> d.m_display_concept-&gt;boundingRect().height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> a <a href="CppOperatorAssign.htm">=</a> w * h;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_concept-&gt;SetName(s <a href="CppOperatorPlus.htm">+</a> "*");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_concept-&gt;boundingRect().width()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* d.m_display_concept-&gt;boundingRect().height()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorGreaterEqual.htm">&gt;=</a> a);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_concept-&gt;boundingRect().width()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* d.m_edit_concept-&gt;boundingRect().height()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorGreaterEqual.htm">&gt;=</a> a);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_concept-&gt;boundingRect().width()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* d.m_rate_concept-&gt;boundingRect().height()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorGreaterEqual.htm">&gt;=</a> a);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test brushes being changed when ratings are given<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> d.m_concept;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingComplexity(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingConcreteness(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingSpecificity(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_concept-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_concept-&gt;brush() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateRedGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_concept-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateRedGradientBrush());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingComplexity(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingConcreteness(1);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_concept-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_concept-&gt;brush()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateYellowGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_concept-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateYellowGradientBrush());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingSpecificity(2);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_concept-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_concept-&gt;brush() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateGreenGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_concept-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateGreenGradientBrush());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestConceptItemDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBTESTCREATESUBCONCEPTMAPDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBTESTCREATESUBCONCEPTMAPDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The user changes to another concept map<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnConceptMapChanged();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The user changes to another sub-concept map<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnSubConceptMapChanged();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>&gt; m_concept_map;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>&gt; m_sub_concept_map;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBTESTCREATESUBCONCEPTMAPDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestcreatesubconceptmapdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/numeric/con<a href="CppVersion.htm">version</a>/cast.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdisplay<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbtestcreatesubconceptmapdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog),<br/>
&nbsp;&nbsp;m_concept_map{},<br/>
&nbsp;&nbsp;m_sub_concept_map{}<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_tests <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(pvdb::ConceptMapFactory::GetAllTests().size());<br/>
&nbsp;&nbsp;ui-&gt;box_index-&gt;setMaximum(n_tests <a href="CppOperatorMinus.htm">-</a> 1); <a href="CppComment.htm">//</a>-1: 0-based counting<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_index,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppInt.htm">int</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(OnConceptMapChanged()));<br/>
&nbsp;&nbsp;<a href="CppQObject.htm">QObject</a>::connect(ui-&gt;box_index_sub,<a href="CppSignalMacro.htm">SIGNAL</a>(valueChanged(<b><a href="CppInt.htm">int</a></b>)),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(OnSubConceptMapChanged()));<br/>
<br/>
&nbsp;&nbsp;OnConceptMapChanged();<br/>
&nbsp;&nbsp;OnSubConceptMapChanged();<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog::~<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog::OnConceptMapChanged()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_index-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::GetAllTests();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size()));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v[i]);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> v[i];<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b>(!ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map-&gt;layout())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map-&gt;setLayout(my_layout);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map-&gt;layout());<br/>
&nbsp;&nbsp;m_concept_map.reset(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDisplay<a href="CppWidget.htm">Widget</a>(concept_map));<br/>
&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_concept_map-&gt;layout()-&gt;addWidget(m_concept_map.get());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; &gt; subs <a href="CppOperatorAssign.htm">=</a> concept_map-&gt;CreateSubs();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_subs <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(subs.size());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n_subs <a href="CppOperatorNotEqual.htm">!=</a> 0);<br/>
&nbsp;&nbsp;ui-&gt;box_index_sub-&gt;setMaximum(n_subs <a href="CppOperatorMinus.htm">-</a> 1); <a href="CppComment.htm">//</a>-1: 0-based counting<br/>
&nbsp;&nbsp;ui-&gt;box_index_sub-&gt;setValue(0);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog::OnSubConceptMapChanged()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_index-&gt;value();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; &gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ConceptMapFactory::GetAllTests();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size()));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> v[i];<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; &gt; subs <a href="CppOperatorAssign.htm">=</a> concept_map-&gt;CreateSubs();<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> j <a href="CppOperatorAssign.htm">=</a> ui-&gt;box_index_sub-&gt;value();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(j &lt; <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(subs.size()));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; sub <a href="CppOperatorAssign.htm">=</a> subs[j];<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b>(!ui-&gt;<a href="CppWidget.htm">widget</a>_sub_concept_map-&gt;layout())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLayout.htm">QLayout</a> * <b><a href="CppConst.htm">const</a></b> my_layout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_sub_concept_map-&gt;setLayout(my_layout);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;<a href="CppWidget.htm">widget</a>_sub_concept_map-&gt;layout());<br/>
&nbsp;&nbsp;m_sub_concept_map.reset(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDisplay<a href="CppWidget.htm">Widget</a>(sub));<br/>
&nbsp;&nbsp;ui-&gt;<a href="CppWidget.htm">widget</a>_sub_concept_map-&gt;layout()-&gt;addWidget(m_sub_concept_map.get());<br/>
}<br/>
<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestCreateSubConceptMapDialog d;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> max <a href="CppOperatorAssign.htm">=</a> d.ui-&gt;box_index-&gt;maximum();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>max; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;box_index-&gt;setValue(i);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> max_sub <a href="CppOperatorAssign.htm">=</a> d.ui-&gt;box_index_sub-&gt;maximum();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>max_sub; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.ui-&gt;box_index_sub-&gt;setValue(j);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbtestedgeitemdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbtestedgeitemdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBTESTEDGEITEMDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBTESTEDGEITEMDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>PvdbConceptItem items when being a member of a <a href="CppQt.htm">Qt</a>PvdbNodeItem,<br/>
<a href="CppComment.htm">///</a>especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_arrow_head_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_arrow_tail_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog *ui;<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Edge&gt; m_edge;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbEdgeItem* m_edge_item;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; m_from;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; m_to;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; CreateFrom();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; CreateTo();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Edge via the route chosen by box_edit<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Edge&gt; GetEdgeCurrentWay();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Edge from a route<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Edge&gt; GetEdge(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Called whenever an item requests a scene update<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnRequestSceneUpdate();<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBTESTEDGEITEMDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbtestedgeitemdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbtestedgeitemdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestedgeitemdialog.h"<br/>
<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> COMPILER_SUPPORTS_THREADS_20130507<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppThreadH.htm">thread</a>&gt;<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbedgefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbedge.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexample.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbdisplayconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbdisplayconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbedgeitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbeditconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbnodeitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbtestedgeitemdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog),<br/>
&nbsp;&nbsp;m_edge{},<br/>
&nbsp;&nbsp;m_edge_item{},<br/>
&nbsp;&nbsp;m_from(CreateFrom()),<br/>
&nbsp;&nbsp;m_to(CreateTo())<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_from);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_to);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> index <a href="CppOperatorAssign.htm">=</a> 4; <a href="CppComment.htm">//</a>Must have examples<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; pvdb::EdgeFactory::GetTests(m_from,m_to).size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_edge <a href="CppOperatorAssign.htm">=</a> pvdb::EdgeFactory::GetTests(m_from,m_to)[index];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge-&gt;GetConcept());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_edge-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().empty()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Otherwise 'ui-&gt;box_competency-&gt;addItem(qs)' will fail, due to on_box_competency_currentIndexChanged");<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> edge_use_count <a href="CppOperatorAssign.htm">=</a> m_edge.use_count();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(edge_use_count <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create three nodes that the edges can connect to<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem * node1 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNullptr.htm">nullptr</a></b>;<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_from-&gt;GetConcept()-&gt;SetName("1");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptItem&gt; item(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbDisplayConceptItem(m_from-&gt;GetConcept()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;node1 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem(m_from,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;node1-&gt;m_signal_request_scene_update.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::OnRequestSceneUpdate,<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem * node2 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNullptr.htm">nullptr</a></b>;<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>m_to-&gt;GetConcept()-&gt;SetName("2");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptItem&gt; item(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbEditConceptItem(m_to-&gt;GetConcept()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;node2 <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem(m_to,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;node2-&gt;m_signal_request_scene_update.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::OnRequestSceneUpdate,<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node2);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node1-&gt;GetNode());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node2-&gt;GetNode());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node1-&gt;GetNode()-&gt;GetConcept());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node2-&gt;GetNode()-&gt;GetConcept());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create the edge<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbEditConceptItem&gt; concept(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbEditConceptItem(m_edge-&gt;GetConcept()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_edge_item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbEdgeItem(m_edge,concept,node1,node2);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_edge and <a href="CppQt.htm">Qt</a>PvdbNodeConcept::m_edge<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(m_edge.use_count() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept is used in: m_edge::m_concept, <a href="CppQt.htm">Qt</a>PvdbDisplayConcept::m_edge::m_concept and <a href="CppQt.htm">Qt</a>PvdbConcept::m_concept<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge.get() <a href="CppOperatorEqual.htm">==</a> m_edge_item-&gt;GetEdge().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> m_edge_item-&gt;GetEdge()-&gt;GetConcept().get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> edge_use_count <a href="CppOperatorAssign.htm">=</a> m_edge.use_count();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(edge_use_count <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> items to the scene<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node2);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge_item);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!node1-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!node2-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_edge_item-&gt;scene());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(node1);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(node2);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_edge_item);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene()-&gt;items().size() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQList.htm">QList</a>&lt;<a href="CppQGraphicsItem.htm">QGraphicsItem</a> *&gt; v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCount_if.htm">std::count_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbEdgeItem*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put nodes (not the edges) into place<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>The nodes must reposition themselves<br/>
&nbsp;&nbsp;node1-&gt;SetPos(-100.0,-100.0);<br/>
&nbsp;&nbsp;m_edge_item-&gt;SetPos(0.0,0.0);<br/>
&nbsp;&nbsp;node2-&gt;SetPos( 100.0, 100.0);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;pvdb::Competency&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::GetAllCompetencies();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppSize_t.htm">std::size_t</a> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; v.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> pvdb::Competency competency <a href="CppOperatorAssign.htm">=</a> v[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> pvdb::CompetencyToDutchStr(competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> qs <a href="CppOperatorAssign.htm">=</a> s.c_str();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;box_competency);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetConcept());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().empty()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Otherwise 'ui-&gt;box_competency-&gt;addItem(qs)' will fail, due to on_box_competency_currentIndexChanged");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_competency-&gt;addItem(qs); <a href="CppComment.htm">//</a>2013-06-22: BUG: <a href="CppOut_of_range.htm">std::out_of_range</a>' what():&nbsp;&nbsp;vector::_M_range_check<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().empty());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_complexity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetRatingComplexity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_concreteness-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetRatingConcreteness() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_specificity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetRatingSpecificity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;edit_name-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetName().c_str());<br/>
&nbsp;&nbsp;ui-&gt;edit_example_text-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetText().c_str());<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_arrow_head-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;HasHeadArrow());<br/>
&nbsp;&nbsp;ui-&gt;box_arrow_tail-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;HasTailArrow());<br/>
&nbsp;&nbsp;ui-&gt;box_competency-&gt;setCurrentIndex(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetCompetency()));<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::~<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::CreateFrom()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> index <a href="CppOperatorAssign.htm">=</a> 2;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; pvdb::NodeFactory::GetTests().size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; node <a href="CppOperatorAssign.htm">=</a> pvdb::NodeFactory::GetTests()[index];<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> node;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::CreateTo()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppSize_t.htm">std::size_t</a> index <a href="CppOperatorAssign.htm">=</a> 3;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(index &lt; pvdb::NodeFactory::GetTests().size());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; node <a href="CppOperatorAssign.htm">=</a> pvdb::NodeFactory::GetTests()[index];<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> node;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Edge&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::GetEdgeCurrentWay()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetEdge(ui-&gt;box_edit-&gt;currentIndex());<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Edge&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::GetEdge(<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> index)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(index)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edge);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_edge;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbEdgeItem*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbEdgeItem * <b><a href="CppConst.htm">const</a></b> qtedge <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbEdgeItem*&gt;(*iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtedge);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtedge-&gt;GetEdge();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppLogic_error.htm">std::logic_error</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::GetEdge: current index unknown");<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> pvdb::Competency c <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;pvdb::Competency&gt;(index);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetConcept());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().empty());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetCompetency(c);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetConcept());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;SetName(arg1.toStdString());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetName() <a href="CppOperatorEqual.htm">==</a> arg1.toStdString());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_complexity <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetConcept());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;SetRatingComplexity(rating_complexity);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetConcept());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;SetRatingConcreteness(<a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetConcept());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;SetRatingSpecificity(<a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetConcept());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetText(arg1.toStdString());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::on_box_arrow_head_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;SetHeadArrow(index);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdge(0)-&gt;HasHeadArrow() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppBool.htm">bool</a></b>&gt;(index));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdge(1)-&gt;HasHeadArrow() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppBool.htm">bool</a></b>&gt;(index));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::on_box_arrow_tail_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(GetEdgeCurrentWay());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetEdgeCurrentWay()-&gt;SetTailArrow(index);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdge(0)-&gt;HasTailArrow() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppBool.htm">bool</a></b>&gt;(index));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetEdge(1)-&gt;HasTailArrow() <a href="CppOperatorEqual.htm">==</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppBool.htm">bool</a></b>&gt;(index));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::OnRequestSceneUpdate()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene());<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;update();<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog&gt; parent(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog);<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog&gt; d(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.htm">assert</a>(parent);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>parent-&gt;ShowChild(d.get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge-&gt;GetConcept());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge_item);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge_item-&gt;GetEdge());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge.get() <a href="CppOperatorEqual.htm">==</a> d-&gt;m_edge_item-&gt;GetEdge().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> d-&gt;m_edge_item-&gt;GetEdge()-&gt;GetConcept().get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test resizing due to longer text being set<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge-&gt;GetConcept()-&gt;GetName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_width_before <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;GetConceptItem()-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_width_before <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;m_edge-&gt;GetConcept()-&gt;SetName(s <a href="CppOperatorPlus.htm">+</a> "******************************");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>There must be no discrepancy between these boundingRects<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_width_after <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;GetConceptItem()-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_width_after <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_item_width_after <a href="CppOperatorGreaterEqual.htm">&gt;=</a> concept_item_width_before);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(edge_item_width_after <a href="CppOperatorGreaterEqual.htm">&gt;=</a> edge_item_width_before);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test resizing due to shorter text being set<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;m_edge-&gt;GetConcept()-&gt;SetName("1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890");<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_height_before <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;GetConceptItem()-&gt;boundingRect().height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_width_before <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;GetConceptItem()-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_area_before <a href="CppOperatorAssign.htm">=</a> concept_item_width_before * concept_item_height_before;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_height_before <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;boundingRect().height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_width_before <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_area_before <a href="CppOperatorAssign.htm">=</a> edge_item_width_before * edge_item_height_before;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;m_edge-&gt;GetConcept()-&gt;SetName(<a href="CppString.htm">std::string</a>(1,'*'));<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_height_after <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;GetConceptItem()-&gt;boundingRect().height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_width_after <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;GetConceptItem()-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> concept_item_area_after <a href="CppOperatorAssign.htm">=</a> concept_item_width_after * concept_item_height_after;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_height_after <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;boundingRect().height();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_width_after <a href="CppOperatorAssign.htm">=</a> d-&gt;m_edge_item-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> edge_item_area_after <a href="CppOperatorAssign.htm">=</a> edge_item_width_after * edge_item_height_after;<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_item_area_before &gt; concept_item_area_after<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "Concept item must shrink with shorter text");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(edge_item_area_before &gt; edge_item_area_after<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "The edge as a whole does not need to shrink, as the to and from nodes remain in place,"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> "but with a very <b><a href="CppLong.htm">long</a></b> to a very <b><a href="CppShort.htm">short</a></b> text will enforce <b><a href="CppThis.htm">this</a></b>");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Push all buttons<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;ui);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;ui-&gt;box_edit);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n_edit_types <a href="CppOperatorAssign.htm">=</a> d-&gt;ui-&gt;box_edit-&gt;count();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n_edit_types &gt; 0);<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> type=0; type<a href="CppOperatorNotEqual.htm">!=</a>n_edit_types; <a href="CppOperatorIncrement.htm">++</a>type)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set the way to obtain the <a href="CppPointer.htm">pointer</a> to the edge<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;box_edit-&gt;setCurrentIndex(type);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set some texts to enforce growth and shrinking in the text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> <a href="CppString.htm">std::string</a>(30,'*') <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(type);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;edit_name-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> <a href="CppString.htm">std::string</a>(1,'*') <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(type);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;edit_name-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> text <a href="CppOperatorAssign.htm">=</a> <a href="CppString.htm">std::string</a>(30,'*') <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(type);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;edit_name-&gt;setText(text.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Change the arrow head<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n <a href="CppOperatorAssign.htm">=</a> d-&gt;ui-&gt;box_arrow_head-&gt;count();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n &gt; 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;box_arrow_head-&gt;setCurrentIndex(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge-&gt;HasHeadArrow() <a href="CppOperatorEqual.htm">==</a> i); <a href="CppComment.htm">//</a>i <a href="CppOperatorEqual.htm">==</a> 0 <a href="CppOperatorMinus.htm">-</a>&gt; <b><a href="CppFalse.htm">false</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Change the arrow tail<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> n <a href="CppOperatorAssign.htm">=</a> d-&gt;ui-&gt;box_arrow_tail-&gt;count();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(n &gt; 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>n; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d-&gt;ui-&gt;box_arrow_tail-&gt;setCurrentIndex(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d-&gt;m_edge-&gt;HasTailArrow() <a href="CppOperatorEqual.htm">==</a> i); <a href="CppComment.htm">//</a>i <a href="CppOperatorEqual.htm">==</a> 0 <a href="CppOperatorMinus.htm">-</a>&gt; <b><a href="CppFalse.htm">false</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;d-&gt;close();<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestEdgeItemDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbtestnodeitemdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbtestnodeitemdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBTESTNODEITEMDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBTESTNODEITEMDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a>Tests all <a href="CppQt.htm">Qt</a>PvdbConceptItem items when being a member of a <a href="CppQt.htm">Qt</a>PvdbNodeItem,<br/>
<a href="CppComment.htm">///</a>especially the connection between the <a href="CppPointer.htm">pointer</a> and its displayal items:<br/>
<a href="CppComment.htm">///</a>If something via the <a href="CppPointer.htm">pointer</a> is changed, <b><a href="CppThis.htm">this</a></b> must be displayed directly<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog(<a href="CppQWidget.htm">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1);<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog *ui;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; m_node;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem* m_display_node;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem* m_edit_node;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem* m_rate_node;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Node via the route chosen by box_edit<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; GetNode();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnRequestsSceneUpdate();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBTESTNODEITEMDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbtestnodeitemdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbtestnodeitemdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbtestnodeitemdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> COMPILER_SUPPORTS_THREADS_20130507<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppThreadH.htm">thread</a>&gt;<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbdisplayconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbeditconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbrateconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnodefactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbdisplayconceptitem.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbbrushfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbnodeitem.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexample.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbtestnodeitemdialog.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog(<a href="CppQWidget.htm">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog),<br/>
&nbsp;&nbsp;m_node(pvdb::NodeFactory::GetTests().at(1)),<br/>
&nbsp;&nbsp;m_display_node(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;m_edit_node(<b><a href="CppNullptr.htm">nullptr</a></b>),<br/>
&nbsp;&nbsp;m_rate_node(<b><a href="CppNullptr.htm">nullptr</a></b>)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_node<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node.use_count() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConceptUseCount() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConcept().use_count() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptItem&gt; item(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbDisplayConceptItem(m_node-&gt;GetConcept()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_display_node <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem(m_node,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_display_node-&gt;m_signal_request_scene_update.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::OnRequestsSceneUpdate,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Node is used in: m_node and <a href="CppQt.htm">Qt</a>PvdbNodeConcept::m_node<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node.use_count() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Concept is used in: m_node::m_concept, <a href="CppQt.htm">Qt</a>PvdbDisplayConcept::m_node::m_concept and <a href="CppQt.htm">Qt</a>PvdbConcept::m_concept<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node.get() <a href="CppOperatorEqual.htm">==</a> m_display_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> m_display_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConcept().use_count() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConceptUseCount() <a href="CppOperatorEqual.htm">==</a> 2);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptItem&gt; item(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbEditConceptItem(m_node-&gt;GetConcept()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_edit_node <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem(m_node,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_edit_node-&gt;m_signal_request_scene_update.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::OnRequestsSceneUpdate,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node.use_count() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConceptUseCount() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConcept().use_count() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptItem&gt; item(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptItem(m_node-&gt;GetConcept()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_rate_node <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem(m_node,item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_rate_node-&gt;m_signal_request_scene_update.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind.htm">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::OnRequestsSceneUpdate,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node.use_count() <a href="CppOperatorEqual.htm">==</a> 4);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConceptUseCount() <a href="CppOperatorEqual.htm">==</a> 4);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_node-&gt;GetConcept().use_count() <a href="CppOperatorEqual.htm">==</a> 4);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_display_node-&gt;GetNode().get() <a href="CppOperatorEqual.htm">==</a> m_node.get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_edit_node-&gt;GetNode().get()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> m_node.get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_rate_node-&gt;GetNode().get()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> m_node.get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_display_node-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_edit_node-&gt;scene());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!m_rate_node-&gt;scene());<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_display_node);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_edit_node);<br/>
&nbsp;&nbsp;ui-&gt;view-&gt;scene()-&gt;addItem(m_rate_node);<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(ui-&gt;view-&gt;scene()-&gt;items().size() <a href="CppOperatorEqual.htm">==</a> 3);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbNodeItem*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[0]));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbNodeItem*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[1]));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbNodeItem*&gt;(ui-&gt;view-&gt;scene()-&gt;items()[2]));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppQt.htm">Qt</a>PvdbConceptItems are aware of their surroundings, but I put them into place manually<br/>
&nbsp;&nbsp;m_display_node-&gt;SetPos(0.0,-40.0);<br/>
&nbsp;&nbsp;m_edit_node-&gt;SetPos(&nbsp;&nbsp; 0.0,&nbsp;&nbsp;0.0);<br/>
&nbsp;&nbsp;m_rate_node-&gt;SetPos(&nbsp;&nbsp; 0.0, 40.0);<br/>
<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;pvdb::Competency&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::GetAllCompetencies();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;box_competency-&gt;addItem(pvdb::CompetencyToDutchStr(v[i]).c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_complexity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetRatingComplexity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_concreteness-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetRatingConcreteness() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
&nbsp;&nbsp;ui-&gt;box_specificity-&gt;setCurrentIndex(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetRatingSpecificity() <a href="CppOperatorPlus.htm">+</a> 1);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;edit_name-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetName().c_str());<br/>
&nbsp;&nbsp;ui-&gt;edit_example_text-&gt;setText(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetText().c_str());<br/>
<br/>
<br/>
&nbsp;&nbsp;ui-&gt;box_competency-&gt;setCurrentIndex(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;GetCompetency()));<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::~<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Node&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::GetNode()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b>(ui-&gt;box_edit-&gt;currentIndex())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: <b><a href="CppReturn.htm">return</a></b> m_node;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem* <b><a href="CppConst.htm">const</a></b> node_item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node_item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbDisplayConceptItem*&gt;(node_item-&gt;GetConceptItem().get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem * <b><a href="CppConst.htm">const</a></b> qtnode <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbNodeItem*&gt;(*iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtnode);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtnode-&gt;GetNode();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem* <b><a href="CppConst.htm">const</a></b> node_item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node_item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbEditConceptItem*&gt;(node_item-&gt;GetConceptItem().get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem * <b><a href="CppConst.htm">const</a></b> qtnode <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbNodeItem*&gt;(*iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtnode);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtnode-&gt;GetNode();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 3:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> v <a href="CppOperatorAssign.htm">=</a> ui-&gt;view-&gt;scene()-&gt;items();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> iter <a href="CppOperatorAssign.htm">=</a> <a href="CppFind_if.htm">std::find_if</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppQGraphicsItem.htm">QGraphicsItem</a> * <b><a href="CppConst.htm">const</a></b> item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem* <b><a href="CppConst.htm">const</a></b> node_item <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem*&gt;(item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(node_item);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbRateConceptItem*&gt;(node_item-&gt;GetConceptItem().get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(iter<a href="CppOperatorNotEqual.htm">!=</a>v.end());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem * <b><a href="CppConst.htm">const</a></b> qtnode <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDynamic_cast.htm">dynamic_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbNodeItem*&gt;(*iter);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(qtnode);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> qtnode-&gt;GetNode();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppLogic_error.htm">std::logic_error</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::GetNode: index unknown");<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::on_box_competency_currentIndexChanged(<b><a href="CppInt.htm">int</a></b> index)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> pvdb::Competency c <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;pvdb::Competency&gt;(index);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetCompetency(c);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::on_edit_name_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;SetName(arg1.toStdString());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::on_box_complexity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> rating_complexity <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorGreaterEqual.htm">&gt;=</a> <a href="CppOperatorMinus.htm">-</a>1);<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(rating_complexity <a href="CppOperatorLessEqual.htm">&lt;=</a>&nbsp;&nbsp;2);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingComplexity(rating_complexity);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::on_box_concreteness_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingConcreteness(<a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::on_box_specificity_currentIndexChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;SetRatingSpecificity(<a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(arg1.toStdString()));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::on_edit_example_text_textChanged(<b><a href="CppConst.htm">const</a></b> <a href="CppQString.htm">QString</a> &amp;arg1)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;GetNode()-&gt;GetConcept()-&gt;GetExamples()-&gt;Get().at(0)-&gt;SetText(arg1.toStdString());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> COMPILER_SUPPORTS_THREADS_20130507<br/>
&nbsp;&nbsp;<a href="CppThread.htm">std::thread</a> t(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[]<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::Test started");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog d;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_node.get() <a href="CppOperatorEqual.htm">==</a> d.m_display_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_node.get() <a href="CppOperatorEqual.htm">==</a> d.m_edit_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_node.get() <a href="CppOperatorEqual.htm">==</a> d.m_rate_node-&gt;GetNode().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_node-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> d.m_display_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_node-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> d.m_edit_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_node-&gt;GetConcept().get() <a href="CppOperatorEqual.htm">==</a> d.m_rate_node-&gt;GetNode()-&gt;GetConcept().get());<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test resizing due to text being changed<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> d.m_node-&gt;GetConcept()-&gt;GetName();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() <a href="CppOperatorEqual.htm">==</a> d.m_edit_node-&gt;boundingRect().width());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() <a href="CppOperatorEqual.htm">==</a> d.m_rate_node-&gt;boundingRect().width());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w <a href="CppOperatorAssign.htm">=</a> d.m_display_node-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_node-&gt;GetConcept()-&gt;SetName(s <a href="CppOperatorPlus.htm">+</a> "*");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() &gt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;boundingRect().width() &gt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;boundingRect().width() &gt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test resizing due to shorter text being set<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_node-&gt;GetConcept()-&gt;SetName("1234567890");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> w <a href="CppOperatorAssign.htm">=</a> d.m_display_node-&gt;boundingRect().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.m_node-&gt;GetConcept()-&gt;SetName("123456789");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;boundingRect().width() &lt; w);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test brushes being changed when ratings are given<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("TODO?");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">/*</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; concept <a href="CppOperatorAssign.htm">=</a> d.m_node-&gt;GetConcept();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingComplexity(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingConcreteness(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingSpecificity(-1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbRateConceptItem item(concept);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;brush() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateRedGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateRedGradientBrush());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingComplexity(0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingConcreteness(1);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;brush()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateYellowGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateYellowGradientBrush());<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;concept-&gt;SetRatingSpecificity(2);<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_edit_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateGrayGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_display_node-&gt;brush() <a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateGreenGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d.m_rate_node-&gt;brush()&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>PvdbBrushFactory::CreateGreenGradientBrush());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::Test finished successfully");<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> COMPILER_SUPPORTS_THREADS_20130507<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;t.detach();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbTestNodeItemDialog::OnRequestsSceneUpdate()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;ui-&gt;view-&gt;scene()-&gt;update();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbtoolsitem.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbtoolsitem.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBTOOLSITEM_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBTOOLSITEM_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQBrush.htm">QBrush</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsPixmapItem.htm">QGraphicsPixmapItem</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbnode.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<a href="CppComment.htm">///</a><a href="Tools.htm">Tools</a> item is a <b><a href="CppClass.htm">class</a></b> that is displayed above a selected node or edge<br/>
<a href="CppComment.htm">///</a>and displays clickable icons to perform actions, <b><a href="CppFor.htm">for</a></b> example<br/>
<a href="CppComment.htm">///</a>adding a relation or modifying arrow edges<br/>
<a href="CppComment.htm">///</a><a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item cannot have its visibility set directly:<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> <b><a href="CppIf.htm">if</a></b> it has a buddy, it is visible<br/>
<a href="CppComment.htm">///</a><a href="CppOperatorMinus.htm">-</a> <b><a href="CppIf.htm">if</a></b> it has no buddy, it is invisible<br/>
<b><a href="CppStruct.htm">struct</a></b> <a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item : <b><a href="CppPublic.htm">public</a></b> <a href="CppQGraphicsPixmapItem.htm">QGraphicsPixmapItem</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item();<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item&amp; other) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item&amp; other) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~<a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item() {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the item the <a href="Tools.htm">tools</a> item floats above<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppReturnType.htm">Return type</a> cannot be <b><a href="CppConst.htm">const</a></b>, as the user might want to modify it<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem * GetBuddyItem() <b><a href="CppConst.htm">const</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbNodeItem * GetBuddyItem();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the position from the <a href="CppWidget.htm">widget</a> it floats above<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/item cannot be <b><a href="CppConst.htm">const</a></b>, as the user might want to modify it<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetBuddyItem(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem * <b><a href="CppConst.htm">const</a></b> item);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppSignal.htm">Signal</a><a href="CppLed.htm">led</a> when a <a href="Tools.htm">tool</a> is clicked<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_clicked;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> hoverMoveEvent(<a href="CppQGraphicsSceneHoverEvent.htm">QGraphicsSceneHoverEvent</a> *event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> mousePressEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> *event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paint(<a href="CppQPainter.htm">QPainter</a>* painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a> *, <a href="CppQWidget.htm">QWidget</a> *);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Make <b><a href="CppPrivate.htm">private</a></b> to ensure use of other setPos <a href="CppMemberFunction.htm">member function</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setPos(qreal ax, qreal ay) { <a href="CppQGraphicsPixmapItem.htm">QGraphicsPixmapItem</a>::setPos(ax,ay); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The item the <a href="Tools.htm">tools</a> item floats above<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/m_item cannot be <b><a href="CppConst.htm">const</a></b>, as the user might want to modify it<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem * m_item;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setVisible(<b><a href="CppBool.htm">bool</a></b> visible) { <a href="CppQGraphicsPixmapItem.htm">QGraphicsPixmapItem</a>::setVisible(visible); }<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBTOOLSITEM_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbtoolsitem.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbtoolsitem.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdb<a href="Tools.htm">tools</a>item.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQCursor.htm">QCursor</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQPainter.htm">QPainter</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbnodeitem.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item::<a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item()<br/>
&nbsp;&nbsp;: m_signal_clicked(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item(<b><a href="CppNullptr.htm">nullptr</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setPixmap(<a href="CppQPixmap.htm">QPixmap</a>(":/images/PicArrow14x14.png"));<br/>
<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<b><a href="CppThis.htm">this</a></b>-&gt;pixmap().isNull());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsFocusable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.htm">QGraphicsItem</a>::ItemIsSelectable);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Allow mouse tracking<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setAcceptHoverEvents(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setVisible(<b><a href="CppFalse.htm">false</a></b>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setZValue(3.0);<br/>
}<br/>
<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbNodeItem * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item::GetBuddyItem()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Calls the <b><a href="CppConst.htm">const</a></b> <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <a href="CppMemberFunction.htm">member function</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>To avoid duplication in <b><a href="CppConst.htm">const</a></b> and non-<a href="CppConstMemberFunction.htm">const member function</a>s [1]<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>[1] <a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C<a href="CppOperatorIncrement.htm">++</a> (3rd edition). ISBN: 0-321-33487-6.<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>&nbsp;&nbsp;&nbsp;&nbsp;Item 3, paragraph 'Avoid duplication in <b><a href="CppConst.htm">const</a></b> and non-<a href="CppConstMemberFunction.htm">const member function</a>s'<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <b><a href="CppConst_cast.htm">const_cast</a></b>&lt;<a href="CppQt.htm">Qt</a>PvdbNodeItem * &gt;(<b><a href="CppConst_cast.htm">const_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item *&gt;(<b><a href="CppThis.htm">this</a></b>)-&gt;GetBuddyItem());<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbNodeItem * <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item::GetBuddyItem() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> m_item;<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item::hoverMoveEvent(<a href="CppQGraphicsSceneHoverEvent.htm">QGraphicsSceneHoverEvent</a> *)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setCursor(<a href="CppQCursor.htm">QCursor</a>(<a href="CppQt.htm">Qt</a>::<a href="CppPoint.htm">Point</a>ingHandCursor));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item::mousePressEvent(<a href="CppQGraphicsSceneMouseEvent.htm">QGraphicsSceneMouseEvent</a> * event)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQGraphicsPixmapItem.htm">QGraphicsPixmapItem</a>::mousePressEvent(event);<br/>
&nbsp;&nbsp;m_signal_clicked();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item::paint(<a href="CppQPainter.htm">QPainter</a>* painter, <b><a href="CppConst.htm">const</a></b> <a href="CppQStyleOptionGraphicsItem.htm">QStyleOptionGraphicsItem</a>* option, <a href="CppQWidget.htm">QWidget</a>* <a href="CppWidget.htm">widget</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_item);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setPos(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;pos().x(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item-&gt;pos().y() <a href="CppOperatorMinus.htm">-</a> 32.0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppQGraphicsPixmapItem.htm">QGraphicsPixmapItem</a>::paint(painter,option,<a href="CppWidget.htm">widget</a>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppThis.htm">this</a></b>-&gt;isSelected() <a href="CppOperatorLogicalOr.htm">||</a> <b><a href="CppThis.htm">this</a></b>-&gt;hasFocus())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPen.htm">QPen</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pen.setColor(<a href="CppQColor.htm">QColor</a>(255,0,0));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;setPen(pen);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>No idea why these relative coordinats are best<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>I'd expect no adjustment to look best...<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;drawRect(<b><a href="CppThis.htm">this</a></b>-&gt;boundingRect().adjusted(0.0,0.0,-2.0,-2.0));<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>Pvdb<a href="Tools.htm">Tools</a>Item::SetBuddyItem(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbNodeItem * <b><a href="CppConst.htm">const</a></b> item)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (item <a href="CppOperatorNotEqual.htm">!=</a> m_item)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_item <a href="CppOperatorAssign.htm">=</a> item;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_item)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setVisible(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setVisible(<b><a href="CppFalse.htm">false</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbviewfilesdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbviewfilesdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBVIEW<a href="CppCfile.htm">FILE</a>SDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBVIEW<a href="CppCfile.htm">FILE</a>SDIALOG_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui { <b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbViewFilesDialog; }<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbViewFilesDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbViewFilesDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbViewFilesDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbViewFilesDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b> <b><a href="CppSlots.htm">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_left_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event);<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>rLeft();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppTime.htm">Time</a>rRight();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_right_clicked();<br/>
<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog *ui;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBVIEW<a href="CppCfile.htm">FILE</a>SDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbviewfilesdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbviewfilesdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbviewfilesdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIteratorH.htm">iterator</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQFile.htm">QFile</a>Dialog&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppFileIo.htm">fileio</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbfiledialog.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbviewfilesdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog(<a href="CppQWidget.htm">QWidget</a>* parent) :<br/>
&nbsp;&nbsp;<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::~<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::On<a href="CppTime.htm">Time</a>rLeft()<br/>
{<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::On<a href="CppTime.htm">Time</a>rRight()<br/>
{<br/>
<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::on_button_left_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetOpenFileDialog();<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Select a file to view");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> filenames <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (filenames.isEmpty()) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filenames.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> filenames[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!pvdb::Safe<a href="CppFileToVector.htm">FileToVector</a>(filename).empty());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppXmlToPretty.htm">XmlToPretty</a>(pvdb::Safe<a href="CppFileToVector.htm">FileToVector</a>(filename)[0]);<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> text;<br/>
&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[&amp;text](<a href="CppString.htm">std::string</a> s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text<a href="CppOperatorPlusAssign.htm">+=</a>s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text<a href="CppOperatorPlusAssign.htm">+=</a><a href="CppString.htm">std::string</a>("\n");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;ui-&gt;text_left-&gt;clear();<br/>
&nbsp;&nbsp;ui-&gt;text_left-&gt;setPlainText(text.c_str());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
&nbsp;&nbsp;<a href="CppQDialog.htm">QDialog</a>::keyPressEvent(event);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewFilesDialog::on_button_right_clicked()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> d <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppQt.htm">Qt</a>FileDialog::GetOpenFileDialog();<br/>
&nbsp;&nbsp;d-&gt;setWindowTitle("Select a file to view");<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> status <a href="CppOperatorAssign.htm">=</a> d-&gt;exec();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (status <a href="CppOperatorEqual.htm">==</a> <a href="CppQDialog.htm">QDialog</a>::Rejected) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppAuto.htm">auto</a></b> filenames <a href="CppOperatorAssign.htm">=</a> d-&gt;selectedFiles();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (filenames.isEmpty()) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(filenames.size() <a href="CppOperatorEqual.htm">==</a> 1);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> filenames[0].toStdString();<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppFileIo.htm">fileio</a>::<a href="CppIsRegularFile.htm">IsRegularFile</a>(filename));<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!<a href="CppRibi.htm">ribi</a>::<a href="CppFileIo.htm">fileio</a>::<a href="CppFileToVector.htm">FileToVector</a>(filename).empty());<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> pvdb::<a href="CppXmlToPretty.htm">XmlToPretty</a>(<a href="CppRibi.htm">ribi</a>::<a href="CppFileIo.htm">fileio</a>::<a href="CppFileToVector.htm">FileToVector</a>(filename)[0]);<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> text;<br/>
&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[&amp;text](<a href="CppString.htm">std::string</a> s)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text<a href="CppOperatorPlusAssign.htm">+=</a>s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text<a href="CppOperatorPlusAssign.htm">+=</a><a href="CppString.htm">std::string</a>("\n");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;ui-&gt;text_right-&gt;clear();<br/>
&nbsp;&nbsp;ui-&gt;text_right-&gt;setPlainText(text.c_str());<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbviewtestsdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbviewtestsdialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.htm">#ifndef</a> QTPVDBVIEWTESTSDIALOG_H<br/>
<a href="CppDefine.htm">#define</a> QTPVDBVIEWTESTSDIALOG_H<br/>
<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbfwd.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbViewTestsDialog;<br/>
}<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> pvdb {<br/>
<br/>
<b><a href="CppClass.htm">class</a></b> <a href="CppQt.htm">Qt</a>PvdbViewTestsDialog : <b><a href="CppPublic.htm">public</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.htm">Q_OBJECT</a><br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.htm">explicit</a></b> <a href="CppQt.htm">Qt</a>PvdbViewTestsDialog(<a href="CppQWidget.htm">QWidget</a>* parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbViewTestsDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog&amp; <b><a href="CppOperator.htm">operator</a></b>=(<b><a href="CppConst.htm">const</a></b> <a href="CppQt.htm">Qt</a>PvdbViewTestsDialog&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.htm">delete</a></b>;<br/>
&nbsp;&nbsp;~<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog() <b><a href="CppNoexcept.htm">noexcept</a></b>;<br/>
<br/>
<b><a href="CppProtected.htm">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event);<br/>
&nbsp;&nbsp;<br/>
<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog *ui;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> ComplexHomomorphousTestConceptMaps<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; &gt; m_c;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> HeteromorphousTestConceptMaps<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; &gt; m_h;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> SimpleHomomorphousTestConceptMaps<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; &gt; m_s;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorDivide.htm">/</a> Tha <a href="CppWidget.htm">widget</a>s<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>&gt; &gt; m_<a href="CppWidget.htm">widget</a>s;<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>&gt; Create<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> type,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map);<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> pvdb<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> QTPVDBVIEWTESTSDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/qtpvdbviewtestsdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/qtpvdbviewtestsdialog.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbviewtestsdialog.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQKeyEvent.htm">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;QGridLayout&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQVBoxLayout.htm">QVBoxLayout</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppQLabel.htm">QLabel</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmap.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptmapfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapdisplay<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmapedit<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmaprate<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "qtpvdbconceptmap<a href="CppWidget.htm">widget</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppInclude.htm">#include</a> "ui_qtpvdbviewtestsdialog.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog::<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog(<a href="CppQWidget.htm">QWidget</a>* parent)<br/>
&nbsp;&nbsp;: <a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_c(pvdb::ConceptMapFactory::GetComplexHomomorphousTestConceptMaps()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_h(pvdb::ConceptMapFactory::GetHeteromorphousTestConceptMaps()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_s(pvdb::ConceptMapFactory::GetSimpleHomomorphousTestConceptMaps()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>s{}<br/>
{<br/>
<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> type=0; type<a href="CppOperatorNotEqual.htm">!=</a>3; <a href="CppOperatorIncrement.htm">++</a>type)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQWidget.htm">QWidget</a> * contents <a href="CppOperatorAssign.htm">=</a> 0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (type)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: contents <a href="CppOperatorAssign.htm">=</a> ui-&gt;display_contents; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1: contents <a href="CppOperatorAssign.htm">=</a> ui-&gt;edit_contents; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2: contents <a href="CppOperatorAssign.htm">=</a> ui-&gt;rate_contents; <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>: <a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!contents-&gt;layout());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQVBoxLayout.htm">QVBoxLayout</a> * <b><a href="CppConst.htm">const</a></b> mylayout <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQVBoxLayout.htm">QVBoxLayout</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(mylayout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;contents-&gt;setLayout(mylayout);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(contents-&gt;layout());<br/>
<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> all concept maps<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("Heteromorphous test concept maps",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> extra_height <a href="CppOperatorAssign.htm">=</a> 4;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_h.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "[" <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(i)<a href="CppOperatorPlus.htm">+</a> "]";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>(s.c_str(),<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_h.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_h[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map(m_h[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>&gt; <a href="CppWidget.htm">widget</a>(Create<a href="CppWidget.htm">Widget</a>(type,concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(extra_height &gt; 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> extra_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(<a href="CppWidget.htm">widget</a>.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>s.push_back(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("Simple homomorphous test concept maps",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_s.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "[" <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(i)<a href="CppOperatorPlus.htm">+</a> "]";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>(s.c_str(),<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(minheight);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_s.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_s[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> m_s[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>&gt; <a href="CppWidget.htm">widget</a>(Create<a href="CppWidget.htm">Widget</a>(type,concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> extra_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(<a href="CppWidget.htm">widget</a>.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>s.push_back(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>("Complex homomorphous test concept maps",<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.htm">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_c.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "[" <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.htm">boost::lexical_cast</a>&lt;<a href="CppString.htm">std::string</a>&gt;(i)<a href="CppOperatorPlus.htm">+</a> "]";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQLabel.htm">QLabel</a> * <b><a href="CppConst.htm">const</a></b> label <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQLabel.htm">QLabel</a>(s.c_str(),<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(label);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(i &lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(m_c.size()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(m_c[i]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map <a href="CppOperatorAssign.htm">=</a> m_c[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(concept_map);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>&gt; <a href="CppWidget.htm">widget</a>(Create<a href="CppWidget.htm">Widget</a>(type,concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(minheight);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWidget.htm">widget</a>-&gt;setMinimumHeight(<a href="CppWidget.htm">widget</a>-&gt;scene()-&gt;itemsBoundingRect().height() <a href="CppOperatorPlus.htm">+</a> extra_height);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mylayout-&gt;addWidget(<a href="CppWidget.htm">widget</a>.get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.htm">widget</a>s.push_back(<a href="CppWidget.htm">widget</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog::~<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog() <b><a href="CppNoexcept.htm">noexcept</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.htm">delete</a></b> ui;<br/>
}<br/>
<br/>
<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>&gt; <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog::Create<a href="CppWidget.htm">Widget</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> type,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::ConceptMap&gt; concept_map)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (type)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>&gt; p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapDisplay<a href="CppWidget.htm">Widget</a>(concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>&gt; p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapEdit<a href="CppWidget.htm">Widget</a>(concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>PvdbConceptMap<a href="CppWidget.htm">Widget</a>&gt; p(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>PvdbConceptMapRate<a href="CppWidget.htm">Widget</a>(concept_map));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppLogic_error.htm">std::logic_error</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog::Create<a href="CppWidget.htm">Widget</a>: unimplemented type");<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog::keyPressEvent(<a href="CppQKeyEvent.htm">QKeyEvent</a>* event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (event-&gt;key()&nbsp;&nbsp;<a href="CppOperatorEqual.htm">==</a> <a href="CppQt.htm">Qt</a>::Key_Escape) { close(); <b><a href="CppReturn.htm">return</a></b>; }<br/>
}<br/>
<br/>
<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Started <a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog d;<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;d.update();<br/>
&nbsp;&nbsp;d.resize(100,100);<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;d.update();<br/>
&nbsp;&nbsp;d.resize(200,200);<br/>
&nbsp;&nbsp;d.show();<br/>
&nbsp;&nbsp;d.update();<br/>
&nbsp;&nbsp;d.close();<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("<a href="CppRibi.htm">ribi</a>::pvdb::<a href="CppQt.htm">Qt</a>PvdbViewTestsDialog::Test finished successfully");<br/>
}<br/>
<a href="CppEndif.htm">#endif</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/test_pvdbcluster.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/test_pvdbcluster.cpp" border = "1"><tr><td><code>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.htm">-Weffc++</a>"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.htm">typedef</a></b>s"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppAlgorithmH.htm">algorithm</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<br/>
<a href="CppIfdef.htm">#ifdef</a> COMPILER_SUPPORTS_THREADS_20130507<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppThreadH.htm">thread</a>&gt;<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "pvdbcompetency.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbcluster.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbclusterfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbhelper.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconcept.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexamples.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbexample.h"<br/>
<a href="CppInclude.htm">#include</a> "pvdbconceptfactory.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<a href="CppPragma.htm">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.htm">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> COMPILER_SUPPORTS_THREADS_20130507<br/>
&nbsp;&nbsp;<a href="CppThread.htm">std::thread</a> t(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[]<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Cluster::Test started");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test <b><a href="CppOperatorEqual.htm">operator==</a></b> and <b><a href="CppOperatorNotEqual.htm">operator!=</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; &gt; tmp_tests_1 <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTests();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> sz <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(tmp_tests_1.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; &gt; tmp_tests_a <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTests(); <a href="CppComment.htm">//</a>For cross<a href="CppCompiler.htm">compiler</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; a <a href="CppOperatorAssign.htm">=</a> tmp_tests_a.at(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!a) <b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(a);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; &gt; tmp_tests_b <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTests(); <a href="CppComment.htm">//</a>For cross<a href="CppCompiler.htm">compiler</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; b <a href="CppOperatorAssign.htm">=</a> tmp_tests_b.at(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!b) <b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(a); <a href="CppAssert.htm">assert</a>(b);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*a,*a));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*a,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*b,*a));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*b,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> j=0; j<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorIncrement.htm">++</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; &gt; tmp_tests_c <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTests(); <a href="CppComment.htm">//</a>For cross<a href="CppCompiler.htm">compiler</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; &gt; tmp_tests_d <a href="CppOperatorAssign.htm">=</a> <a href="CppRibi.htm">ribi</a>::pvdb::ClusterFactory::GetTests(); <a href="CppComment.htm">//</a>For cross<a href="CppCompiler.htm">compiler</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<b><a href="CppConst.htm">const</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; c <a href="CppOperatorAssign.htm">=</a> tmp_tests_c.at(j);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!c) <b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; d <a href="CppOperatorAssign.htm">=</a> tmp_tests_d.at(j);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!d) <b><a href="CppContinue.htm">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c); <a href="CppAssert.htm">assert</a>(d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*c,*c));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*c,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*d,*c));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*d,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (i<a href="CppOperatorEqual.htm">==</a>j)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*a,*c)); <a href="CppAssert.htm">assert</a>(IsEqual(*a,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*b,*c)); <a href="CppAssert.htm">assert</a>(IsEqual(*b,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*c,*a)); <a href="CppAssert.htm">assert</a>(IsEqual(*c,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*d,*a)); <a href="CppAssert.htm">assert</a>(IsEqual(*d,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*a,*c)); <a href="CppAssert.htm">assert</a>(!IsEqual(*a,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*b,*c)); <a href="CppAssert.htm">assert</a>(!IsEqual(*b,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*c,*a)); <a href="CppAssert.htm">assert</a>(!IsEqual(*c,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!IsEqual(*d,*a)); <a href="CppAssert.htm">assert</a>(!IsEqual(*d,*b));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Test all Clusters with each combination of Concepts<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt; &gt; v<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppGetCombinations.htm">GetCombinations</a>(pvdb::ConceptFactory::GetTests());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFor_each.htm">std::for_each</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Concept&gt; &gt;&amp; concepts)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; c(<b><a href="CppNew.htm">new</a></b> <a href="CppRibi.htm">ribi</a>::pvdb::Cluster(concepts));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> To<a href="CppXml.htm">Xml</a>(c);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;<a href="CppRibi.htm">ribi</a>::pvdb::Cluster&gt; d <a href="CppOperatorAssign.htm">=</a> From<a href="CppXml.htm">Xml</a>(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(c <a href="CppOperatorNotEqual.htm">!=</a> d);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(IsEqual(*c,*d));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Cluster::Test finished successfully");<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfdef.htm">#ifdef</a> COMPILER_SUPPORTS_THREADS_20130507<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;t.detach();<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverAssessorQt4LubuntuToWindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverAssessorQt4LubuntuToWindows.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
#myfile="../../Libraries/mxe/usr/i686-pc-mingw32/qt5/bin/qmake" #Qt5<br/>
myfile="i686-pc-mingw32-qmake" #Qt4<br/>
mytarget="ProjectBrainweaverAssessor"<br/>
myprofile=$mytarget".pro"<br/>
myexe=$mytarget".exe"<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e ./release/$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverAssessorQt5LubuntuToWindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverAssessorQt5LubuntuToWindows.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
myfile="../../Libraries/mxe/usr/i686-pc-mingw32/qt5/bin/qmake"<br/>
#myfile="i686-pc-mingw32-qmake" #Qt4<br/>
mytarget="ProjectBrainweaverAssessor"<br/>
myprofile=$mytarget".pro"<br/>
myexe=$mytarget".exe"<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e ./release/$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverClean.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverClean.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm *.pro.user<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverCrosscompile.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverCrosscompile.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
<br/>
#myqmake="i686-pc-mingw32-qmake" #Qt4<br/>
myqmake="../../Libraries/mxe/usr/i686-pc-mingw32/qt5/bin/qmake"<br/>
<br/>
#Cleaning up<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *.o<br/>
rm *_plugin_import.cpp<br/>
<br/>
rm *.pro.user<br/>
<br/>
<br/>
for myprofile in `ls | egrep ".pro\&gt;"`<br/>
do<br/>
&nbsp;&nbsp;echo $myprofile<br/>
&nbsp;&nbsp;mytarget=`echo $myprofile | sed "s/\.pro//"`<br/>
<br/>
&nbsp;&nbsp;$myqmake $myprofile<br/>
<br/>
&nbsp;&nbsp;if [ ! -e Makefile ]<br/>
&nbsp;&nbsp;then<br/>
&nbsp;&nbsp;&nbsp;&nbsp;echo "FAIL: $myqmake $myprofile"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;exit<br/>
&nbsp;&nbsp;fi<br/>
<br/>
&nbsp;&nbsp;make<br/>
<br/>
&nbsp;&nbsp;if [ -e ./release/$mytarget".exe" ]<br/>
&nbsp;&nbsp;then<br/>
&nbsp;&nbsp;&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;#cp ./release/$mytarget".exe" ./$mytarget".exe"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;#cp ./release/$mytarget".exe" "../../../.wine/drive_c/windows/system32/"$mytarget".exe"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;cp ./release/$mytarget".exe" ~/bin/<br/>
<br/>
&nbsp;&nbsp;else<br/>
&nbsp;&nbsp;&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;exit<br/>
&nbsp;&nbsp;fi<br/>
<br/>
&nbsp;&nbsp;#Cleaning up<br/>
&nbsp;&nbsp;rm Makefile<br/>
&nbsp;&nbsp;rm Makefile.*<br/>
&nbsp;&nbsp;rm -r release<br/>
&nbsp;&nbsp;rm -r debug<br/>
&nbsp;&nbsp;rm ui_*.h<br/>
&nbsp;&nbsp;rm qrc_*.cpp<br/>
&nbsp;&nbsp;rm moc_*.cpp<br/>
&nbsp;&nbsp;rm object_script*.*<br/>
&nbsp;&nbsp;rm *.o<br/>
&nbsp;&nbsp;rm *_plugin_import.cpp<br/>
<br/>
done #next .pro file<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverDeveloperQt4LubuntuToWindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverDeveloperQt4LubuntuToWindows.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
#myfile="../../Libraries/mxe/usr/i686-pc-mingw32/qt5/bin/qmake" #Qt5<br/>
myfile="i686-pc-mingw32-qmake" #Qt4<br/>
mytarget="ProjectBrainweaverDeveloper"<br/>
myprofile=$mytarget".pro"<br/>
myexe=$mytarget".exe"<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e ./release/$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverDeveloperQt5LubuntuToWindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverDeveloperQt5LubuntuToWindows.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
myfile="../../Libraries/mxe/usr/i686-pc-mingw32/qt5/bin/qmake"<br/>
#myfile="i686-pc-mingw32-qmake" #Qt4<br/>
mytarget="ProjectBrainweaverDeveloper"<br/>
myprofile=$mytarget".pro"<br/>
myexe=$mytarget".exe"<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e ./release/$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverGprof.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverGprof.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
qmake -config release ProjectBrainweaverDeveloper.pro<br/>
make clean<br/>
make<br/>
./ProjectBrainweaverDeveloper<br/>
gprof ProjectBrainweaverDeveloper &gt; gprof.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverLubuntu.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverLubuntu.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
<br/>
myfile="qmake"<br/>
for mytarget in "ProjectBrainweaverDeveloper" "ProjectBrainweaverStudent" "ProjectBrainweaverAssessor"<br/>
do<br/>
<br/>
myprofile=$mytarget.pro<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e $mytarget ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
<br/>
#Cleaning up<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
<br/>
#Cleaning up<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
<br/>
done<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverMemcheck.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverMemcheck.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
valgrind --leak-check=full -v --show-reachable=yes --log-file=ProjectBrainweaverMemcheckDebug.txt ../build-ProjectBrainweaverDeveloper-Qt_5_0_1_qt5-Debug/./ProjectBrainweaverDeveloper<br/>
valgrind --leak-check=full -v --show-reachable=yes --log-file=ProjectBrainweaverMemcheckRelease.txt ../build-ProjectBrainweaverDeveloper-Qt_5_0_1_qt5-Release/./ProjectBrainweaverDeveloper<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverSloccount.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverSloccount.sh" border = "1"><tr><td><code>
sloccount --overhead 1.0 --personcost 22994.56 ../ProjectVanDenBogaart &gt; ProjectVanDenBogaartSloccount.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverStudentQt4LubuntuToWindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverStudentQt4LubuntuToWindows.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
#myfile="../../Libraries/mxe/usr/i686-pc-mingw32/qt5/bin/qmake"<br/>
myfile="i686-pc-mingw32-qmake" #Qt4<br/>
mytarget="ProjectBrainweaverStudent"<br/>
myprofile=$mytarget".pro"<br/>
myexe=$mytarget".exe"<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e ./release/$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverStudentQt5LubuntuToWindows.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverStudentQt5LubuntuToWindows.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
myfile="../../Libraries/mxe/usr/i686-pc-mingw32/qt5/bin/qmake"<br/>
#myfile="i686-pc-mingw32-qmake" #Qt4<br/>
mytarget="ProjectBrainweaverStudent"<br/>
myprofile=$mytarget".pro"<br/>
myexe=$mytarget".exe"<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
<br/>
if [ ! -e $myprofile ]<br/>
then<br/>
&nbsp;&nbsp;echo "Qt Creator project '$myprofile' not found"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myfile $myprofile<br/>
<br/>
if [ ! -e Makefile ]<br/>
then<br/>
&nbsp;&nbsp;echo "FAIL: $myfile $myprofile"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
make<br/>
<br/>
if [ -e ./release/$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytarget": SUCCESS"<br/>
else<br/>
&nbsp;&nbsp;echo $mytarget": FAIL"<br/>
fi<br/>
<br/>
#Cleaning up<br/>
rm *.o<br/>
rm Makefile<br/>
rm Makefile.*<br/>
rm -r release<br/>
rm -r debug<br/>
rm ui_*.h<br/>
rm qrc_*.cpp<br/>
rm moc_*.cpp<br/>
rm object_script*.*<br/>
rm *_plugin_import.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/ProjectBrainweaverValgrind.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/ProjectBrainweaverValgrind.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
valgrind --leak-check=full -v --show-reachable=yes --log-file=my_log_filename.txt ./ProjectBrainweaverDeveloper<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/TestConceptItemMouseCursor.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/TestConceptItemMouseCursor.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
# Test if a concept item shows a hand cursor when hovering over it<br/>
<br/>
<br/>
#0 about<br/>
#1 assessor<br/>
#2 create_test_files<br/>
#3 modify_stylesheet<br/>
#4 overview<br/>
#5 print_concept_map<br/>
#6 print_rating<br/>
#7 rate_concept_auto<br/>
#8 rate_concept<br/>
#9 rate_concept_map<br/>
#0 rate_examples<br/>
#1 rating<br/>
#2 student<br/>
#3 test_arrowitems<br/>
#4 test_cluster<br/>
#5 test_conceptedit<br/>
#6 test_conceptitem<br/>
#7 test_conceptmap<br/>
#8 test_create_sub_concept_map<br/>
#9 test_edge_item<br/>
#0 test_node_item<br/>
#1 test_qtconceptmapdisplaywidget<br/>
#2 test_qtconceptmapeditwidget<br/>
#3 test_qtconceptmapratewidget<br/>
#4 test_qtroundededitrectitem<br/>
#5 test_qtroundedtextrectitem<br/>
#6 view_files<br/>
#7 view_test_concept_maps_clicked<br/>
<br/>
# Test <br/>
test_test_conceptitem_index=16<br/>
test_qtconceptmapeditwidget_index=22 <br/>
mytestname="TestConceptItemMouseCursor"<br/>
<br/>
#Test with release version<br/>
myexe="../../../bin/ProjectBrainweaverDeveloperRelease"<br/>
mytester="../../Libraries/libcvautomation/examples/cva-input"<br/>
<br/>
if [ -e /$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytestname": FAIL (executable '"$myexe"' not found)"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
if [ -e /$mytester ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytestname": FAIL (executable '"$mytester"' not found)"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
$myexe $test_test_conceptitem_index &amp;<br/>
#./../build-BrainweaverDeveloper-Desktop-Release/BrainweaverDeveloper $test_qtconceptmapeditwidget_index &amp;<br/>
<br/>
sleep 2<br/>
<br/>
output=`./$mytester -s "mouselocation"`<br/>
./$mytester -s "mousexy 500 500"<br/>
./$mytester -s "mouseclick"<br/>
./$mytester -s "mouseclick"<br/>
./$mytester -s "mouselocation"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/TestEditConceptMapEditConcepts.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/TestEditConceptMapEditConcepts.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
#./../build-BrainweaverDeveloper-Desktop-Debug/BrainweaverDeveloper 1 &amp;<br/>
<br/>
#0 about<br/>
#1 assessor<br/>
#2 create_test_files<br/>
#3 modify_stylesheet<br/>
#4 overview<br/>
#5 print_concept_map<br/>
#6 print_rating<br/>
#7 rate_concept_auto<br/>
#8 rate_concept<br/>
#9 rate_concept_map<br/>
#0 rate_examples<br/>
#1 rating<br/>
#2 student<br/>
#3 test_arrowitems<br/>
#4 test_cluster<br/>
#5 test_conceptedit<br/>
#6 test_conceptitem<br/>
#7 test_conceptmap<br/>
#8 test_create_sub_concept_map<br/>
#9 test_edge_item<br/>
#0 test_node_item<br/>
#1 test_qtconceptmapdisplaywidget<br/>
#2 test_qtconceptmapeditwidget<br/>
#3 test_qtconceptmapratewidget<br/>
#4 test_qtroundededitrectitem<br/>
#5 test_qtroundedtextrectitem<br/>
#6 view_files<br/>
#7 view_test_concept_maps_clicked<br/>
<br/>
# Test <br/>
test_test_conceptitem_index=16<br/>
test_qtconceptmapeditwidget_index=22 <br/>
mytestname="TestConceptItemMouseCursor"<br/>
<br/>
#Test with release version<br/>
myexe="../../../bin/ProjectBrainweaverDeveloper"<br/>
#myexe="../../../.wine/drive_c/windows/system32/ProjectBrainweaverDeveloper.exe"<br/>
<br/>
mytester="../../Libraries/libcvautomation/examples/cva-input"<br/>
#mytester="../../Test/build-CppLibcvautomationExample2-Desktop-Debug/CppLibcvautomationExample2"<br/>
<br/>
if [ -e /$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytestname": FAIL (executable '"$myexe"' not found)"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
if [ -e /$mytester ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytestname": FAIL (executable '"$mytester"' not found)"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
#wine $myexe $test_qtconceptmapeditwidget_index &amp;<br/>
$myexe $test_qtconceptmapeditwidget_index &amp;<br/>
#./../build-BrainweaverDeveloper-Desktop-Release/BrainweaverDeveloper $test_qtconceptmapeditwidget_index &amp;<br/>
<br/>
sleep 2<br/>
<br/>
#Go to the concept map<br/>
./$mytester -s "keyclick Tab"<br/>
./$mytester -s "keyclick space"<br/>
<br/>
<br/>
for i in {1..1000}<br/>
do<br/>
&nbsp;&nbsp;#echo $i<br/>
<br/>
&nbsp;&nbsp;mynumber=$[ ( $RANDOM % 43 ) ]<br/>
<br/>
&nbsp;&nbsp;case $mynumber in<br/>
&nbsp;&nbsp; 0) ./$mytester -s "keyclick a" ;;<br/>
&nbsp;&nbsp; 1) ./$mytester -s "keyclick b" ;;<br/>
&nbsp;&nbsp; 2) ./$mytester -s "keyclick c" ;;<br/>
&nbsp;&nbsp; 3) ./$mytester -s "keyclick d" ;;<br/>
&nbsp;&nbsp; 4) ./$mytester -s "keyclick e" ;;<br/>
&nbsp;&nbsp; 5) ./$mytester -s "keyclick f" ;;<br/>
&nbsp;&nbsp; 6) ./$mytester -s "keyclick g" ;;<br/>
&nbsp;&nbsp; 7) ./$mytester -s "keyclick h" ;;<br/>
&nbsp;&nbsp; 8) ./$mytester -s "keyclick i" ;;<br/>
&nbsp;&nbsp; 9) ./$mytester -s "keyclick j" ;;<br/>
&nbsp;&nbsp;10) ./$mytester -s "keyclick k" ;;<br/>
&nbsp;&nbsp;11) ./$mytester -s "keyclick l" ;;<br/>
&nbsp;&nbsp;12) ./$mytester -s "keyclick m" ;;<br/>
&nbsp;&nbsp;13) ./$mytester -s "keyclick n" ;;<br/>
&nbsp;&nbsp;14) ./$mytester -s "keyclick o" ;;<br/>
&nbsp;&nbsp;15) ./$mytester -s "keyclick p" ;;<br/>
&nbsp;&nbsp;16) ./$mytester -s "keyclick q" ;;<br/>
&nbsp;&nbsp;17) ./$mytester -s "keyclick r" ;;<br/>
&nbsp;&nbsp;18) ./$mytester -s "keyclick s" ;;<br/>
&nbsp;&nbsp;19) ./$mytester -s "keyclick t" ;;<br/>
&nbsp;&nbsp;20) ./$mytester -s "keyclick u" ;;<br/>
&nbsp;&nbsp;21) ./$mytester -s "keyclick v" ;;<br/>
&nbsp;&nbsp;22) ./$mytester -s "keyclick w" ;;<br/>
&nbsp;&nbsp;23) ./$mytester -s "keyclick x" ;;<br/>
&nbsp;&nbsp;24) ./$mytester -s "keyclick y" ;;<br/>
&nbsp;&nbsp;25) ./$mytester -s "keyclick z" ;;<br/>
&nbsp;&nbsp;26) ./$mytester -s "keyclick space" ;;<br/>
&nbsp;&nbsp;27) ./$mytester -s "keyclick F2" ;;<br/>
&nbsp;&nbsp;28) ./$mytester -s "keyclick BackSpace" ;;<br/>
&nbsp;&nbsp;29) ./$mytester -s "keyclick Return" ;;<br/>
&nbsp;&nbsp;30) ./$mytester -s "keyclick Up" ;;<br/>
&nbsp;&nbsp;31) ./$mytester -s "keyclick Right" ;;<br/>
&nbsp;&nbsp;32) ./$mytester -s "keyclick Down" ;;<br/>
&nbsp;&nbsp;33) ./$mytester -s "keyclick Left" ;;<br/>
&nbsp;&nbsp;34) #Choose OK<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Alt_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick o"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Alt_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;35) #Choose Add<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Alt_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick v"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Alt_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;36) ./$mytester -s "keyclick Tab" ;;<br/>
&nbsp;&nbsp;37) ./$mytester -s "keyclick Insert" ;;<br/>
&nbsp;&nbsp;38) #Move up<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick Up"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;39) #Move right<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick Right"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;40) #Move down<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick Down"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;41) #Move left<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick Left"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Shift_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;42) ./$mytester -s "keyclick Tab" ;;<br/>
&nbsp;&nbsp;43) #Choose 1: Modify<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keydown Alt_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyclick 1"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;./$mytester -s "keyup Alt_L"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;;;<br/>
&nbsp;&nbsp;44) ./$mytester -s "keyclick Delete" ;;<br/>
&nbsp;&nbsp;esac<br/>
<br/>
done<br/>
<br/>
<br/>
#Close:<br/>
# ./$mytester -s "keydown Alt_L"<br/>
# ./$mytester -s "keyclick F4"<br/>
# ./$mytester -s "keyup Alt_L"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/TestStudentPrintDialog.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/TestStudentPrintDialog.sh" border = "1"><tr><td><code>
#!/bin/bash<br/>
#./../build-BrainweaverDeveloper-Desktop-Debug/BrainweaverDeveloper 1 &amp;<br/>
<br/>
#0 about<br/>
#1 assessor<br/>
#2 create_test_files<br/>
#3 modify_stylesheet<br/>
#4 overview<br/>
#5 print_concept_map<br/>
#6 print_rating<br/>
#7 rate_concept_auto<br/>
#8 rate_concept<br/>
#9 rate_concept_map<br/>
#0 rate_examples<br/>
#1 rating<br/>
#2 student<br/>
#3 test_arrowitems<br/>
#4 test_cluster<br/>
#5 test_conceptedit<br/>
#6 test_conceptitem<br/>
#7 test_conceptmap<br/>
#8 test_create_sub_concept_map<br/>
#9 test_edge_item<br/>
#0 test_node_item<br/>
#1 test_qtconceptmapdisplaywidget<br/>
#2 test_qtconceptmapeditwidget<br/>
#3 test_qtconceptmapratewidget<br/>
#4 test_qtroundededitrectitem<br/>
#5 test_qtroundedtextrectitem<br/>
#6 view_files<br/>
#7 view_test_concept_maps_clicked<br/>
<br/>
# Test <br/>
test_print_concept_map_index=5<br/>
test_test_conceptitem_index=16<br/>
test_qtconceptmapeditwidget_index=22 <br/>
mytestname="TestConceptItemMouseCursor"<br/>
<br/>
#Test with release version<br/>
#myexe="../../../bin/ProjectBrainweaverDeveloperRelease"<br/>
myexe="../../../.wine/drive_c/windows/system32/ProjectBrainweaverDeveloper.exe"<br/>
#mytester="../../Libraries/libcvautomation/examples/cva-input"<br/>
mytester="../../Test/build-CppLibcvautomationExample2-Desktop-Debug/CppLibcvautomationExample2"<br/>
<br/>
if [ -e /$myexe ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytestname": FAIL (executable '"$myexe"' not found)"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
if [ -e /$mytester ]<br/>
then<br/>
&nbsp;&nbsp;echo $mytestname": FAIL (executable '"$mytester"' not found)"<br/>
&nbsp;&nbsp;exit<br/>
fi<br/>
<br/>
wine $myexe $test_print_concept_map_index &amp;<br/>
#./../build-BrainweaverDeveloper-Desktop-Release/BrainweaverDeveloper $test_print_concept_map_index &amp;<br/>
<br/>
sleep 2<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>./ProjectBrainweaver/zip.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="./ProjectBrainweaver/zip.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
# Created from file '../../Projects/ProjectBrainweaver/ProjectBrainweaverDeveloper.pro'<br/>
<br/>
echo "Creating of all folders"<br/>
<br/>
mkdir Projects<br/>
mkdir Projects/Tools<br/>
mkdir Projects/Classes<br/>
mkdir Projects/Projects<br/>
mkdir Projects/Classes/CppAbout<br/>
mkdir Projects/Classes/CppTrace<br/>
mkdir Projects/Classes/CppLazy_init<br/>
mkdir Projects/Classes/CppQtArrowItem<br/>
mkdir Projects/Classes/CppQtAboutDialog<br/>
mkdir Projects/Classes/CppFuzzy_equal_to<br/>
mkdir Projects/Classes/CppQtPathArrowItem<br/>
mkdir Projects/Classes/CppQtScopedDisable<br/>
mkdir Projects/Tools/ToolStyleSheetSetter<br/>
mkdir Projects/Tools/ToolTestQtArrowItems<br/>
mkdir Projects/Projects/ProjectBrainweaver<br/>
mkdir Projects/Classes/CppQtRoundedRectItem<br/>
mkdir Projects/Classes/CppQtHideAndShowDialog<br/>
mkdir Projects/Classes/CppQtQuadBezierArrowItem<br/>
mkdir Projects/Classes/CppQtRoundedEditRectItem<br/>
mkdir Projects/Classes/CppQtRoundedTextRectItem<br/>
mkdir Projects/Tools/ToolTestQtRoundedEditRectItem<br/>
mkdir Projects/Tools/ToolTestQtRoundedTextRectItem<br/>
mkdir Projects/Classes/CppQtLabeledQuadBezierArrowItem<br/>
mkdir Projects/Classes/CppQtKeyboardFriendlyGraphicsView<br/>
<br/>
echo "Copying files"<br/>
<br/>
cp ../../Classes/CppAbout/about.h Projects/Classes/CppAbout/about.h<br/>
cp ../../Classes/CppTrace/trace.h Projects/Classes/CppTrace/trace.h<br/>
cp ../../Classes/CppAbout/about.cpp Projects/Classes/CppAbout/about.cpp<br/>
cp ../../Classes/CppAbout/Licence.txt Projects/Classes/CppAbout/Licence.txt<br/>
cp ../../Classes/CppTrace/Licence.txt Projects/Classes/CppTrace/Licence.txt<br/>
cp ../../Classes/CppLazy_init/Licence.txt Projects/Classes/CppLazy_init/Licence.txt<br/>
cp ../../Tools/ToolStyleSheetSetter/R.png Projects/Tools/ToolStyleSheetSetter/R.png<br/>
cp ../../Tools/ToolTestQtArrowItems/R.png Projects/Tools/ToolTestQtArrowItems/R.png<br/>
cp ../../Projects/ProjectBrainweaver/1.cmp Projects/Projects/ProjectBrainweaver/1.cmp<br/>
cp ../../Projects/ProjectBrainweaver/2.cmp Projects/Projects/ProjectBrainweaver/2.cmp<br/>
cp ../../Projects/ProjectBrainweaver/3.cmp Projects/Projects/ProjectBrainweaver/3.cmp<br/>
cp ../../Projects/ProjectBrainweaver/4.cmp Projects/Projects/ProjectBrainweaver/4.cmp<br/>
cp ../../Projects/ProjectBrainweaver/5.cmp Projects/Projects/ProjectBrainweaver/5.cmp<br/>
cp ../../Projects/ProjectBrainweaver/6.cmp Projects/Projects/ProjectBrainweaver/6.cmp<br/>
cp ../../Projects/ProjectBrainweaver/R.png Projects/Projects/ProjectBrainweaver/R.png<br/>
cp ../../Classes/CppQtArrowItem/Licence.txt Projects/Classes/CppQtArrowItem/Licence.txt<br/>
cp ../../Classes/CppQtAboutDialog/Licence.txt Projects/Classes/CppQtAboutDialog/Licence.txt<br/>
cp ../../Classes/CppQtArrowItem/qtarrowitem.h Projects/Classes/CppQtArrowItem/qtarrowitem.h<br/>
cp ../../Classes/CppFuzzy_equal_to/Licence.txt Projects/Classes/CppFuzzy_equal_to/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbfwd.h Projects/Projects/ProjectBrainweaver/pvdbfwd.h<br/>
cp ../../Classes/CppQtArrowItem/qtarrowitem.cpp Projects/Classes/CppQtArrowItem/qtarrowitem.cpp<br/>
cp ../../Classes/CppQtPathArrowItem/Licence.txt Projects/Classes/CppQtPathArrowItem/Licence.txt<br/>
cp ../../Classes/CppQtScopedDisable/Licence.txt Projects/Classes/CppQtScopedDisable/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbedge.h Projects/Projects/ProjectBrainweaver/pvdbedge.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbfile.h Projects/Projects/ProjectBrainweaver/pvdbfile.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbnode.h Projects/Projects/ProjectBrainweaver/pvdbnode.h<br/>
cp ../../Projects/ProjectBrainweaver/zipexes.sh Projects/Projects/ProjectBrainweaver/zipexes.sh<br/>
cp ../../Tools/ToolTestQtArrowItems/Licence.txt Projects/Tools/ToolTestQtArrowItems/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/Cluster.png Projects/Projects/ProjectBrainweaver/Cluster.png<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.h Projects/Classes/CppQtAboutDialog/qtaboutdialog.h<br/>
cp ../../Classes/CppQtRoundedRectItem/Licence.txt Projects/Classes/CppQtRoundedRectItem/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbedge.cpp Projects/Projects/ProjectBrainweaver/pvdbedge.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbfile.cpp Projects/Projects/ProjectBrainweaver/pvdbfile.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbhelper.h Projects/Projects/ProjectBrainweaver/pvdbhelper.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbnode.cpp Projects/Projects/ProjectBrainweaver/pvdbnode.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbrating.h Projects/Projects/ProjectBrainweaver/pvdbrating.h<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.ui Projects/Classes/CppQtAboutDialog/qtaboutdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/pvdbcluster.h Projects/Projects/ProjectBrainweaver/pvdbcluster.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconcept.h Projects/Projects/ProjectBrainweaver/pvdbconcept.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexample.h Projects/Projects/ProjectBrainweaver/pvdbexample.h<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/R.png Projects/Tools/ToolTestQtRoundedEditRectItem/R.png<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/R.png Projects/Tools/ToolTestQtRoundedTextRectItem/R.png<br/>
cp ../../Classes/CppFuzzy_equal_to/fuzzy_equal_to.h Projects/Classes/CppFuzzy_equal_to/fuzzy_equal_to.h<br/>
cp ../../Classes/CppQtAboutDialog/qtaboutdialog.cpp Projects/Classes/CppQtAboutDialog/qtaboutdialog.cpp<br/>
cp ../../Classes/CppQtHideAndShowDialog/Licence.txt Projects/Classes/CppQtHideAndShowDialog/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexamples.h Projects/Projects/ProjectBrainweaver/pvdbexamples.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbhelper.cpp Projects/Projects/ProjectBrainweaver/pvdbhelper.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbrating.cpp Projects/Projects/ProjectBrainweaver/pvdbrating.cpp<br/>
cp ../../Projects/ProjectBrainweaver/Brainweaver.qrc Projects/Projects/ProjectBrainweaver/Brainweaver.qrc<br/>
cp ../../Projects/ProjectBrainweaver/PicRed14x14.png Projects/Projects/ProjectBrainweaver/PicRed14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/pvdbcluster.cpp Projects/Projects/ProjectBrainweaver/pvdbcluster.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconcept.cpp Projects/Projects/ProjectBrainweaver/pvdbconcept.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexample.cpp Projects/Projects/ProjectBrainweaver/pvdbexample.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbdisplay.h Projects/Projects/ProjectBrainweaver/qtpvdbdisplay.h<br/>
cp ../../Classes/CppQtPathArrowItem/qtpatharrowitem.h Projects/Classes/CppQtPathArrowItem/qtpatharrowitem.h<br/>
cp ../../Classes/CppQtQuadBezierArrowItem/Licence.txt Projects/Classes/CppQtQuadBezierArrowItem/Licence.txt<br/>
cp ../../Classes/CppQtRoundedEditRectItem/Licence.txt Projects/Classes/CppQtRoundedEditRectItem/Licence.txt<br/>
cp ../../Classes/CppQtRoundedTextRectItem/Licence.txt Projects/Classes/CppQtRoundedTextRectItem/Licence.txt<br/>
cp ../../Classes/CppQtScopedDisable/qtscopeddisable.h Projects/Classes/CppQtScopedDisable/qtscopeddisable.h<br/>
cp ../../Projects/ProjectBrainweaver/PicBlue14x14.png Projects/Projects/ProjectBrainweaver/PicBlue14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/PicCyan14x14.png Projects/Projects/ProjectBrainweaver/PicCyan14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/pvdbcompetency.h Projects/Projects/ProjectBrainweaver/pvdbcompetency.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconceptmap.h Projects/Projects/ProjectBrainweaver/pvdbconceptmap.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexamples.cpp Projects/Projects/ProjectBrainweaver/pvdbexamples.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbmenudialog.h Projects/Projects/ProjectBrainweaver/pvdbmenudialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbedgeitem.h Projects/Projects/ProjectBrainweaver/qtpvdbedgeitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbnewarrow.h Projects/Projects/ProjectBrainweaver/qtpvdbnewarrow.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbnodeitem.h Projects/Projects/ProjectBrainweaver/qtpvdbnodeitem.h<br/>
cp ../../Projects/ProjectBrainweaver/PicArrow14x14.png Projects/Projects/ProjectBrainweaver/PicArrow14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/PicArrow28x28.png Projects/Projects/ProjectBrainweaver/PicArrow28x28.png<br/>
cp ../../Projects/ProjectBrainweaver/PicGreen14x14.png Projects/Projects/ProjectBrainweaver/PicGreen14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/PicWhite14x14.png Projects/Projects/ProjectBrainweaver/PicWhite14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/pvdbedgefactory.h Projects/Projects/ProjectBrainweaver/pvdbedgefactory.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbfilefactory.h Projects/Projects/ProjectBrainweaver/pvdbfilefactory.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbnodefactory.h Projects/Projects/ProjectBrainweaver/pvdbnodefactory.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbdisplay.cpp Projects/Projects/ProjectBrainweaver/qtpvdbdisplay.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtoolsitem.h Projects/Projects/ProjectBrainweaver/qtpvdbtoolsitem.h<br/>
cp ../../Classes/CppQtPathArrowItem/qtpatharrowitem.cpp Projects/Classes/CppQtPathArrowItem/qtpatharrowitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/BrainweaverTest.py Projects/Projects/ProjectBrainweaver/BrainweaverTest.py<br/>
cp ../../Projects/ProjectBrainweaver/ConceptMapEdit.png Projects/Projects/ProjectBrainweaver/ConceptMapEdit.png<br/>
cp ../../Projects/ProjectBrainweaver/PicOrange14x14.png Projects/Projects/ProjectBrainweaver/PicOrange14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/PicPurple14x14.png Projects/Projects/ProjectBrainweaver/PicPurple14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/PicYellow14x14.png Projects/Projects/ProjectBrainweaver/PicYellow14x14.png<br/>
cp ../../Projects/ProjectBrainweaver/doxygen_config.txt Projects/Projects/ProjectBrainweaver/doxygen_config.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbcompetency.cpp Projects/Projects/ProjectBrainweaver/pvdbcompetency.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconceptmap.cpp Projects/Projects/ProjectBrainweaver/pvdbconceptmap.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbmenudialog.cpp Projects/Projects/ProjectBrainweaver/pvdbmenudialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtmain_student.cpp Projects/Projects/ProjectBrainweaver/qtmain_student.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcompetency.h Projects/Projects/ProjectBrainweaver/qtpvdbcompetency.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbedgeitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbedgeitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbmenudialog.h Projects/Projects/ProjectBrainweaver/qtpvdbmenudialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbnewarrow.cpp Projects/Projects/ProjectBrainweaver/qtpvdbnewarrow.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbnodeitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbnodeitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbedgefactory.cpp Projects/Projects/ProjectBrainweaver/pvdbedgefactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbfilefactory.cpp Projects/Projects/ProjectBrainweaver/pvdbfilefactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbnodefactory.cpp Projects/Projects/ProjectBrainweaver/pvdbnodefactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtmain_assessor.cpp Projects/Projects/ProjectBrainweaver/qtmain_assessor.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbaboutdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbaboutdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptitem.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbmenudialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbmenudialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtoolsitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtoolsitem.cpp<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/Licence.txt Projects/Tools/ToolTestQtRoundedEditRectItem/Licence.txt<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/Licence.txt Projects/Tools/ToolTestQtRoundedTextRectItem/Licence.txt<br/>
cp ../../Classes/CppQtRoundedRectItem/qtroundedrectitem.h Projects/Classes/CppQtRoundedRectItem/qtroundedrectitem.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbclusterfactory.h Projects/Projects/ProjectBrainweaver/pvdbclusterfactory.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconceptfactory.h Projects/Projects/ProjectBrainweaver/pvdbconceptfactory.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexamplefactory.h Projects/Projects/ProjectBrainweaver/pvdbexamplefactory.h<br/>
cp ../../Projects/ProjectBrainweaver/qtmain_developer.cpp Projects/Projects/ProjectBrainweaver/qtmain_developer.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbbrushfactory.h Projects/Projects/ProjectBrainweaver/qtpvdbbrushfactory.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcompetency.cpp Projects/Projects/ProjectBrainweaver/qtpvdbcompetency.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbexamplesitem.h Projects/Projects/ProjectBrainweaver/qtpvdbexamplesitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbmenudialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbmenudialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbratingdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbratingdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/test_pvdbcluster.cpp Projects/Projects/ProjectBrainweaver/test_pvdbcluster.cpp<br/>
cp ../../Projects/ProjectBrainweaver/test_pvdbconcept.cpp Projects/Projects/ProjectBrainweaver/test_pvdbconcept.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexamplesfactory.h Projects/Projects/ProjectBrainweaver/pvdbexamplesfactory.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbaboutdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbaboutdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbclusterdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbclusterdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbclusterwidget.h Projects/Projects/ProjectBrainweaver/qtpvdbclusterwidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbratingdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbratingdialog.ui<br/>
cp ../../Classes/CppQtRoundedRectItem/qtroundedrectitem.cpp Projects/Classes/CppQtRoundedRectItem/qtroundedrectitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbclusterfactory.cpp Projects/Projects/ProjectBrainweaver/pvdbclusterfactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconceptfactory.cpp Projects/Projects/ProjectBrainweaver/pvdbconceptfactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexamplefactory.cpp Projects/Projects/ProjectBrainweaver/pvdbexamplefactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbbrushfactory.cpp Projects/Projects/ProjectBrainweaver/qtpvdbbrushfactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcenternodeitem.h Projects/Projects/ProjectBrainweaver/qtpvdbcenternodeitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbclusterdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbclusterdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapitem.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbexamplesitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbexamplesitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdboverviewdialog.h Projects/Projects/ProjectBrainweaver/qtpvdboverviewdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdboverviewwidget.h Projects/Projects/ProjectBrainweaver/qtpvdboverviewwidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbratingdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbratingdialog.cpp<br/>
cp ../../Classes/CppQtLabeledQuadBezierArrowItem/Licence.txt Projects/Classes/CppQtLabeledQuadBezierArrowItem/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconceptmapfactory.h Projects/Projects/ProjectBrainweaver/pvdbconceptmapfactory.h<br/>
cp ../../Projects/ProjectBrainweaver/pvdbexamplesfactory.cpp Projects/Projects/ProjectBrainweaver/pvdbexamplesfactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbclusterdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbclusterdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbclusterwidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdbclusterwidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbeditconceptitem.h Projects/Projects/ProjectBrainweaver/qtpvdbeditconceptitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbitemhighlighter.h Projects/Projects/ProjectBrainweaver/qtpvdbitemhighlighter.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptitem.h Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbviewfilesdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbviewfilesdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbviewtestsdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbviewtestsdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/test_pvdbconceptmap.cpp Projects/Projects/ProjectBrainweaver/test_pvdbconceptmap.cpp<br/>
cp ../../Tools/ToolStyleSheetSetter/ToolStyleSheetSetter.qrc Projects/Tools/ToolStyleSheetSetter/ToolStyleSheetSetter.qrc<br/>
cp ../../Tools/ToolTestQtArrowItems/ToolTestQtArrowItems.png Projects/Tools/ToolTestQtArrowItems/ToolTestQtArrowItems.png<br/>
cp ../../Tools/ToolTestQtArrowItems/ToolTestQtArrowItems.qrc Projects/Tools/ToolTestQtArrowItems/ToolTestQtArrowItems.qrc<br/>
cp ../../Tools/ToolTestQtArrowItems/crosscompiletowindows.sh Projects/Tools/ToolTestQtArrowItems/crosscompiletowindows.sh<br/>
cp ../../Classes/CppQtHideAndShowDialog/qthideandshowdialog.h Projects/Classes/CppQtHideAndShowDialog/qthideandshowdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/crosscompiletowindows.sh Projects/Projects/ProjectBrainweaver/crosscompiletowindows.sh<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcenternodeitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbcenternodeitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapwidget.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapwidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdboverviewdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdboverviewdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdboverviewwidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdboverviewwidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbviewfilesdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbviewfilesdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbviewtestsdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbviewtestsdialog.ui<br/>
cp ../../Classes/CppQtKeyboardFriendlyGraphicsView/Licence.txt Projects/Classes/CppQtKeyboardFriendlyGraphicsView/Licence.txt<br/>
cp ../../Projects/ProjectBrainweaver/pvdbconceptmapfactory.cpp Projects/Projects/ProjectBrainweaver/pvdbconceptmapfactory.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconcepteditdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbconcepteditdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbeditconceptitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbeditconceptitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbitemhighlighter.cpp Projects/Projects/ProjectBrainweaver/qtpvdbitemhighlighter.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbprintratingdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbprintratingdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbstudentmenudialog.h Projects/Projects/ProjectBrainweaver/qtpvdbstudentmenudialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbviewfilesdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbviewfilesdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbviewtestsdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbviewtestsdialog.cpp<br/>
cp ../../Classes/CppQtHideAndShowDialog/qthideandshowdialog.cpp Projects/Classes/CppQtHideAndShowDialog/qthideandshowdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbassessormenudialog.h Projects/Projects/ProjectBrainweaver/qtpvdbassessormenudialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconcepteditdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbconcepteditdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapwidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapwidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbdisplayconceptitem.h Projects/Projects/ProjectBrainweaver/qtpvdbdisplayconceptitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbprintratingdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbprintratingdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbratedconceptwidget.h Projects/Projects/ProjectBrainweaver/qtpvdbratedconceptwidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateexamplesdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbrateexamplesdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbstudentmenudialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbstudentmenudialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestedgeitemdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestedgeitemdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestnodeitemdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestnodeitemdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbassessormenudialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbassessormenudialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconcepteditdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconcepteditdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbprintratingdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbprintratingdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbratedconceptwidget.ui Projects/Projects/ProjectBrainweaver/qtpvdbratedconceptwidget.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateexamplesdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbrateexamplesdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbstudentmenudialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbstudentmenudialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestedgeitemdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestedgeitemdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestnodeitemdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestnodeitemdialog.ui<br/>
cp ../../Tools/ToolTestQtArrowItems/testqtarrowitemsmenudialog.h Projects/Tools/ToolTestQtArrowItems/testqtarrowitemsmenudialog.h<br/>
cp ../../Classes/CppQtQuadBezierArrowItem/qtquadbezierarrowitem.h Projects/Classes/CppQtQuadBezierArrowItem/qtquadbezierarrowitem.h<br/>
cp ../../Classes/CppQtRoundedEditRectItem/qtroundededitrectitem.h Projects/Classes/CppQtRoundedEditRectItem/qtroundededitrectitem.h<br/>
cp ../../Classes/CppQtRoundedTextRectItem/qtroundedtextrectitem.h Projects/Classes/CppQtRoundedTextRectItem/qtroundedtextrectitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbassessormenudialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbassessormenudialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapeditwidget.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapeditwidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapratewidget.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapratewidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbdisplayconceptitem.cpp Projects/Projects/ProjectBrainweaver/qtpvdbdisplayconceptitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptmapdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptmapdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbratedconceptwidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdbratedconceptwidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateexamplesdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbrateexamplesdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestedgeitemdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestedgeitemdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestnodeitemdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestnodeitemdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/ProjectBrainweaverStudent.pro Projects/Projects/ProjectBrainweaver/ProjectBrainweaverStudent.pro<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbprintconceptmapdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbprintconceptmapdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptmapdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptmapdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconcepttallymodel.h Projects/Projects/ProjectBrainweaver/qtpvdbrateconcepttallymodel.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptitemdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptitemdialog.h<br/>
cp ../../Tools/ToolTestQtArrowItems/qttestqtarrowitemsmaindialog.h Projects/Tools/ToolTestQtArrowItems/qttestqtarrowitemsmaindialog.h<br/>
cp ../../Tools/ToolTestQtArrowItems/qttestqtarrowitemsmenudialog.h Projects/Tools/ToolTestQtArrowItems/qttestqtarrowitemsmenudialog.h<br/>
cp ../../Tools/ToolTestQtArrowItems/testqtarrowitemsmenudialog.cpp Projects/Tools/ToolTestQtArrowItems/testqtarrowitemsmenudialog.cpp<br/>
cp ../../Classes/CppQtQuadBezierArrowItem/qtquadbezierarrowitem.cpp Projects/Classes/CppQtQuadBezierArrowItem/qtquadbezierarrowitem.cpp<br/>
cp ../../Classes/CppQtRoundedEditRectItem/qtroundededitrectitem.cpp Projects/Classes/CppQtRoundedEditRectItem/qtroundededitrectitem.cpp<br/>
cp ../../Classes/CppQtRoundedTextRectItem/qtroundedtextrectitem.cpp Projects/Classes/CppQtRoundedTextRectItem/qtroundedtextrectitem.cpp<br/>
cp ../../Projects/ProjectBrainweaver/ProjectBrainweaverAssessor.pro Projects/Projects/ProjectBrainweaver/ProjectBrainweaverAssessor.pro<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapeditwidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapeditwidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapratewidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapratewidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbprintconceptmapdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbprintconceptmapdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconceptmapdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbrateconceptmapdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconcepttallydialog.h Projects/Projects/ProjectBrainweaver/qtpvdbrateconcepttallydialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptitemdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptitemdialog.ui<br/>
cp ../../Tools/ToolTestQtArrowItems/qttestqtarrowitemsmaindialog.ui Projects/Tools/ToolTestQtArrowItems/qttestqtarrowitemsmaindialog.ui<br/>
cp ../../Tools/ToolTestQtArrowItems/qttestqtarrowitemsmenudialog.ui Projects/Tools/ToolTestQtArrowItems/qttestqtarrowitemsmenudialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/ProjectBrainweaverDeveloper.pro Projects/Projects/ProjectBrainweaver/ProjectBrainweaverDeveloper.pro<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapdisplaywidget.h Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapdisplaywidget.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbprintconceptmapdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbprintconceptmapdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconcepttallydialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbrateconcepttallydialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconcepttallymodel.cpp Projects/Projects/ProjectBrainweaver/qtpvdbrateconcepttallymodel.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptitemdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptitemdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/test_qtpvdbconceptmapdialog.cpp Projects/Projects/ProjectBrainweaver/test_qtpvdbconceptmapdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/test_qtpvdbconceptmapwidget.cpp Projects/Projects/ProjectBrainweaver/test_qtpvdbconceptmapwidget.cpp<br/>
cp ../../Tools/ToolStyleSheetSetter/toolstylesheetsettermaindialog.h Projects/Tools/ToolStyleSheetSetter/toolstylesheetsettermaindialog.h<br/>
cp ../../Tools/ToolTestQtArrowItems/qttestqtarrowitemsmaindialog.cpp Projects/Tools/ToolTestQtArrowItems/qttestqtarrowitemsmaindialog.cpp<br/>
cp ../../Tools/ToolTestQtArrowItems/qttestqtarrowitemsmenudialog.cpp Projects/Tools/ToolTestQtArrowItems/qttestqtarrowitemsmenudialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbrateconcepttallydialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbrateconcepttallydialog.cpp<br/>
cp ../../Tools/ToolStyleSheetSetter/toolstylesheetsettermaindialog.ui Projects/Tools/ToolStyleSheetSetter/toolstylesheetsettermaindialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbconceptmapdisplaywidget.cpp Projects/Projects/ProjectBrainweaver/qtpvdbconceptmapdisplaywidget.cpp<br/>
cp ../../Tools/ToolStyleSheetSetter/toolstylesheetsettermaindialog.cpp Projects/Tools/ToolStyleSheetSetter/toolstylesheetsettermaindialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.h Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbstudentstartcompletedialog.h Projects/Projects/ProjectBrainweaver/qtpvdbstudentstartcompletedialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbstudentstartcompletedialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbstudentstartcompletedialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/test_qtpvdbconceptmapeditwidget.cpp Projects/Projects/ProjectBrainweaver/test_qtpvdbconceptmapeditwidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/test_qtpvdbconceptmapratewidget.cpp Projects/Projects/ProjectBrainweaver/test_qtpvdbconceptmapratewidget.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentmenudialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbstudentstartcompletedialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbstudentstartcompletedialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.h Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapeditwidgetdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapeditwidgetdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapratewidgetdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapratewidgetdialog.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentpartialdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapeditwidgetdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapeditwidgetdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapratewidgetdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapratewidgetdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestcreatesubconceptmapdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbcreateassessmentcompletedialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapeditwidgetdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapeditwidgetdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapratewidgetdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapratewidgetdialog.cpp<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapdisplaywidgetdialog.h Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapdisplaywidgetdialog.h<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/ToolTestQtRoundedEditRectItem.qrc Projects/Tools/ToolTestQtRoundedEditRectItem/ToolTestQtRoundedEditRectItem.qrc<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/ToolTestQtRoundedTextRectItem.png Projects/Tools/ToolTestQtRoundedTextRectItem/ToolTestQtRoundedTextRectItem.png<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/ToolTestQtRoundedTextRectItem.qrc Projects/Tools/ToolTestQtRoundedTextRectItem/ToolTestQtRoundedTextRectItem.qrc<br/>
cp ../../Classes/CppQtLabeledQuadBezierArrowItem/qtlabeledquadbezierarrowitem.h Projects/Classes/CppQtLabeledQuadBezierArrowItem/qtlabeledquadbezierarrowitem.h<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapdisplaywidgetdialog.ui Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapdisplaywidgetdialog.ui<br/>
cp ../../Projects/ProjectBrainweaver/qtpvdbtestconceptmapdisplaywidgetdialog.cpp Projects/Projects/ProjectBrainweaver/qtpvdbtestconceptmapdisplaywidgetdialog.cpp<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemwidget.h Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemwidget.h<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemwidget.h Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemwidget.h<br/>
cp ../../Classes/CppQtLabeledQuadBezierArrowItem/qtlabeledquadbezierarrowitem.cpp Projects/Classes/CppQtLabeledQuadBezierArrowItem/qtlabeledquadbezierarrowitem.cpp<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemwidget.cpp Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemwidget.cpp<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/testqtroundededitrectitemmenudialog.h Projects/Tools/ToolTestQtRoundedEditRectItem/testqtroundededitrectitemmenudialog.h<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemwidget.cpp Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemwidget.cpp<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/testqtroundedtextrectitemmenudialog.h Projects/Tools/ToolTestQtRoundedTextRectItem/testqtroundedtextrectitemmenudialog.h<br/>
cp ../../Classes/CppQtKeyboardFriendlyGraphicsView/qtkeyboardfriendlygraphicsview.h Projects/Classes/CppQtKeyboardFriendlyGraphicsView/qtkeyboardfriendlygraphicsview.h<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmaindialog.h Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmaindialog.h<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmenudialog.h Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmenudialog.h<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/testqtroundededitrectitemmenudialog.cpp Projects/Tools/ToolTestQtRoundedEditRectItem/testqtroundededitrectitemmenudialog.cpp<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmaindialog.h Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmaindialog.h<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmenudialog.h Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmenudialog.h<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/testqtroundedtextrectitemmenudialog.cpp Projects/Tools/ToolTestQtRoundedTextRectItem/testqtroundedtextrectitemmenudialog.cpp<br/>
cp ../../Classes/CppQtKeyboardFriendlyGraphicsView/qtkeyboardfriendlygraphicsview.cpp Projects/Classes/CppQtKeyboardFriendlyGraphicsView/qtkeyboardfriendlygraphicsview.cpp<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmaindialog.ui Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmaindialog.ui<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmenudialog.ui Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmenudialog.ui<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmaindialog.ui Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmaindialog.ui<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmenudialog.ui Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmenudialog.ui<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmaindialog.cpp Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmaindialog.cpp<br/>
cp ../../Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmenudialog.cpp Projects/Tools/ToolTestQtRoundedEditRectItem/qttestqtroundededitrectitemmenudialog.cpp<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmaindialog.cpp Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmaindialog.cpp<br/>
cp ../../Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmenudialog.cpp Projects/Tools/ToolTestQtRoundedTextRectItem/qttestqtroundedtextrectitemmenudialog.cpp<br/>
<br/>
FILENAME="../../Projects/ProjectBrainweaverSource"<br/>
ZIP_FILENAME=$FILENAME".zip"<br/>
<br/>
echo "Compressing files"<br/>
<br/>
zip -r $FILENAME Projects<br/>
<br/>
echo "Cleaning up"<br/>
<br/>
echo "Emptying subfolders"<br/>
<br/>
rm Projects/Classes/CppQtKeyboardFriendlyGraphicsView/*.*<br/>
rm Projects/Classes/CppQtLabeledQuadBezierArrowItem/*.*<br/>
rm Projects/Tools/ToolTestQtRoundedTextRectItem/*.*<br/>
rm Projects/Tools/ToolTestQtRoundedEditRectItem/*.*<br/>
rm Projects/Classes/CppQtRoundedTextRectItem/*.*<br/>
rm Projects/Classes/CppQtRoundedEditRectItem/*.*<br/>
rm Projects/Classes/CppQtQuadBezierArrowItem/*.*<br/>
rm Projects/Classes/CppQtHideAndShowDialog/*.*<br/>
rm Projects/Classes/CppQtRoundedRectItem/*.*<br/>
rm Projects/Projects/ProjectBrainweaver/*.*<br/>
rm Projects/Tools/ToolTestQtArrowItems/*.*<br/>
rm Projects/Tools/ToolStyleSheetSetter/*.*<br/>
rm Projects/Classes/CppQtScopedDisable/*.*<br/>
rm Projects/Classes/CppQtPathArrowItem/*.*<br/>
rm Projects/Classes/CppFuzzy_equal_to/*.*<br/>
rm Projects/Classes/CppQtAboutDialog/*.*<br/>
rm Projects/Classes/CppQtArrowItem/*.*<br/>
rm Projects/Classes/CppLazy_init/*.*<br/>
rm Projects/Classes/CppTrace/*.*<br/>
rm Projects/Classes/CppAbout/*.*<br/>
rm Projects/Projects/*.*<br/>
rm Projects/Classes/*.*<br/>
rm Projects/Tools/*.*<br/>
rm Projects/*.*<br/>
rmdir Projects/Classes/CppQtKeyboardFriendlyGraphicsView<br/>
rmdir Projects/Classes/CppQtLabeledQuadBezierArrowItem<br/>
rmdir Projects/Tools/ToolTestQtRoundedTextRectItem<br/>
rmdir Projects/Tools/ToolTestQtRoundedEditRectItem<br/>
rmdir Projects/Classes/CppQtRoundedTextRectItem<br/>
rmdir Projects/Classes/CppQtRoundedEditRectItem<br/>
rmdir Projects/Classes/CppQtQuadBezierArrowItem<br/>
rmdir Projects/Classes/CppQtHideAndShowDialog<br/>
rmdir Projects/Classes/CppQtRoundedRectItem<br/>
rmdir Projects/Projects/ProjectBrainweaver<br/>
rmdir Projects/Tools/ToolTestQtArrowItems<br/>
rmdir Projects/Tools/ToolStyleSheetSetter<br/>
rmdir Projects/Classes/CppQtScopedDisable<br/>
rmdir Projects/Classes/CppQtPathArrowItem<br/>
rmdir Projects/Classes/CppFuzzy_equal_to<br/>
rmdir Projects/Classes/CppQtAboutDialog<br/>
rmdir Projects/Classes/CppQtArrowItem<br/>
rmdir Projects/Classes/CppLazy_init<br/>
rmdir Projects/Classes/CppTrace<br/>
rmdir Projects/Classes/CppAbout<br/>
rmdir Projects/Projects<br/>
rmdir Projects/Classes<br/>
rmdir Projects/Tools<br/>
rmdir Projects<br/>
<br/>
echo "Done"<br/>
<br/>
# QtCreatorProFileZipScript, version 1.0<br/>
# Copyright (C) 2013 Richel Bilderbeek<br/>
# Programmed on the 19th of May 2013<br/>
# by Richel Bilderbeek<br/>
# <br/>
# QtCreatorProFileZipScript can be downloaded from http://www.richelbilderbeek.nl/CppQtCreatorProFileZipScript.htm<br/>
# Licenced under GPL 3.0<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
