 
<title>Answer of exercise #4: Reading from a std::vector safely</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>C++ Answer of exercise #4: Reading from a std::vector safely</o:Subject>
  <o:Author>Richel Bilderbeek</o:Author>
  <o:Keywords>C++ Richel Bilderbeek Answer of exercise #4: Reading from a std::vector safely</o:Keywords>
  <o:Description>From http://www.richelbilderbeek.nl</o:Description>
  <o:LastAuthor>Richel Bilderbeek</o:LastAuthor>
 </o:DocumentProperties>
</xml><![endif]-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Answer of exercise #4: Reading from a std::vector safely</title>
  <meta name="description" content="C++ Answer of exercise #4: Reading from a std::vector safely"/>
  <meta name="keywords" content="C++ Answer of exercise #4: Reading from a std::vector safely"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppExerciseReadingFromAvectorSafelyAnswer.htm">Answer of exercise #4: Reading from a std::vector safely</a></h1>
<p>&nbsp;</p>
<p>This is the answer of <a href="CppExerciseReadingFromAvectorSafely.htm">Exercise #4: Reading from a std::vector safely</a>.</p>
<p>&nbsp;</p>
<p>First, I start this answer with one of my favorite <a href="CppQuotes.htm">quotes</a>:</p>
<p>&nbsp;</p>

 

<p class=MsoNormal align=center style='text-align:center;border:none;
mso-border-alt:solid windowtext .5pt;padding:0in;mso-padding-alt:1.0pt 4.0pt 1.0pt 4.0pt'>  &nbsp;</p>

<p> Van mijn std::vector bestaat deze index
zeker.</p>

<p class=MsoNormal align=center style='text-align:center;border:none;
mso-border-alt:solid windowtext .5pt;padding:0in;mso-padding-alt:1.0pt 4.0pt 1.0pt 4.0pt'>  &nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;border:none;
mso-border-alt:solid windowtext .5pt;padding:0in;mso-padding-alt:1.0pt 4.0pt 1.0pt 4.0pt'> Many, many of my students
before an access violation</p>

<p class=MsoNormal align=center style='text-align:center;border:none;
mso-border-alt:solid windowtext .5pt;padding:0in;mso-padding-alt:1.0pt 4.0pt 1.0pt 4.0pt'>  &nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;border:none;
mso-border-alt:solid windowtext .5pt;padding:0in;mso-padding-alt:1.0pt 4.0pt 1.0pt 4.0pt'> Translation: I am sure that
this is a valid index in my std::vector</p>

<p class=MsoNormal align=center style='text-align:center;border:none;
mso-border-alt:solid windowtext .5pt;padding:0in;mso-padding-alt:1.0pt 4.0pt 1.0pt 4.0pt'>  &nbsp;</p>

</div>

<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;<a href="CppVectorH.htm">vector</a>&gt;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;<a href="CppCstdlibH.htm">cstdlib</a>&gt;</p>

<p>&nbsp;</p>

<p><b> <a href="CppInt.htm">int</a> </b>  <a href="CppMain.htm">main</a>()</p>

<p>{</p>

<p>
 <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;
v;</p>

<p>&nbsp;</p>

<p>
 //Lots of code #0</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>
maxIndex = v.size();</p>

<p>&nbsp;</p>

<p>
 //Lots of code #1</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>
index = <a href="CppRand.htm">std::rand</a>() % maxIndex; //Draw a random index</p>

<p>&nbsp;</p>

<p>
 //Lots of code #2</p>

<p>&nbsp;</p>

<p>
 v[index] = 0;</p>

<p>&nbsp;</p>

<p>
 //Lots of code #3</p>

<p>}</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>

<h2>0) What problem might occur?</h2>

<p>&nbsp;</p>

<p>The
problem that might occur, as hinted by the title of the exercise, is in the
following line:</p>

<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p>
 v[index] = 0;</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>

<p>It might be true that the variable 'index' is not a valid index of <a href="CppVector.htm">std::vector</a> 'v':</p>
<p>#0) at the time 'maxIndex' was defined, the <a href="CppVector.htm">std::vector</a> 'v' might have changed in size</p>
<p>#1) at the time 'index' was defined, the <a href="CppVector.htm">std::vector</a> 'v' might have changed in size</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>1) How can you prevent this?</h2>
<p>&nbsp;</p>
<p>You assume that 'index' is a valid index of <a href="CppVector.htm">std::vector</a> 'v'.</p>
<p>&nbsp;</p>
<p>So use <a href="CppAssert.htm">assert</a>:</p>
<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p><a href="CppAssert.htm">assert</a>(index
&gt;=0 &amp;&amp; index &lt; static_cast&lt;int&gt;(v.size() );</p>

<p>v[index] = 0;</p>

<p>&nbsp;</p>

</div>


<p>&nbsp;</p>
<h2>Note</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Writing asserts for each <a href="CppVector.htm">std::vector</a> access is not necessary.</p>
<p>&nbsp;</p>
<p>If the <a href="CppVector.htm">std::vector</a> in this exercise was a <a
href="CppConst.htm">const</a> <a href="CppVector.htm">std::vector</a>, you can
be 100% sure that it did not change in size, so you can be sure the <a
href="CppVector.htm">std::vector</a> access is valid.</p>
<p>&nbsp;</p>
<p>If short pieces of code (IMHO: 5 lines) in which you do not see an change of <a
href="CppVector.htm">std::vector</a>'s size, you can be 99,9% sure that <a
href="CppVector.htm">std::vector</a> access is valid. Be aware that this short
piece of code can expand in time, decreasing the certainty that the access is
valid.</p>
<p>&nbsp;</p>
<p>If your program gives an access violation (perhaps in the form of <a
href="CppRuntimeErrorExternalExceptionEefface.htm">external exception EEFFACE</a>),
it will always be time-inexpensive to add <a href="CppAssert.htm">assert</a>.
And you might have found the problem. To again <a href="CppQuotes.htm">quote</a>
many of my students 'I am sure that this is a valid index in my std::vector'.
How often have they been wrong...</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>

