<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>ShinyButton</title>
  <meta name="description" content="C++ ShinyButton"/>
  <meta name="keywords" content="C++ ShinyButton code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppShinyButton.htm">ShinyButton</a></h1>
<p>&nbsp;</p>
<!-- This text is generated by CodeToHtml -->
<p><img src="PicStl.png" alt="STL"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppShinyButton.htm">ShinyButton</a> is a <a href="CppClass.htm">class</a> for a shiny button.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>shinybutton.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="shinybutton.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppShinyButton.html">ShinyButton</a>, toggle button <b><a href="CppClass.html">class</a></b><br/>
Copyright (C) 2011 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppShinyButton.html">CppShinyButton</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.html">#ifndef</a> SHINYBUTTON_H<br/>
<a href="CppDefine.html">#define</a> SHINYBUTTON_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppVectorH.html">vector</a>&gt;<br/>
<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.html">-Weffc++</a>"<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.html">typedef</a></b>s"<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/checked_delete<a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppSignals2.html">signals2</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppShinyButton.html">ShinyButton</a> is a <b><a href="CppClass.html">class</a></b> <b><a href="CppFor.htm">for</a></b> a toggle button<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppShinyButton.html">ShinyButton</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.html">explicit</a></b> <a href="CppShinyButton.html">ShinyButton</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> color,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> gradient,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; text <a href="CppOperatorAssign.htm">=</a> "");<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a> color (the color in the middle) of the <a href="CppShinyButton.html">ShinyButton</a><br/>
&nbsp;&nbsp;<b><a href="CppDouble.html">double</a></b> GetColor() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_color; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the change of gradient on the <a href="CppShinyButton.html">ShinyButton</a>.<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The difference in color between the left and right of the <a href="CppShinyButton.html">ShinyButton</a><br/>
&nbsp;&nbsp;<b><a href="CppDouble.html">double</a></b> GetGradient() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_gradient; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; GetText() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_text; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the <a href="CppShinyButton.html">ShinyButton</a> its color<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetColor(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> color,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> gradient);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the <a href="CppShinyButton.html">ShinyButton</a> its text<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetText(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; text);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppSignal.html">signal</a> that is <a href="CppEmit.html">emitted</a> when <a href="CppShinyButton.html">ShinyButton</a> changes color<br/>
&nbsp;&nbsp;<b><a href="CppMutable.html">mutable</a></b> <a href="CppBoostSignal.html">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_color_changed;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppSignal.html">signal</a> that is <a href="CppEmit.html">emitted</a> when <a href="CppShinyButton.html">ShinyButton</a> changes color<br/>
&nbsp;&nbsp;<b><a href="CppMutable.html">mutable</a></b> <a href="CppBoostSignal.html">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_text_changed;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppShinyButton.html">ShinyButton</a> can only be deleted by <a href="CppBoost.html">Boost</a> <a href="CppSmartPointer.html">smart pointer</a>s<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.html">virtual</a></b> ~<a href="CppShinyButton.html">ShinyButton</a>() {}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppShinyButton.html">ShinyButton</a> can only be deleted by <a href="CppBoost.html">Boost</a> <a href="CppSmartPointer.html">smart pointer</a>s<br/>
&nbsp;&nbsp;<b><a href="CppFriend.html">friend</a></b> <b><a href="CppVoid.htm">void</a></b> <a href="CppChecked_delete.html">boost::checked_delete</a>&lt;&gt;(<a href="CppShinyButton.html">ShinyButton</a>*);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/\brief<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a> color of the <a href="CppShinyButton.html">ShinyButton</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/m_color denotes the fraction [0.0,1.0] on the <a href="CppRainbow.html">rainbow</a>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/0.0 <a href="CppOperatorAssign.htm">=</a> red, 1.0 <a href="CppOperatorAssign.htm">=</a> magenta<br/>
&nbsp;&nbsp;<b><a href="CppDouble.html">double</a></b> m_color;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/\brief<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The change of gradient on the <a href="CppShinyButton.html">ShinyButton</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Gradient goes from [m_color-(0.5*m_gradient),m_color+(0.5*m_gradient)]<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/0.0 <a href="CppOperatorAssign.htm">=</a> no gradient <a href="CppOperatorAssign.htm">=</a> a single color<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/1.0 <a href="CppOperatorAssign.htm">=</a> show the entire <a href="CppRainbow.html">rainbow</a> with m_color in the middle<br/>
&nbsp;&nbsp;<b><a href="CppDouble.html">double</a></b> m_gradient;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The text displayed by the <a href="CppShinyButton.html">ShinyButton</a><br/>
&nbsp;&nbsp;<a href="CppString.html">std::string</a> m_text;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFriend.html">friend</a></b> <a href="CppOstream.html">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.html">operator&lt;&lt;</a></b>(<a href="CppOstream.html">std::ostream</a>&amp; os, <b><a href="CppConst.html">const</a></b> <a href="CppShinyButton.html">ShinyButton</a>&amp; button);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPublic.html">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> Get<a href="CppVersion.html">Version</a>();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; Get<a href="CppVersion.html">Version</a>History();<br/>
};<br/>
<br/>
<a href="CppOstream.html">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.html">operator&lt;&lt;</a></b>(<a href="CppOstream.html">std::ostream</a>&amp; os, <b><a href="CppConst.html">const</a></b> <a href="CppShinyButton.html">ShinyButton</a>&amp; button);<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> SHINYBUTTON_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>shinybutton.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="shinybutton.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppShinyButton.html">ShinyButton</a>, toggle button <b><a href="CppClass.html">class</a></b><br/>
Copyright (C) 2011 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppShinyButton.html">CppShinyButton</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.html">-Weffc++</a>"<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.html">typedef</a></b>s"<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppShinyButton.html">shinybutton</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCassertH.html">cassert</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCmathH.html">cmath</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> "<a href="CppTrace.html">trace</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppShinyButton.html">ShinyButton</a>::<a href="CppShinyButton.html">ShinyButton</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> color,<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> gradient,<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; text)<br/>
&nbsp;&nbsp;: m_signal_color_changed{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_text_changed{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_color(color),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_gradient(gradient),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text(text)<br/>
{<br/>
<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppShinyButton.html">ShinyButton</a>::Get<a href="CppVersion.html">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> "1.0";<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppShinyButton.html">ShinyButton</a>::Get<a href="CppVersion.html">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-09-21: <a href="CppVersion.html">Version</a> 1.0: initial <a href="CppVersion.html">version</a>"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppShinyButton.html">ShinyButton</a>::SetColor(<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> color,<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> gradient)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (color <a href="CppOperatorNotEqual.htm">!=</a> m_color <a href="CppOperatorLogicalOr.htm">||</a> gradient <a href="CppOperatorNotEqual.htm">!=</a> m_gradient)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_color <a href="CppOperatorAssign.htm">=</a> color;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_gradient <a href="CppOperatorAssign.htm">=</a> gradient;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_color_changed();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppShinyButton.html">ShinyButton</a>::SetText(<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; text)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (text <a href="CppOperatorNotEqual.htm">!=</a> m_text)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_text <a href="CppOperatorAssign.htm">=</a> text;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_text_changed();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<a href="CppOstream.html">std::ostream</a>&amp; <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorStreamOut.html">operator&lt;&lt;</a></b>(<a href="CppOstream.html">std::ostream</a>&amp; os, <b><a href="CppConst.html">const</a></b> <a href="CppShinyButton.html">ShinyButton</a>&amp; button)<br/>
{<br/>
&nbsp;&nbsp;os<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "&lt;<a href="CppShinyButton.html">ShinyButton</a>&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "&lt;color&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> button.m_color<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "&lt;/color&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "&lt;gradient&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> button.m_gradient<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "&lt;/gradient&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "&lt;text&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> button.m_text<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "&lt;/text&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "&lt;/<a href="CppShinyButton.html">ShinyButton</a>&gt;";<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> os;<br/>
<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
