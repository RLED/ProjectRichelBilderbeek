<title>WideToStr</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>C++ Code Snippet WideToStr</o:Subject>
  <o:Author>Richel Bilderbeek</o:Author>
 </o:DocumentProperties>
</xml><![endif]-->
 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>WideToStr</title>
  <meta name="description" content="C++ WideToStr"/>
  <meta name="keywords" content="C++ WideToStr"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppWideToStr.htm">WideToStr</a></h1>
<p>Converts a WideString to a std::string.</p>
<p>* <a href="CppWideToStr.txt">View the code of 'WideToStr' in plain text</a>.</p>
<p>&nbsp;</p>

 

<p>#include &lt;string&gt;</p>

<p>&nbsp;</p>

<p>//From
http://www.richelbilderbeek.nl/CppWideToStr.htm</p>

<p>std::string WideToStr(<b>const</b>
WideString&amp; s)</p>

<p>{</p>

<p>
 <b>const</b> AnsiString a(s);</p>

<p>
 <b>return</b> a.c_str();</p>

<p>}</p>

</div>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
