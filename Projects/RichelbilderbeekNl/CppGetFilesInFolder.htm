<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>GetFilesInFolder</title>
  <meta name="description" content="C++ GetFilesInFolder"/>
  <meta name="keywords" content="C++ GetFilesInFolder code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppGetFilesInFolder.htm">GetFilesInFolder</a></h1>
<p>&nbsp;</p>
<!-- This text is generated by CodeToHtml -->
<p><a href="CppGetFilesInFolder.htm">GetFilesInFolder</a> is a <a href="CppFileIo.htm">file I/O</a> <a href="CppCodeSnippets.htm">code snippet</a> to obtain all filenames in a folder.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppGetFilesInFolder.zip">Download the Qt Creator project 'CppGetFilesInFolder' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 13.04 (raring)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> unknown</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.7.3</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicBoost.png" alt="Boost"/> <a href="CppBoost.htm">Boost</a>: version 1.49</li>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.1.1 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.7.3</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: CppGetFilesInFolder.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="CppGetFilesInFolder.pro" border = "1"><tr><td><code>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; += core<br/>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -= gui<br/>
<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; += console<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; -= app_bundle<br/>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
<br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> +=&nbsp;&nbsp;<a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a> <a href="CppWerror.htm">-Werror</a><br/>
<br/>
#<br/>
#<br/>
# Boost<br/>
#<br/>
#<br/>
<br/>
unix {<br/>
&nbsp;&nbsp;message(Unix dynamic link to Boost)<br/>
<br/>
&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += \<br/>
&nbsp;&nbsp;<a href="CppDate_Time.htm">-lboost_date_time</a> \<br/>
&nbsp;&nbsp;<a href="CppFilesystem.htm">-lboost_filesystem</a> \<br/>
&nbsp;&nbsp;<a href="CppProgram_options.htm">-lboost_program_options</a> \<br/>
&nbsp;&nbsp;<a href="CppRegex.htm">-lboost_regex</a> \<br/>
&nbsp;&nbsp;<a href="CppBoostSignals.htm">-lboost_signals</a> \<br/>
&nbsp;&nbsp;<a href="CppSystem.htm">-lboost_system</a><br/>
}<br/>
<br/>
win32 {<br/>
<br/>
&nbsp;&nbsp;message(Windows dynamic link to Boost)<br/>
<br/>
&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0<br/>
<br/>
&nbsp;&nbsp;debug {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += e:/<a href="Projects.htm">Projects</a>/<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0/stage/lib/libboost_filesystem-mgw48-mt-d-1_54.a<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += e:/<a href="Projects.htm">Projects</a>/<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0/stage/lib/libboost_regex-mgw48-mt-d-1_54.a<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += e:/<a href="Projects.htm">Projects</a>/<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0/stage/lib/libboost_system-mgw48-mt-d-1_54.a<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;release {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += e:/<a href="Projects.htm">Projects</a>/<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0/stage/lib/libboost_filesystem-mgw48-mt-1_54.a<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += e:/<a href="Projects.htm">Projects</a>/<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0/stage/lib/libboost_regex-mgw48-mt-1_54.a<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQmakeLibs.htm">LIBS</a> += e:/<a href="Projects.htm">Projects</a>/<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0/stage/lib/libboost_system-mgw48-mt-1_54.a<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.html">#include</a> &lt;<a href="CppIostreamH.html">iostream</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppVectorH.html">vector</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/filesystem<a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQDir.htm">QDir</a>&gt;<br/>
<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetFilesInFolder.html">GetFilesInFolder</a>.html<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppGetFilesInFolder.html">GetFilesInFolder</a><a href="CppBoost.html">Boost</a>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; folder)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppFilesystem.html">boost::filesystem</a>::path my_folder<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppFilesystem.html">boost::filesystem</a>::system_complete(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppFilesystem.html">boost::filesystem</a>::path(folder));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppFilesystem.html">boost::filesystem</a>::is_directory(my_folder)) <b><a href="CppReturn.html">return</a></b> v;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppFilesystem.html">boost::filesystem</a>::directory_<a href="CppIterator.html">iterator</a> j;<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> ( <a href="CppFilesystem.html">boost::filesystem</a>::directory_<a href="CppIterator.html">iterator</a> i(my_folder);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i <a href="CppOperatorNotEqual.htm">!=</a> j;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a>+i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( <a href="CppFilesystem.html">boost::filesystem</a>::is_regular_file( i-&gt;status() ) )<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> i-&gt;path().filename().string();<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Works with older <a href="CppVersion.html">version</a> of <a href="CppBoost.html">Boost</a>.Filesystem:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> filename <a href="CppOperatorAssign.htm">=</a> i-&gt;path().filename();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(filename);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppGetFilesInFolder.html">GetFilesInFolder</a> creates a <a href="CppVector.html">std::vector</a> of filenames in a certain folder.<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetFilesInFolder.html">GetFilesInFolder</a>.html<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppGetFilesInFolder.html">GetFilesInFolder</a><a href="CppQt.htm">Qt</a>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; folder)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQDir.htm">QDir</a> dir(folder.c_str());<br/>
&nbsp;&nbsp;dir.setFilter(<a href="CppQDir.htm">QDir</a>::Files);<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppQFile.html">QFile</a>InfoList list <a href="CppOperatorAssign.htm">=</a> dir.entryInfoList();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppConvert.html">Convert</a> <a href="CppQFile.html">QFile</a>InfoList to <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; of filenames<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> size <a href="CppOperatorAssign.htm">=</a> list.size();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> 0; i <a href="CppOperatorNotEqual.htm">!=</a> size; <a href="CppOperatorPlus.htm">+</a>+i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> file_name <a href="CppOperatorAssign.htm">=</a> list.at(i).fileName().toStdString();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(file_name);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> folder <a href="CppOperatorAssign.htm">=</a> ".";<br/>
&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGetFilesInFolder.html">GetFilesInFolder</a><a href="CppBoost.html">Boost</a>(folder) <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> <a href="CppGetFilesInFolder.html">GetFilesInFolder</a><a href="CppQt.htm">Qt</a>(folder));<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppGetFilesInFolder.html">GetFilesInFolder</a><a href="CppBoost.html">Boost</a>(folder);<br/>
&nbsp;&nbsp;<a href="CppCopy.html">std::copy</a>(v.begin(),v.end(),<a href="CppOstream_iterator.html">std::ostream_iterator</a>&lt;<a href="CppString.html">std::string</a>&gt;(<a href="CppCout.html">std::cout</a>,"\n"));<br/>
&nbsp;&nbsp;<a href="CppCout.html">std::cout</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Number of files: " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> v.size() <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
}<br/>
<br/>
<a href="CppComment.htm">/*</a> Screen output:<br/>
<br/>
<a href="CppMakefile.html">Makefile</a><br/>
<a href="CppMakefile.html">Makefile</a>.<a href="CppDebug.html">Debug</a><br/>
<a href="CppMakefile.html">Makefile</a>.Release<br/>
Number of files: 3<br/>
<br/>
<a href="CppComment.htm">*/</a><br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
