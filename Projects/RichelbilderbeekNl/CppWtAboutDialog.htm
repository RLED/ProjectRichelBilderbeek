<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>WtAboutDialog</title>
  <meta name="description" content="C++ WtAboutDialog"/>
  <meta name="keywords" content="C++ WtAboutDialog code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppWtAboutDialog.htm">WtAboutDialog</a></h1>
<p>&nbsp;</p>
<!-- This text is generated by CodeToHtml -->
<p><img src="PicWt.png" alt="Wt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppWtAboutDialog.htm">WtAboutDialog</a> is a <a href="CppClass.htm">class</a> for
a <a href="CppWt.htm">Wt</a> dialog displaying the <a href="CppAbout.htm">About</a> <a href="CppClass.htm">class</a>.</p>
<p>&nbsp;</p>
<p><a href="CppWtAboutDialog.htm">WtAboutDialog</a> is used in nearly all my web applications.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>wtaboutdialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="wtaboutdialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppWtAboutDialog.html">WtAboutDialog</a>, <a href="CppWt.htm">Wt</a> dialog <b><a href="CppFor.htm">for</a></b> displaying the <a href="CppAbout.html">About</a> <b><a href="CppClass.html">class</a></b><br/>
Copyright (C) 2010 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppWtAboutDialog.html">CppWtAboutDialog</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.html">#ifndef</a> WTABOUTDIALOG_H<br/>
<a href="CppDefine.html">#define</a> WTABOUTDIALOG_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppVectorH.html">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppSignals2.html">signals2</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWContainerWidget.html">WContainerWidget</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPushButton.html">WPushButton</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> "<a href="CppAbout.html">about</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppWtAboutDialog.html">WtAboutDialog</a> : <b><a href="CppPublic.html">public</a></b> <a href="CppWContainerWidget.html">Wt::WContainerWidget</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.html">explicit</a></b> <a href="CppWtAboutDialog.html">WtAboutDialog</a>(<b><a href="CppConst.html">const</a></b> <a href="CppAbout.html">About</a>&amp; <a href="CppAbout.html">about</a>, <b><a href="CppConst.html">const</a></b> <b><a href="CppBool.htm">bool</a></b> display_close_button <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;<a href="CppWtAboutDialog.html">WtAboutDialog</a>(<b><a href="CppConst.html">const</a></b> <a href="CppWtAboutDialog.html">WtAboutDialog</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.html">delete</a></b>;<br/>
&nbsp;&nbsp;<a href="CppWtAboutDialog.html">WtAboutDialog</a>&amp; <b><a href="CppOperator.html">operator</a></b>=(<b><a href="CppConst.html">const</a></b> <a href="CppWtAboutDialog.html">WtAboutDialog</a>&amp;) <a href="CppOperatorAssign.htm">=</a> <b><a href="CppDelete.html">delete</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostSignal.html">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_close;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the <a href="CppVersion.html">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> Get<a href="CppVersion.html">Version</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the <a href="CppVersion.html">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; Get<a href="CppVersion.html">Version</a>History();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppGetWtVersion.html">GetWtVersion</a>();<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppWPushButton.html">Wt::WPushButton</a> * <b><a href="CppConst.html">const</a></b> m_button_close;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnClose();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> WTABOUTDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>wtaboutdialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="wtaboutdialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppWtAboutDialog.html">WtAboutDialog</a>, <a href="CppWt.htm">Wt</a> dialog <b><a href="CppFor.htm">for</a></b> displaying the <a href="CppAbout.html">About</a> <b><a href="CppClass.html">class</a></b><br/>
Copyright (C) 2010 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppWtAboutDialog.html">CppWtAboutDialog</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppBOOST_FOREACH.html">foreach</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWBreak.html">WBreak</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppWt.htm">Wt</a>/WConfig<a href="CppHeaderFile.htm">.h</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWLabel.html">WLabel</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWTextArea.html">WTextArea</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> "<a href="CppWtAboutDialog.html">wtaboutdialog</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppWtAboutDialog.html">WtAboutDialog</a>::<a href="CppWtAboutDialog.html">WtAboutDialog</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppAbout.html">About</a>&amp; about_original,<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppBool.htm">bool</a></b> display_close_button)<br/>
&nbsp;&nbsp;: m_signal_close{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_button_close(<b><a href="CppNew.htm">new</a></b> <a href="CppWPushButton.html">Wt::WPushButton</a>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.html">About</a> <a href="CppAbout.html">about</a> <a href="CppOperatorAssign.htm">=</a> about_original;<br/>
&nbsp;&nbsp;<a href="CppAbout.html">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.html">Library</a>("<a href="CppWt.htm">Wt</a> <a href="CppVersion.html">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppGetWtVersion.html">GetWtVersion</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.html">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.html">Library</a>("<a href="CppWtAboutDialog.html">WtAboutDialog</a> <a href="CppVersion.html">version</a>: " <a href="CppOperatorPlus.htm">+</a> Get<a href="CppVersion.html">Version</a>());<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setContentAlignment(<a href="CppWt.htm">Wt</a>::AlignCenter);<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> min_width <a href="CppOperatorAssign.htm">=</a> 800;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display the general <a href="CppAbout.html">about</a> text<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppAbout.html">about</a>.Create<a href="CppAbout.html">About</a>Text();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBOOST_FOREACH.html">BOOST_FOREACH</a>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> s,v)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppWLabel.html">Wt::WLabel</a>(s.c_str(),<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.html">Wt::WBreak</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.html">Wt::WBreak</a>);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display the libraries used text<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWTextArea.html">Wt::WTextArea</a> * text <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppWTextArea.html">Wt::WTextArea</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppAbout.html">about</a>.Create<a href="CppLibrary.html">Libraries</a>UsedText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBOOST_FOREACH.html">BOOST_FOREACH</a>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> t,v) {&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a>t; s<a href="CppOperatorPlusAssign.htm">+=</a>"\n"; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text-&gt;setText(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;text-&gt;setMinimumSize(min_width,100);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;text-&gt;setReadOnly(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(text);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.html">Wt::WBreak</a>);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display the <a href="CppVersion.html">version</a> history<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWTextArea.html">Wt::WTextArea</a> * text <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppWTextArea.html">Wt::WTextArea</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppAbout.html">about</a>.Create<a href="CppVersion.html">Version</a>History();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBOOST_FOREACH.html">BOOST_FOREACH</a>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> t,v) {&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a>t; s<a href="CppOperatorPlusAssign.htm">+=</a>"\n"; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text-&gt;setText(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;text-&gt;setMinimumSize(min_width,100);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;text-&gt;setReadOnly(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(text);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.html">Wt::WBreak</a>);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display the licence text<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppWTextArea.html">Wt::WTextArea</a> * text <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppWTextArea.html">Wt::WTextArea</a>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppAbout.html">about</a>.CreateLicenceText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBOOST_FOREACH.html">BOOST_FOREACH</a>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> t,v) {&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a>t; s<a href="CppOperatorPlusAssign.htm">+=</a>"\n"; }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text-&gt;setText(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;text-&gt;setMinimumSize(min_width,100);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;text-&gt;setReadOnly(<b><a href="CppTrue.htm">true</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(text);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.html">Wt::WBreak</a>);<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppString.html">std::string</a>("Source code built at ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(__DATE__)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(" ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(__TIME__);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppNew.htm">new</a></b> <a href="CppWLabel.html">Wt::WLabel</a>(s.c_str(),<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.html">Wt::WBreak</a>);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (display_close_button)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(<b><a href="CppNew.htm">new</a></b> <a href="CppWBreak.html">Wt::WBreak</a>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;addWidget(m_button_close);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_button_close-&gt;setText("Close");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_button_close-&gt;clicked().connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtAboutDialog.html">WtAboutDialog</a>::OnClose);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppWtAboutDialog.html">WtAboutDialog</a>::Get<a href="CppVersion.html">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> "1.5";<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppWtAboutDialog.html">WtAboutDialog</a>::Get<a href="CppVersion.html">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("2011-01-07: <a href="CppVersion.html">version</a> 1.0: initial <a href="CppVersion.html">version</a>");<br/>
&nbsp;&nbsp;v.push_back("2011-04-10: <a href="CppVersion.html">version</a> 1.1: displays <a href="CppVersion.html">version</a> numbers of <a href="CppWt.htm">Wt</a> and <a href="CppWtAboutDialog.html">WtAboutDialog</a>");<br/>
&nbsp;&nbsp;v.push_back("2011-04-15: <a href="CppVersion.html">version</a> 1.2: made displayal of Close button optional");<br/>
&nbsp;&nbsp;v.push_back("2011-05-24: <a href="CppVersion.html">version</a> 1.3: made all text areas read-only");<br/>
&nbsp;&nbsp;v.push_back("2011-05-30: <a href="CppVersion.html">version</a> 1.4: should build date and <a href="CppTime.htm">time</a>");<br/>
&nbsp;&nbsp;v.push_back("2011-06-26: <a href="CppVersion.html">version</a> 1.5: added newline <b><a href="CppFor.htm">for</a></b> displaying build date and <a href="CppTime.htm">time</a>");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppGetWtVersion.html">GetWtVersion</a> <a href="CppReturn.html">returns</a> the <a href="CppVersion.html">version</a> of the currently installed <a href="CppWt.htm">Wt</a> <a href="CppLibrary.html">library</a><br/>
<a href="CppComment.htm">///</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetWtVersion.html">GetWtVersion</a>.html<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppWtAboutDialog.html">WtAboutDialog</a>::<a href="CppGetWtVersion.html">GetWtVersion</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> WT_VERSION_STR;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWtAboutDialog.html">WtAboutDialog</a>::OnClose()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppEmit.htm">emit</a></b> that <b><a href="CppThis.htm">this</a></b> dialog closes<br/>
&nbsp;&nbsp;m_signal_close();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
