 
<title>FindString</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>C++ Code Snippet</o:Subject>
  <o:Author>Richel Bilderbeek</o:Author>
  <o:Keywords>Richel Bilderbeek C++ Code Snippet FindString Find string std::string</o:Keywords>
  <o:LastAuthor>Richel</o:LastAuthor>
  <o:Revision>6</o:Revision>
  <o:TotalTime>109</o:TotalTime>
  <o:Created>2007-07-16T19:18:00Z</o:Created>
  <o:LastSaved>2007-07-29T15:17:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>101</o:Words>
  <o:Characters>577</o:Characters>
  <o:Lines>4</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>708</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
 

 

 

<p> Back to <a
href="index.htm">Richel Bilderbeek's homepage</a>.</p>

<p> Back to <a
href="CppCodeSnippets.htm">Richel Bilderbeek's Code Snippets</a>.</p>

<p>  &nbsp;</p>

<p>  &nbsp;</p>

<p>  &nbsp;</p>

<h1>FindString</h1>

<p>  &nbsp;</p>

<p> Find a std::string
in a std::string.</p>

<p>  &nbsp;</p>

<p> Code in
plain text can be found <a href="CppFindString.txt">here</a>.</p>

<p>  &nbsp;</p>

 

<p> #include &lt;cassert&gt;</p>

<p> #include &lt;string&gt;</p>

<p>  &nbsp;</p>

<p> int main ()</p>

<p> {</p>

<p>   
 const std::string searchme = &quot;BILDERBIKKEL WAS HERE&quot;;</p>

<p>   
 assert(searchme.find(&quot;BILDERBIKKEL&quot;) != std::string::npos);</p>

<p>   
 assert(searchme.find(&quot;RICHEL&quot;) == std::string::npos);</p>

<p> }</p>

</div>

<p>  &nbsp;</p>

<p>  &nbsp;</p>

<p>  &nbsp;</p>

<p> Back to <a
href="CppCodeSnippets.htm">Richel Bilderbeek's Code Snippets</a>.</p>

<p> Back to <a
href="index.htm">Richel Bilderbeek's homepage</a>.</p>

<p>  &nbsp;</p>

</div>

</body>

</html>
