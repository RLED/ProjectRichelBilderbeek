 
<title>FindString</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>C++ Code Snippet</o:Subject>
  <o:Author>Richel Bilderbeek</o:Author>
  <o:Keywords>Richel Bilderbeek C++ Code Snippet FindString Find string std::string</o:Keywords>
  <o:LastAuthor>Richel</o:LastAuthor>
  <o:Revision>6</o:Revision>
  <o:TotalTime>109</o:TotalTime>
  <o:Created>2007-07-16T19:18:00Z</o:Created>
  <o:LastSaved>2007-07-29T15:17:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>101</o:Words>
  <o:Characters>577</o:Characters>
  <o:Lines>4</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>708</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
 

 

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>FindString</title>
  <meta name="description" content="C++ FindString"/>
  <meta name="keywords" content="C++ FindString"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppFindString.htm">FindString</a></h1>
<p>&nbsp;</p>
<p>Find a std::string in a std::string.</p>
<p>&nbsp;</p>
<p>Code in plain text can be found <a href="CppFindString.txt">here</a>.</p>
<p>&nbsp;</p>
 

<p> #include &lt;cassert&gt;</p>

<p> #include &lt;string&gt;</p>

<p>  &nbsp;</p>

<p> int main ()</p>

<p> {</p>

<p>   
 const std::string searchme = &quot;BILDERBIKKEL WAS HERE&quot;;</p>

<p>   
 assert(searchme.find(&quot;BILDERBIKKEL&quot;) != std::string::npos);</p>

<p>   
 assert(searchme.find(&quot;RICHEL&quot;) == std::string::npos);</p>

<p> }</p>

</div>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
