<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>header file</title>
  <meta name="description" content="C++ header file"/>
  <meta name="keywords" content="C++ header file headers files .h h"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppHeaderFile.htm">Header file</a></h1>
<p>&nbsp;</p>
<p><a href="CppHeaderFile.htm">Header files</a> contain the <a href="CppDeclaration.htm">declarations</a> of <a href="CppFunction.htm">functions</a> and <a href="CppClass.htm">classes</a>.</p>
<p>&nbsp;</p>
<p><a href="CppHeaderFile.htm">Header files</a> commonly have the .h and .hpp filename extensions.</p>
<p>&nbsp;</p>
<p>To use a <a href="CppHeaderFile.htm">header file</a>, it must be <a href="CppInclude.htm">#included</a> in the source code.</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "Widget.h"<br/>
&nbsp;<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;Widget w;<br/>
&nbsp;&nbsp;<a href="CppCout.htm">std::cout</a> <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "Hello world" <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> <a href="CppEndl.htm">std::endl</a>;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>A complete collection of <a href="CppHeaderFile.htm">header files</a> is called a <a href="CppLibrary.htm">library</a>. The C++ standard <a href="CppLibrary.htm">library</a> is called the <a href="CppStl.htm">STL</a>.</p>
<p>&nbsp;</p>
<p>The combination of a <a href="CppHeaderFile.htm">header (.h) file</a> and an <a href="CppImplementationFile.htm">implementation (.cpp) file</a> is called a <a href="CppUnit.htm">unit</a>.</p>
<p>&nbsp;</p>
<p>Make <a href="CppHeaderFile.htm">header files</a> self-sufficient [1].</p>
<p>&nbsp;</p>
<p>Always write interal <a href="CppIncludeGuard.htm">#include guards</a> [2]. Never write external <a href="CppIncludeGuard.htm">#include guards</a> [2] (but
compare [8], which suggest to do write external #include guards).</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>What does and what does not belong in a header file</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="CppHeaderFile.zip">Download the Qt Creator project 'CppHeaderFile' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>From [5]:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>Code copied from:<br/>
<a href="CppComment.htm">//</a> * John Lakos. Large-Scale <a href="Cpp.htm">C++</a> Software Design. 1996. ISBN: 0-201-63362-0. Chapter 1.1.3, Figure 1-3, page 28.<br/>
<br/>
<a href="CppComment.htm">//</a>radio.h<br/>
<a href="CppIfndef.htm">#ifndef</a> INCLUDED_RADIO<br/>
<a href="CppDefine.htm">#define</a> INCLUDED_RADIO<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> z;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a> illegal: <b><a href="CppExtern.htm">extern</a></b>al data <a href="CppDefinition.htm">definition</a><br/>
<b><a href="CppExtern.htm">extern</a></b> <b><a href="CppInt.htm">int</a></b> LENGTH <a href="CppOperatorAssign.htm">=</a> 10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">//</a> illegal: <b><a href="CppExtern.htm">extern</a></b>al data <a href="CppDefinition.htm">definition</a><br/>
<b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b> WIDTH <a href="CppOperatorAssign.htm">=</a> 5;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a> avoid: constant data <a href="CppDefinition.htm">definition</a><br/>
<b><a href="CppStatic.htm">static</a></b> <b><a href="CppInt.htm">int</a></b> y;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">//</a> avoid: <b><a href="CppStatic.htm">static</a></b> data <a href="CppDefinition.htm">definition</a><br/>
<b><a href="CppStatic.htm">static</a></b> <b><a href="CppVoid.htm">void</a></b> func() {<a href="CppComment.htm">/*</a>...<a href="CppComment.htm">*/</a>}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a> avoid: <b><a href="CppStatic.htm">static</a></b> <a href="CppFunction.htm">function</a> <a href="CppDefinition.htm">definition</a><br/>
<br/>
<b><a href="CppClass.htm">class</a></b> Radio<br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppInt.htm">int</a></b> s_count;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">//</a> fine: <b><a href="CppStatic.htm">static</a></b> member <a href="CppDeclaration.htm">declaration</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> S_PI;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">//</a> fine: <b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> member <a href="CppDeclaration.htm">declaration</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> d_size;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">//</a> fine: member data <a href="CppDefinition.htm">definition</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a> ...<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> size() <b><a href="CppConst.htm">const</a></b>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">//</a> fine: <a href="CppMemberFunction.htm">member function</a> <a href="CppDeclaration.htm">declaration</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a> ...<br/>
};&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a> fine: <b><a href="CppClass.htm">class</a></b> <a href="CppDefinition.htm">definition</a><br/>
<br/>
<b><a href="CppInline.htm">inline</a></b> <b><a href="CppInt.htm">int</a></b> Radio::size() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> d_size;<br/>
}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">//</a> fine: <b><a href="CppInline.htm">inline</a></b> <a href="CppFunction.htm">function</a> <a href="CppDefinition.htm">definition</a><br/>
<br/>
<b><a href="CppInt.htm">int</a></b> Radio::s_count;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppComment.htm">//</a> illegal: <b><a href="CppStatic.htm">static</a></b> member <a href="CppDefinition.htm">definition</a><br/>
<br/>
<b><a href="CppDouble.htm">double</a></b> Radio::S_PI <a href="CppOperatorAssign.htm">=</a> 3.14159265358; <a href="CppComment.htm">//</a> illegal: <b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> member <a href="CppDefinition.htm">definition</a><br/>
<br/>
<b><a href="CppInt.htm">int</a></b> Radio::size() <b><a href="CppConst.htm">const</a></b> { <a href="CppOperatorDivide.htm">/</a>*...<a href="CppComment.htm">*/</a> } <a href="CppComment.htm">//</a> illegal: <a href="CppMemberFunction.htm">member function</a> <a href="CppDefinition.htm">definition</a><br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> INCLUDED_RADIO<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<ul>
  <li>Avoid non-<a href="CppInline.htm">inline</a> <a href="CppFunction.htm">function</a> <a href="CppDefinition.htm">definitions</a> in <a href="CppHeaderFile.htm">header files</a> [7,9]</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Standard <a href="CppHeaderFile.htm">header files</a></h2>
<p>&nbsp;</p>
<p>The <a href="CppStl.htm">STL</a> consists out of the following <a href="CppHeaderFile.htm">header files</a> [3][4]:</p>
<p>&nbsp;</p>
<ol>

  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppAlgorithmH.htm">algorithm</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppArrayH.htm">array</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppAtomicH.htm">atomic</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppBitsetH.htm">bitset</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCassertH.htm">cassert</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCcomplexH.htm">ccomplex</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCctypeH.htm">cctype</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCerrnoH.htm">cerrno</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCfenvH.htm">cfenv</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCfloatH.htm">cfloat</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppChronoH.htm">chrono</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCinttypesH.htm">cinttypes</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCiso646H.htm">ciso646</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppClimitsH.htm">climits</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppClocaleH.htm">clocale</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCmathH.htm">cmath</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCodecvtH.htm">codecvt</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppComplexH.htm">complex</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCondition_variableH.htm">condition_variable</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCsetjmpH.htm">csetjmp</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCsignalH.htm">csignal</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCstdalignH.htm">cstdalign</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCstdargH.htm">cstdarg</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCstdboolH.htm">cstdbool</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCstddefH.htm">cstddef</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCstdintH.htm">cstdint</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCstdioH.htm">cstdio</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCstdlibH.htm">cstlib</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCstringH.htm">cstring</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCtimeH.htm">ctime</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppComplexH.htm">complex</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCtgmathH.htm">ctgmath</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCtimeH.htm">ctime</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCucharH.htm">cuchar</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCwcharH.htm">cwchar</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppCwctypeH.htm">cwctype</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppDequeH.htm">deque</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppExceptionH.htm">exception</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppForward_listH.htm">forward_list</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppFstreamH.htm">fstream</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppFunctionalH.htm">functional</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppFutureH.htm">future</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppInitializer_listH.htm">initializer_list</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppIomanipH.htm">iomanip</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppIosH.htm">ios</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppIosfwdH.htm">iosfwd</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppIostreamH.htm">iostream</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppIstreamH.htm">istream</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppIteratorH.htm">iterator</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppLimitsH.htm">limits</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppListH.htm">list</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppLocaleH.htm">locale</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppMapH.htm">map</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppMemoryH.htm">memory</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppMutexH.htm">mutex</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppNewH.htm">new</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppNumericH.htm">numeric</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppOstreamH.htm">ostream</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppQueueH.htm">queue</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppRandomH.htm">random</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppRatioH.htm">ratio</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppRegexH.htm">regex</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppSetH.htm">set</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppSstreamH.htm">sstream</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStackH.htm">stack</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStdexceptH.htm">stdexcept</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStreambufH.htm">streambuf</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStringH.htm">string</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppStrstreamH.htm">strstream</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppSystem_errorH.htm">system_error</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppThreadH.htm">thread</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppTupleH.htm">tuple</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppTypeindexH.htm">typeindex</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppTypeinfoH.htm">typeinfo</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppType_traitsH.htm">type_traits</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppUtilityH.htm">utility</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppValarrayH.htm">valarray</a></li>
  <li><img src="PicCpp98.png" alt="C++98"/><img src="PicCpp11.png" alt="C++11"/> <a href="CppVectorH.htm">vector</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppUnordered_mapH.htm">unordered_map</a></li>
  <li><img src="PicSpacer.png" alt=" "/><img src="PicCpp11.png" alt="C++11"/> <a href="CppUnordered_setH.htm">unordered_set</a></li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><!-- [1] --> <a href="CppHerbSutter.htm">Herb Sutter</a>, <a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. C++ coding standards: 101 rules, guidelines, and best practices. 2005. ISBN: 0-32-111358-6. Item 23: 'Make header files self-sufficient'.</li>
  <li><!-- [2] --> <a href="CppHerbSutter.htm">Herb Sutter</a>, <a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. C++ coding standards: 101 rules, guidelines, and best practices. 2005. ISBN: 0-32-111358-6. Item 24: 'Always write interal #include guards. Never write external #include guards'.</li>
  <li><!-- [3] --> International C++ Standard, table 11</li>
  <li><!-- [4] --> Draft of C++0x Standard, table 14 and 15, ISO/IEC JTC1 SC22 WG21 N 3290, Date: 2011-04-11, ISO/IEC FDIS 14882, ISO/IEC JTC1 SC22</li>
  <li><!-- [5] --> <a href="CppJohnLakos.htm">John Lakos</a>. Large-Scale C++ Software Design. 1996. ISBN: 0-201-63362-0. Chapter 1.1.3, figure 1-3, page 28</li>
  <li><!-- [6] --> <a href="CppJohnLakos.htm">John Lakos</a>. Large-Scale C++ Software Design. 1996. ISBN: 0-201-63362-0. Section D.2: Major Design Rules, Chapter 2, page 820: 'Avoid free functions (except operator functions) at file scope in .h files'</li>
  <li><!-- [7] --> <a href="CppBjarneStroustrup.htm">Bjarne Stroustrup</a>. The C++ Programming Language (3rd edition). 1997. ISBN: 0-201-88954-4. Section 9.5, item 4: 'Avoid non-inline function definitions in headers'</li>
  <li><!-- [8] --> <a href="CppJohnLakos.htm">John Lakos</a>. Large-Scale C++ Software Design. 1996. ISBN: 0-201-63362-0. Section 2.5, page 85: 'Place a redundant (external) include guard around each preprocessor include directive in every header file'</li>
  <li><!-- [9] -->Joint Strike Fighter Air Vehicle C++ Coding Standards for the System Development and Demonstration Program. Document Number 2RDU00001 Rev C. December 2005. AV Rule 39: 'Header files (*.h) will not contain non-const variable definitions or function definitions.'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
