<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>QtExample1</title>
  <meta name="description" content="C++ QtExample1"/>
  <meta name="keywords" content="C++ QtExample1 code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppQtExample1.htm">QtExample1</a></h1>
<p>&nbsp;</p>
<!-- This text is generated by CodeToHtml -->
<p><img src="PicQt.png" alt="Qt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/><img src="PicUbuntu.png" alt="Ubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppQtExample1.htm">Qt example 1: moving a sprite over a background in 2D</a> is a <a href="CppQtExample.htm">Qt example</a> that shows an image moving over a background image, like <a href="CppQtExample1.png">this screenshot (png)</a>.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppQtExample1.zip">Download the Qt Creator project file 'CppQtExample1' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 13.04 (raring)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> unknown</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicGui.png" alt="GUI"/> <a href="CppGuiApplication.htm">GUI application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="Cpp11.htm">C++11</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.7.3</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.1.1 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.7.3</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: CppQtExample1.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="CppQtExample1.pro" border = "1"><tr><td><code>
QT += core gui<br/>
greaterThan(QT_MAJOR_VERSION, 4): QT += <a href="CppWidget.htm">widget</a>s<br/>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp<br/>
<br/>
#<br/>
#<br/>
# Type of compile<br/>
#<br/>
#<br/>
<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>(debug, debug|release) {<br/>
&nbsp;&nbsp;message(Debug mode)<br/>
}<br/>
<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>(release, debug|release) {<br/>
&nbsp;&nbsp;message(Release mode)<br/>
<br/>
&nbsp;&nbsp;#Remove all <a href="CppAssert.htm">assert</a>s and <a href="CppTRACE.htm">TRACE</a><br/>
&nbsp;&nbsp;<a href="CppQmakeDefines.htm">DEFINES</a> += NDEBUG N<a href="CppTRACE.htm">TRACE</a>_BILDERBIKKEL<br/>
}<br/>
<br/>
#<br/>
#<br/>
# Platform specific<br/>
#<br/>
#<br/>
<br/>
#<br/>
#<br/>
# Compiler flags<br/>
#<br/>
#<br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp11.htm">c++11</a> <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a><br/>
<br/>
unix {<br/>
&nbsp;&nbsp;<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += <a href="CppWerror.htm">-Werror</a><br/>
}<br/>
<br/>
#<br/>
#<br/>
# Boost<br/>
#<br/>
#<br/>
<br/>
unix {<br/>
&nbsp;&nbsp;message(Unix: Boost already in include path)<br/>
}<br/>
<br/>
win32 {<br/>
&nbsp;&nbsp;message(Windows: add Boost to include path)<br/>
&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../../<a href="Projects.htm">Projects</a>/<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0<br/>
}<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;CppQtExample1.qrc<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppShared_ptr.html">shared_ptr</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQApplication.html">QApplication</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQBitmap.html">QBitmap</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQGraphicsPathItem.html">QGraphicsPathItem</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQGraphicsPixmapItem.html">QGraphicsPixmapItem</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQGraphicsScene.html">QGraphicsScene</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQGraphicsView.html">QGraphicsView</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQTimer.html">QTimer</a>&gt;<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> Background : <b><a href="CppPublic.html">public</a></b> <a href="CppQGraphicsPixmapItem.html">QGraphicsPixmapItem</a><br/>
{<br/>
&nbsp;&nbsp;Background(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; filename)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.html">QPixmap</a> m(filename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setPixmap(m);<br/>
&nbsp;&nbsp;}<br/>
};<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> TransparentSprite : <b><a href="CppPublic.html">public</a></b> <a href="CppQGraphicsPixmapItem.html">QGraphicsPixmapItem</a><br/>
{<br/>
&nbsp;&nbsp;TransparentSprite(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; filename,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppQColor.html">QColor</a>&amp; transparency_color <a href="CppOperatorAssign.htm">=</a> <a href="CppQColor.html">QColor</a>(0,255,0)) <a href="CppComment.htm">//</a>Lime green<br/>
&nbsp;&nbsp;&nbsp;&nbsp;: dx(1), dy(1), maxx(320), maxy(200)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.html">QPixmap</a> pixmap(filename.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppQBitmap.html">QBitmap</a> mask <a href="CppOperatorAssign.htm">=</a> pixmap.createMaskFromColor(transparency_color);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pixmap.setMask(mask);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setPixmap(pixmap);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> advance(<b><a href="CppInt.htm">int</a></b>)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> new_x <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;x();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> new_y <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;y();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;new_x<a href="CppOperatorPlusAssign.htm">+=</a>dx;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;new_y<a href="CppOperatorPlusAssign.htm">+=</a>dy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (new_x&lt;0 <a href="CppOperatorLogicalOr.htm">||</a> new_x&gt;maxx) dx<a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>dx;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (new_y&lt;0 <a href="CppOperatorLogicalOr.htm">||</a> new_y&gt;maxy) dy<a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>dy;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setX(new_x);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setY(new_y);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> setRect(<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> width, <b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> height)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;maxx <a href="CppOperatorAssign.htm">=</a> width&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;pixmap().width();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;maxy <a href="CppOperatorAssign.htm">=</a> height <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;pixmap()<a href="CppHeaderFile.htm">.h</a>eight();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> dx;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> dy;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> maxx;<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> maxy;<br/>
};<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.html">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;<a href="CppQGraphicsScene.html">QGraphicsScene</a> s;<br/>
&nbsp;&nbsp;<a href="CppQGraphicsView.html">QGraphicsView</a> v(&amp;s);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Original image from http://commons.wikimedia.org/wiki/File:Bubblegum_2.png<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>by Marendo Müller 10.05.2013, resized to 15%<br/>
&nbsp;&nbsp;Background background(":/images/Bubblegum_2.png");<br/>
&nbsp;&nbsp;s.addItem(&amp;background);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Image from http://commons.wikimedia.org/wiki/File:Bloem.png<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>by DD21<br/>
&nbsp;&nbsp;TransparentSprite sprite(":/images/Bloem.png");<br/>
&nbsp;&nbsp;sprite.setRect(background.pixmap().width(),background.pixmap()<a href="CppHeaderFile.htm">.h</a>eight());<br/>
<br/>
&nbsp;&nbsp;s.addItem(&amp;sprite);<br/>
<br/>
&nbsp;&nbsp;v.show();<br/>
<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.html">boost::shared_ptr</a>&lt;<a href="CppQTimer.html">QTimer</a>&gt; <a href="CppTime.htm">time</a>r(<b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.html">QTimer</a>(&amp;s));<br/>
&nbsp;&nbsp;<a href="CppTime.htm">time</a>r-&gt;connect(<a href="CppTime.htm">time</a>r.get(), <a href="CppSignalMacro.html">SIGNAL</a>(<a href="CppTime.htm">time</a>out()), &amp;s, <a href="CppSLOT.htm">SLOT</a>(advance()));<br/>
&nbsp;&nbsp;<a href="CppTime.htm">time</a>r-&gt;start(10);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
