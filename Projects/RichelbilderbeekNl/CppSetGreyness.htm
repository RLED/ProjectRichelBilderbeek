 
<title>SetGreyness</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>C++ Code Snippet SetGreyness</o:Subject>
  <o:Author>Richel Bilderbeek</o:Author>
  <o:Keywords>C++ Code Snippet Richel Bilderbeek SetGreyness set pixel pixels grey greyness gray grayness VCL</o:Keywords>
  <o:Description>From http://www.richelbilderbeek.nl</o:Description>
  <o:LastAuthor>Richel Bilderbeek</o:LastAuthor>
  <o:Revision>6</o:Revision>
  <o:TotalTime>129</o:TotalTime>
  <o:Created>2008-01-02T10:05:00Z</o:Created>
  <o:LastSaved>2008-01-05T13:57:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>402</o:Words>
  <o:Characters>2294</o:Characters>
  <o:Category>C++ Code Snippet Richel Bilderbeek SetGreyness</o:Category>
  <o:Manager>Richel Bilderbeek</o:Manager>
  <o:Company>Richel Bilderbeek</o:Company>
  <o:Lines>19</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2817</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>SetGreyness</title>
  <meta name="description" content="C++ SetGreyness"/>
  <meta name="keywords" content="C++ SetGreyness"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppSetGreyness.htm">SetGreyness</a></h1>
<p>&nbsp;</p>
<p>The greyness of a pixels is the averaged red, green and blue value of it. You can
set a single pixel's greyness, a horizontal line or a square of pixels.</p>
<p>&nbsp;</p>
<p>To get pixels' their greynesses, use <a href="CppGetGreyness.htm">GetGreyness</a>.</p>
<p>&nbsp;</p>
<p>* <a href="CppSetGreyness.txt">View the code of 'SetGreyness' in plain text</a>.</p>
<p>&nbsp;</p>

 

<p>//Set a pixel's greyness</p>

<p>//From
http://www.richelbilderbeek.nl</p>

<p><b> void </b>  SetGreyness(</p>

<p>
 TImage * <b>const</b> image,</p>

<p>
 <b>const int</b> x,</p>

<p>
 <b>const int</b> y,</p>

<p>
 <b>const unsigned char </b>grey)</p>

<p>{</p>

<p>
 assert(image!=0 &amp;&amp; &quot;Image is NULL&quot;);</p>

<p>
 assert(image-&gt;Picture-&gt;Bitmap!=0 &amp;&amp; &quot;Bitmap is
NULL&quot;);</p>

<p>
 assert(image-&gt;Picture-&gt;Bitmap-&gt;PixelFormat == pf24bit
&amp;&amp; &quot;Bitmap must be 24 bit&quot;);</p>

<p>
 assert( x &gt;= 0 &amp;&amp; &quot;x coordinat is below zero&quot;);</p>

<p>
 assert( y &gt;= 0 &amp;&amp; &quot;y coordinat is below zero&quot;);</p>

<p>
 assert( x &lt; image-&gt;Picture-&gt;Bitmap-&gt;Width    &amp;&amp; &quot;x coordinat is beyond image
width&quot;);</p>

<p>
 assert( y &lt; image-&gt;Picture-&gt;Bitmap-&gt;Height &amp;&amp;
&quot;y coordinat is beyond image height&quot;);</p>

<p>&nbsp;</p>

<p>
 <b>unsigned char</b> * <b>const</b> myLine</p>

<p> 
 = <b>static_cast</b>&lt;<b>unsigned char</b>
*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);</p>

<p>&nbsp;</p>

<p>
 myLine[x*3+2] = grey;</p>

<p>
 myLine[x*3+1] = grey;</p>

<p>
 myLine[x*3+0] = grey;</p>

<p>}</p>

</div>

<p>&nbsp;</p>

<p>&nbsp;</p>

 

<p>//Set a line of pixel's greyness</p>

<p>//From
http://www.richelbilderbeek.nl</p>

<p><b> void </b>  SetGreyness(</p>

<p>
 TImage * <b>const</b> image,</p>

<p>
 <b>const int</b> x1,</p>

<p>
 <b>const int</b> x2,</p>

<p>
 <b>const int</b> y,</p>

<p>
 <b>const unsigned char</b> grey)</p>

<p>{</p>

<p>
 assert(image!=0 &amp;&amp; &quot;Image is NULL&quot;);</p>

<p>
 assert(image-&gt;Picture-&gt;Bitmap!=0 &amp;&amp; &quot;Bitmap is
NULL&quot;);</p>

<p>
 assert(image-&gt;Picture-&gt;Bitmap-&gt;PixelFormat == pf24bit
&amp;&amp; &quot;Bitmap must be 24 bit&quot;);</p>

<p>
 assert( x1 &gt;= 0 &amp;&amp; &quot;x1 coordinat is below zero&quot;);</p>

<p>
 assert( x2 &gt;= 0 &amp;&amp; &quot;x2 coordinat is below zero&quot;);</p>

<p>
 assert( y &gt;= 0 &amp;&amp; &quot;y coordinat is below zero&quot;);</p>

<p>
 assert( x1 &lt; image-&gt;Picture-&gt;Bitmap-&gt;Width    &amp;&amp; &quot;x1 coordinat is beyond
image width&quot;);</p>

<p>
 assert( x2 &lt;= image-&gt;Picture-&gt;Bitmap-&gt;Width    &amp;&amp; &quot;x2 coordinat is beyond
image width&quot;);</p>

<p>
 assert( y &lt; image-&gt;Picture-&gt;Bitmap-&gt;Height &amp;&amp;
&quot;y coordinat is beyond image height&quot;);</p>

<p>&nbsp;</p>

<p>
 <b>unsigned char</b> * <b>const</b> myLine</p>

<p> 
 = <b>static_cast</b>&lt;<b>unsigned char</b>
*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);</p>

<p>
 <b>for</b> (<b>int</b> x=x1; x!=x2; ++x)</p>

<p>
 {</p>

<p> 
 myLine[x*3+2] = grey;</p>

<p> 
 myLine[x*3+1] = grey;</p>

<p> 
 myLine[x*3+0] = grey;</p>

<p>
 }</p>

<p>}</p>

</div>

<p>&nbsp;</p>

<p>&nbsp;</p>

 

<p>//Set a square of pixels' greyness</p>

<p>//From
http://www.richelbilderbeek.nl</p>

<p><b> void </b>  SetGreyness(</p>

<p>
 TImage * <b>const</b> image,</p>

<p>
 <b>const int</b> x1,</p>

<p>
 <b>const int</b> y1,</p>

<p>
 <b>const int</b> x2,</p>

<p>
 <b>const int</b> y2,</p>

<p>
 <b>const unsigned char</b> grey)</p>

<p>{</p>

<p>
 <b>for</b> (<b>int</b> y=y1; y!=y2; ++y)</p>

<p>
 {</p>

<p> 
 SetGreyness(image,x1,x2,y,grey);</p>

<p>
 }</p>

<p>}</p>

</div>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
