 
<title>operator[]</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>C++ operator[]</o:Subject>
  <o:Author>Richel Bilderbeek</o:Author>
  <o:Keywords>C++ Richel Bilderbeek operator[] index operator indicing square bracket block</o:Keywords>
  <o:Description>From http://www.richelbilderbeek.nl</o:Description>
  <o:LastAuthor>Richel Bilderbeek</o:LastAuthor>
  <o:Revision>10</o:Revision>
  <o:TotalTime>151</o:TotalTime>
  <o:Created>2008-04-26T13:18:00Z</o:Created>
  <o:LastSaved>2008-05-02T11:08:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>217</o:Words>
  <o:Characters>1241</o:Characters>
  <o:Category>C++ Richel Bilderbeek operator[]</o:Category>
  <o:Manager>Richel Bilderbeek</o:Manager>
  <o:Company>Richel Bilderbeek</o:Company>
  <o:Lines>10</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1524</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>operator[]</title>
  <meta name="description" content="C++ operator[]"/>
  <meta name="keywords" content="C++ index operator operator[] []"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppOperatorIndex.htm">operator[]</a></h1>
<p>&nbsp;</p>
<p><a href="CppOperator.htm">Operator</a> commonly used to retrieve an indexed element from a <a href="CppContainer.htm">container</a>.</p>
<p>&nbsp;</p>
<p><a href="CppAvoidDuplicationInConstAndNonConstMemberFunctions.htm">Avoid duplication in const and non-const member functions</a> [1].</p>
<p>&nbsp;</p>

 

 

<p><a href="CppInclude.htm">#include</a>
&lt;<a href="CppVectorH.htm">vector</a>&gt;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;<a href="CppCassertH.htm">cassert</a>&gt;</p>

 

<p><b> <a href="CppStruct.htm">struct</a> </b>  StoreTenInts</p>

<p>{</p>

<p>
 StoreTenInts() : mV(<a href="CppVector.htm">std::vector</a>&lt;<b><a
href="CppInt.htm">int</a></b>&gt;(10,0)) {}</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppInt.htm">int</a></b>&amp; <b><a
href="CppOperatorIndex.htm">operator[]</a></b>(<b><a href="CppConst.htm">const</a></b>
<b><a href="CppInt.htm">int</a></b> i)</p>

<p>
 {</p>

<p> 
 <a href="CppComment.htm">//</a>Calls the const version of operator[]</p>

<p> 
 <a href="CppComment.htm">//</a>To <a
href="CppAvoidDuplicationInConstAndNonConstMemberFunctions.htm">avoid
duplication in const and non-const member functions</a> [1]</p>

<p> 
 <b><a href="CppReturn.htm">return</a></b> <b><a href="CppConst_cast.htm">const_cast</a></b>&lt;int&amp;&gt;(<b><a
href="CppConst_cast.htm">const_cast</a></b>&lt;<b><a href="CppConst.htm">const</a></b>
StoreTenInts&amp;&gt;(*<b><a href="CppThis.htm">this</a></b>)[i]);</p>

<p>
 }</p>

<p>
 <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>&amp;
<b><a href="CppOperatorIndex.htm">operator[]</a></b>(<b><a href="CppConst.htm">const</a></b>
<b><a href="CppInt.htm">int</a></b> i) <b><a href="CppConst.htm">const</a></b></p>

<p>
 {</p>

<p> 
 <a href="CppComment.htm">//</a>The actual work of operator[]</p>

<p> 
 <a href="CppAssert.htm">assert</a>(i &gt;= 0 &amp;&amp; i &lt; 10);</p>

<p> 
 <b><a href="CppReturn.htm">return</a></b> mV[i];</p>

<p>
 }</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppPrivate.htm">private</a></b>:</p>

<p>
 <a href="CppVector.htm">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;
mV;</p>

<p>};</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">Reference</a></h2>
<p>&nbsp;</p>
<ol>
  <li><a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C++ (3rd edition). ISBN:0-321-33487-6. Item 3, paragraph 'Avoid duplication in const and non-const member functions'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
