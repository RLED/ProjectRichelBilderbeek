<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Method design</title>
  <meta name="description" content="C++ Method design"/>
  <meta name="keywords" content="C++ Method design code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppMemberFunctionDesign.htm">member function design</a></h1>
<p>&nbsp;</p>
<p><a href="CppMemberFunctionDesign.htm">member function design</a> is the design of 'good' <a href="CppMemberFunction.htm">member functions</a>. From [1]:</p>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
The standard requires that <a href="CppOperator.htm">operators</a> <a href="CppOperatorAssign.htm">=</a> () [] and <a href="CppOperatorMinus.htm">-</a>&gt; must be methods.<br/>
For all other <a href="CppFunction.htm">function</a>s:<br/>
IF the <a href="CppFunction.htm">function</a> is <b><a href="CppOperator.htm">operator</a></b><a href="CppOperatorStreamIn.htm">&gt;&gt;</a> or <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b> <b><a href="CppFor.htm">for</a></b> File I/O,<br/>
OR IF it needs type con<a href="CppVersion.htm">version</a>s on its leftmost argument,<br/>
OR IF it can be implemented <b><a href="CppUsing.htm">using</a></b> the <b><a href="CppClass.htm">class</a></b>'s <b><a href="CppPublic.htm">public</a></b> <a href="CppInterface.htm">interface</a> alone,<br/>
&nbsp;&nbsp;Make it a non-member (and <b><a href="CppFriend.htm">friend</a></b> in the first two <b><a href="CppCase.htm">case</a></b>s).<br/>
IF it needs to behave <b><a href="CppVirtual.htm">virtual</a></b>ly,<br/>
&nbsp;&nbsp;add a <b><a href="CppVirtual.htm">virtual</a></b> member <a href="CppFunction.htm">function</a> to provide the <b><a href="CppVirtual.htm">virtual</a></b> behaviour and implement it in terms of that.<br/>
ELSE <a href="CppMake.htm">make</a> it a member<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Other design guidelines:</p>
<ul>
  <li><a href="CppAvoidDuplicationInConstAndNonConstMemberFunctions.htm">Avoid duplication in const and non-const member functions</a> [2]</li>
  <li>Prefer writing short <a href="CppMemberFunction.htm">member functions</a> [3]</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppReferences.htm">References</a></h2>
<p>&nbsp;</p>
<ol>
  <li><a href="CppHerbSutter.htm">Herb Sutter</a>. Exceptional C++. ISBN: 0-201-61562-2. Item 20: Class mechanics.</li>
  <li><a href="CppScottMeyers.htm">Scott Meyers</a>. Effective C++ (3rd edition). ISBN:0-321-33487-6. Item 3, paragraph 'Avoid duplication in const and non-const member functions'.</li>
  <li>Joint Strike Fighter Air Vehicle C++ Coding Standards for the System Development and Demonstration Program. Document Number 2RDU00001 Rev C. December 2005. AV Rule 1: 'Any one function (or method) will contain no more than 200 logical source lines of code.'</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>

