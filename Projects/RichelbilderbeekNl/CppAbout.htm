<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>About</title>
  <meta name="description" content="C++ About"/>
  <meta name="keywords" content="C++ About code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppAbout.htm">About</a></h1>
<p>&nbsp;</p>
<!-- This text is generated by CodeToHtml -->
<p><img src="PicStl.png" alt="STL"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicWindows.png" alt="Windows"/></p>
<p>&nbsp;</p>
<p><a href="CppAbout.htm">About</a> is a
<a href="CppClass.htm">class</a> to display information
about a program.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>about.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="about.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppAbout.html">About</a>, <b><a href="CppClass.html">class</a></b> <b><a href="CppFor.htm">for</a></b> containing information <a href="CppAbout.html">about</a> a program<br/>
Copyright (C) 2010 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppAbout.html">CppAbout</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.html">#ifndef</a> ABOUT_H<br/>
<a href="CppDefine.html">#define</a> ABOUT_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppIosfwdH.html">iosfwd</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppVectorH.html">vector</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppAbout.html">About</a> is a <b><a href="CppClass.html">class</a></b> to contain '<a href="CppAbout.html">about</a>' information<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppAbout.html">About</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.html">explicit</a></b> <a href="CppAbout.html">About</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> author,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> file_title,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> file_description,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> programmed_on,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> years,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> url,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppVersion.html">version</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt;&amp; <a href="CppVersion.html">version</a>_history);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppAdd.htm">Add</a> a <a href="CppLibrary.html">library</a> name and <a href="CppVersion.html">version</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> <a href="CppAdd.htm">Add</a><a href="CppLibrary.html">Library</a>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; s);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create the '<a href="CppAbout.html">about</a>' text<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; Create<a href="CppAbout.html">About</a>Text() <b><a href="CppConst.html">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a <a href="CppVersion.html">version</a> history<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; Create<a href="CppVersion.html">Version</a>History() <b><a href="CppConst.html">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a text with all libraries used<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; Create<a href="CppLibrary.html">Libraries</a>UsedText() <b><a href="CppConst.html">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/CreateLicence creates a GPL 3.0 licence.<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; CreateLicenceText() <b><a href="CppConst.html">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.html">version</a> of <b><a href="CppThis.htm">this</a></b> <a href="CppAbout.html">About</a> <b><a href="CppClass.html">class</a></b> itself<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> GetAbout<a href="CppVersion.html">Version</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.html">version</a> history of <b><a href="CppThis.htm">this</a></b> <a href="CppAbout.html">About</a> <b><a href="CppClass.html">class</a></b> itself<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; GetAbout<a href="CppVersion.html">Version</a>History();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the author of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; GetAuthor() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_author; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppGetBoostVersion.html">GetBoostVersion</a> <a href="CppReturn.html">returns</a> the <a href="CppVersion.html">version</a> of the current <a href="CppBoost.html">Boost</a> <a href="CppLibrary.html">library</a>.<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/From http://www.richelbilderbeek.nl/Cpp<a href="CppGetBoostVersion.html">GetBoostVersion</a>.html<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppGetBoostVersion.html">GetBoostVersion</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the file/<b><a href="CppClass.html">class</a></b>/program its title<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; GetFileTitle() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_file_title; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the date <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b> has been programmed on<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; GetProgrammedAt() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_programmed_on; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppGetQtCreatorVersion.html">GetQtCreatorVersion</a> <a href="CppReturn.html">returns</a> the <a href="CppVersion.html">version</a> number of the <a href="CppQtCreator.html">Qt Creator</a> currently installed.<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/From http://www.richelbilderbeek.nl/Cpp<a href="CppGetQtCreatorVersion.html">GetQtCreatorVersion</a>.html<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppGetQtCreatorVersion.html">GetQtCreatorVersion</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppGetStlVersion.html">GetStlVersion</a> <a href="CppReturn.html">returns</a> the <a href="CppVersion.html">version</a> number of the GCC <a href="CppStl.htm">STL</a> currently installed.<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/From http://www.richelbilderbeek.nl/Cpp<a href="CppGetStlVersion.html">GetStlVersion</a>.html<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppGetStlVersion.html">GetStlVersion</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the URL <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b> can be downloaded from<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; GetUrl() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_url; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the years <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b> has been worked on<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; GetYears() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_years; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.html">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; Get<a href="CppVersion.html">Version</a>() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_<a href="CppVersion.html">version</a>; }<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The author of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> m_author;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The title or name of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> m_file_title;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The description of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> m_file_description;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The libraries and/or <b><a href="CppClass.html">classes</a></b> used by <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b><br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; m_libraries;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The date <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b> was programmed<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> m_programmed_on;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The years <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b> has been worked on<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> m_years;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The URL <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b> can be downloaded from<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> m_url;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppVersion.html">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> m_<a href="CppVersion.html">version</a>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppVersion.html">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; m_<a href="CppVersion.html">version</a>_history;<br/>
<br/>
};<br/>
<br/>
<a href="CppOstream.html">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.html">operator&lt;&lt;</a></b>(<a href="CppOstream.html">std::ostream</a>&amp; os,<b><a href="CppConst.html">const</a></b> <a href="CppAbout.html">About</a>&amp; a);<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> ABOUT_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>about.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="about.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppAbout.html">About</a>, <b><a href="CppClass.html">class</a></b> <b><a href="CppFor.htm">for</a></b> containing information <a href="CppAbout.html">about</a> a program<br/>
Copyright (C) 2010 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppAbout.html">CppAbout</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> "<a href="CppAbout.html">about</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppAlgorithmH.html">algorithm</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCassertH.html">cassert</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppIostreamH.html">iostream</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppIteratorH.html">iterator</a>&gt;<br/>
<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.html">-Weffc++</a>"<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.html">typedef</a></b>s"<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppLexical_cast.html">lexical_cast</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppVersion.html">version</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.html">#include</a> "<a href="CppTrace.html">trace</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppAbout.html">About</a>::<a href="CppAbout.html">About</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> author,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> file_title,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> file_description,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> programmed_on,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> years,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> url,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppVersion.html">version</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt;&amp; <a href="CppVersion.html">version</a>_history)<br/>
&nbsp;&nbsp;: m_author { author },<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file_title(file_title),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file_description(file_description),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_libraries( {} ),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_programmed_on(programmed_on),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_years(years),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_url(url),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppVersion.html">version</a>(<a href="CppVersion.html">version</a>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppVersion.html">version</a>_history(<a href="CppVersion.html">version</a>_history)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAdd.htm">Add</a><a href="CppLibrary.html">Library</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a>("<a href="CppAbout.html">About</a> <a href="CppVersion.html">version</a>: ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> GetAbout<a href="CppVersion.html">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAdd.htm">Add</a><a href="CppLibrary.html">Library</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a>("<a href="CppBoost.html">Boost</a> <a href="CppVersion.html">version</a>: ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppGetBoostVersion.html">GetBoostVersion</a>());<br/>
&nbsp;&nbsp;<a href="CppAdd.htm">Add</a><a href="CppLibrary.html">Library</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a>("<a href="CppStl.htm">STL</a> <a href="CppVersion.html">version</a>: ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppGetStlVersion.html">GetStlVersion</a>()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(" (GNU ISO <a href="Cpp.htm">C++</a> <a href="CppLibrary.html">library</a>)"));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppAbout.html">About</a>::<a href="CppAdd.htm">Add</a><a href="CppLibrary.html">Library</a>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; s)<br/>
{<br/>
&nbsp;&nbsp;m_libraries.push_back(s);<br/>
&nbsp;&nbsp;<a href="CppSort.html">std::sort</a>(m_libraries.begin(),m_libraries.end());<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppAbout.html">About</a>::Create<a href="CppAbout.html">About</a>Text() <b><a href="CppConst.html">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file_title <a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(", <a href="CppVersion.html">version</a> ") <a href="CppOperatorPlus.htm">+</a> m_<a href="CppVersion.html">version</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a>("Copyright (C) ") <a href="CppOperatorPlus.htm">+</a> m_years <a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(" ") <a href="CppOperatorPlus.htm">+</a> m_author,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a>("Programmed on ") <a href="CppOperatorPlus.htm">+</a> m_programmed_on,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a>("by ") <a href="CppOperatorPlus.htm">+</a> m_author,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file_title <a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(" can be downloaded from ") <a href="CppOperatorPlus.htm">+</a> m_url,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Licenced under GPL 3.0"<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppAbout.html">About</a>::Create<a href="CppLibrary.html">Libraries</a>UsedText() <b><a href="CppConst.html">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("<a href="CppLibrary.html">Libraries</a> and <b><a href="CppClass.html">classes</a></b> used: ");<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; s: m_libraries)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(<a href="CppString.html">std::string</a>(" * ") <a href="CppOperatorPlus.htm">+</a> s);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppAbout.html">About</a>::CreateLicenceText() <b><a href="CppConst.html">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_file_title <a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(", ") <a href="CppOperatorPlus.htm">+</a> m_file_description,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a>("Copyright (C) ") <a href="CppOperatorPlus.htm">+</a> m_years <a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(" ") <a href="CppOperatorPlus.htm">+</a> m_author,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"This program is free software: you can redistribute it and/or modify",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"it under the terms of the GNU General Public License as published by",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"the Free Software Foundation, either version 3 of the License, or",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"(at your option) any later version.",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"This program is distributed in the hope that it will be useful,",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"but WITHOUT ANY WARRANTY; without even the implied warranty of",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"GNU General Public License for more details.",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"You should have received a copy of the GNU General Public License",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;."<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppAbout.html">About</a>::Create<a href="CppVersion.html">Version</a>History() <b><a href="CppConst.html">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("<a href="CppVersion.html">Version</a> history:");<br/>
&nbsp;&nbsp;v.push_back(" * YYYY-MM-DD: <a href="CppVersion.html">version</a> X.Y: [description]");<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; s: m_<a href="CppVersion.html">version</a>_history)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(<a href="CppString.html">std::string</a>(" * ") <a href="CppOperatorPlus.htm">+</a> s);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppAbout.html">About</a>::GetAbout<a href="CppVersion.html">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> "1.6";<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppAbout.html">About</a>::GetAbout<a href="CppVersion.html">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-01-07: <a href="CppVersion.html">version</a> 1.0: initial <a href="CppVersion.html">version</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-01-11: <a href="CppVersion.html">version</a> 1.1: added simple getters",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2011-09-12: <a href="CppVersion.html">version</a> 1.2: added <b><a href="CppOperatorStreamOut.html">operator&lt;&lt;</a></b>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-01-08: <a href="CppVersion.html">version</a> 1.3: fixed grammatical error",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2012-01-26: <a href="CppVersion.html">version</a> 1.4: removed <a href="CppBOOST_FOREACH.html">BOOST_FOREACH</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-04-29: <a href="CppVersion.html">version</a> 1.5: added <a href="CppIfdef.html">#ifdef</a>s <b><a href="CppFor.htm">for</a></b> GCC 4.4.0"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2013-09-05: <a href="CppVersion.html">version</a> 1.6: transition to <b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a>"<br/>
&nbsp;&nbsp;};<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppAbout.html">About</a>::<a href="CppGetBoostVersion.html">GetBoostVersion</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppString.html">std::string</a> s <a href="CppOperatorAssign.htm">=</a> BOOST_LIB_VERSION;<br/>
&nbsp;&nbsp;<a href="CppReplace.html">std::replace</a>(s.begin(),s.end(),'_','.');<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> s;<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppAbout.html">About</a>::<a href="CppGetStlVersion.html">GetStlVersion</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(__VERSION__);<br/>
}<br/>
<br/>
<a href="CppOstream.html">std::ostream</a>&amp; <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorStreamOut.html">operator&lt;&lt;</a></b>(<a href="CppOstream.html">std::ostream</a>&amp; os,<b><a href="CppConst.html">const</a></b> <a href="CppAbout.html">About</a>&amp; a)<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> a.Create<a href="CppAbout.html">About</a>Text();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCopy.html">std::copy</a>(v.begin(),v.end(),<a href="CppOstream_iterator.html">std::ostream_iterator</a>&lt;<a href="CppString.html">std::string</a>&gt;(os,"\n"));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;os<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> a.Create<a href="CppLibrary.html">Libraries</a>UsedText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCopy.html">std::copy</a>(v.begin(),v.end(),<a href="CppOstream_iterator.html">std::ostream_iterator</a>&lt;<a href="CppString.html">std::string</a>&gt;(os,"\n"));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;os<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> a.Create<a href="CppVersion.html">Version</a>History();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCopy.html">std::copy</a>(v.begin(),v.end(),<a href="CppOstream_iterator.html">std::ostream_iterator</a>&lt;<a href="CppString.html">std::string</a>&gt;(os,"\n"));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;os<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Licence:\n";<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> a.CreateLicenceText();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCopy.html">std::copy</a>(v.begin(),v.end(),<a href="CppOstream_iterator.html">std::ostream_iterator</a>&lt;<a href="CppString.html">std::string</a>&gt;(os,"\n"));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;os<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Source code built on "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> __DATE__<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> __TIME__<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;<a href="CppIfdef.html">#ifdef</a> <a href="CppNDEBUG.html">NDEBUG</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Release <a href="CppVersion.html">version</a>"<br/>
&nbsp;&nbsp;<a href="CppPreElse.html">#else</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<a href="CppDebug.html">Debug</a> <a href="CppVersion.html">version</a>"<br/>
&nbsp;&nbsp;<a href="CppEndif.html">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> os;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
