 
<title>Greatest Common Divisor</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>C++ Code Snippet Greatest Common Divisor GCD</o:Subject>
  <o:Author>Richel Bilderbeek</o:Author>
  <o:Keywords>C++ Code Snippet Richel Bilderbeek Greatest Common Divisor GCD</o:Keywords>
  <o:LastAuthor>Richel Bilderbeek</o:LastAuthor>
 </o:DocumentProperties>
</xml><![endif]-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Greatest Common Divisor</title>
  <meta name="description" content="C++ Greatest Common Divisor"/>
  <meta name="keywords" content="C++ Greatest Common Divisor GCD"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppGcd.htm">Greatest Common Divisor</a></h1>
<p>&nbsp;</p>
<p>The greatest common divisor can be calculated:</p>
<ul>
  <li>using a for-loop</li>
  <li>using recursion</li>
  <li>using the <a href="http://www.boost.org/">Boost</a> library</li>
</ul>
<p>&nbsp;</p>
<p>Code in plain text can be found <a href="CppGcd.txt">here</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>A for-loop</h2>
<p>&nbsp;</p>
<p>Using Euclid's algorithm.</p>
<p>&nbsp;</p>

 

<p>int GreatestCommonDivisor(int x, int
y)</p>

<p>{</p>

<p>
 while (y != 0)</p>

<p>
 {</p>

<p> 
 const int temp = y;</p>

<p> 
 y = x % y;</p>

<p> 
 x = temp;</p>

<p>
 }</p>

<p>
 return x;</p>

<p>}</p>

</div>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Using recursion</h2>
<p>&nbsp;</p>
<p>Using Euclid's algorithm, a recursive function:</p>
<p>&nbsp;</p>

 

<p>int GreatestCommonDivisor(const int
x, const int y)</p>

<p>{</p>

<p>
 if (y==0) return x;</p>

<p>
 return GreatestCommonDivisor(y,x%y);</p>

<p>}</p>

</div>



<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Using the <a href="http://www.boost.org/"> Boost</a> library</h2>
<p>&nbsp;</p>
<p>From <a href="http://www.boost.org/doc/html/boost_math/gcd_lcm.html">http://www.boost.org/doc/html/boost_math/gcd_lcm.html</a>:</p>
<p>&nbsp;</p>

 

<p>#include
&lt;boost/math/common_factor.hpp&gt;</p>

<p>#include &lt;algorithm&gt;</p>

<p>#include &lt;iterator&gt;</p>

<p>#include &lt;iostream&gt;</p>

<p>&nbsp;</p>

<p>int main()</p>

<p>{</p>

<p>
 using std::cout;</p>

<p>
 using std::endl;</p>

<p>&nbsp;</p>

<p>
 cout &lt;&lt; &quot;The GCD and LCM of 6 and 15 are &quot;</p>

<p>
 &lt;&lt; boost::math::gcd(6, 15) &lt;&lt; &quot; and &quot;</p>

<p>
 &lt;&lt; boost::math::lcm(6, 15) &lt;&lt; &quot;, respectively.&quot;</p>

<p>
 &lt;&lt; endl;</p>

<p>&nbsp;</p>

<p>
 cout &lt;&lt; &quot;The GCD and LCM of 8 and 9 are &quot;</p>

<p>
 &lt;&lt; boost::math::static_gcd&lt;8, 9&gt;::value</p>

<p>
 &lt;&lt; &quot; and &quot;</p>

<p>
 &lt;&lt; boost::math::static_lcm&lt;8, 9&gt;::value</p>

<p>
 &lt;&lt; &quot;, respectively.&quot; &lt;&lt; endl;</p>

<p>
 std::cin.get();</p>

<p>}</p>

</div>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
