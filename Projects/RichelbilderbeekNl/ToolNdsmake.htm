<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Ndsmake</title>
  <meta name="description" content="C++ Ndsmake"/>
  <meta name="keywords" content="C++ Ndsmake code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolNdsmake.htm">Ndsmake</a></h1>
<p>&nbsp;</p>
<!-- This text is generated by CodeToHtml -->
<p><a href="ToolNdsmake.htm">ndsmake</a> is a <a href="Tools.htm">tool</a> 
to generate an <a href="CppNds.htm">NDS</a> <a href="CppMakefile.htm">makefile</a> 
from a <a href="CppQtCreator.htm">Qt Creator</a> <a href="CppQtProjectFile.htm">project file</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="ToolNdsmakeUse_1_0.png">Where to call ndsmake in Qt Creator (version 1.0)(png)</a></li>
  <li><a href="ToolNdsmakeSource_1_2.zip">Download the Qt Creator project 'ndsmake' (version 1.2)(zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Older downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="ToolNdsmakeSource_1_1.zip">Download the Qt Creator project 'ndsmake' (version 1.1)(zip)</a></li>
  <li><a href="ToolNdsmakeSource_1_0.zip">Download the Qt Creator project 'ndsmake' (version 1.0)(zip)</a></li>
  <li><a href="ToolNdsmakeQtCreator.png">Where to call ndsmake in Qt Creator (png)</a></li>
  <li><a href="ToolNdsmakeSource_0_1.zip">Download the Qt Creator project 'Ndsmake' (version 0.1)(zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="ToolNdsmake.htm">ndsmake</a> history</h2>
<p>&nbsp;</p>
<ul>
  <li>YYYY-MM-DD: version X.Y: [description]</li>
  <li>2010-12-19: version 1.2: use of Ndsmake class</li>
  <li>2010-12-19: version 1.1: added extra commands, use of ProFile class</li>
  <li>2010-10-13: version 1.0: initial release, works from Qt Creator, tested by TestNdsmake</li>
  <li>2010-10-10: version 0.1: incomplete, could not be run from Qt Creator</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="ToolNdsmake.htm">ndsmake</a> wishlist</h2>
<p>&nbsp;</p>
<ul>
  <li>Calling <a href="ToolNdsmake.htm">ndsmake</a> from Qt Creator project file</li>
  <li>Support multi-unit projects</li>
  <li>Support multi-folder projects</li>
  <li>Support graphics compiling (with devkitPro's grit)</li>
  <li>Support debugging from Qt Creator IDE</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 13.04 (raring)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> unknown</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.7.3</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.1.1 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.7.3</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ToolNdsmake.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="ToolNdsmake.pro" border = "1"><tr><td><code>
QT += core<br/>
QT -= gui qt<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; += console static<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; -= app_bundle<br/>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../ToolTestProFile/<a href="CppProFile.htm">profile</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ndsmake.cpp<br/>
QMAKE_CXX_FLAGS_WARN_ON += <a href="CppWextra.htm">-Wextra</a><br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;createholymakefile.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;createmakefile.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../ToolTestProFile/<a href="CppProFile.htm">profile</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ndsmake.h<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>createholymakefile.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="createholymakefile.h" border = "1"><tr><td><code>
<a href="CppIfndef.html">#ifndef</a> CREATEHOLYMAKE<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>_H<br/>
<a href="CppDefine.html">#define</a> CREATEHOLYMAKE<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppFstreamH.html">fstream</a>&gt;<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> CreateHoly<a href="CppMakefile.html">Makefile</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppOfstream.html">std::ofstream</a> f("<a href="CppMakefile.html">Makefile</a>");<br/>
&nbsp;&nbsp;f<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> ".SUFFIXES:\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "ifeq ($(strip $(DEVKITARM)),)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "$(error \"Please set DEVKITARM in your environment. <b><a href="CppExport.html">export</a></b> DEVKITARM=&lt;path to&gt;<a href="CppDevkitArm.html">devkitARM</a>\")\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "endif\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "include $(DEVKITARM)/ds_rules\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# TARGET is the name of the output\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# BUILD is the directory where object files &amp; intermediate files will be placed\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# <a href="CppQmakeSources.html">SOURCES</a> is a list of directories containing source code\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# INCLUDES is a list of directories containing extra <a href="CppHeaderFile.html">header file</a>s\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "TARGET		:=	$(shell basename $(CURDIR))\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "BUILD		:=	build\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<a href="CppQmakeSources.html">SOURCES</a>		:=	gfx source data&nbsp;&nbsp;\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "INCLUDES	:=	include build <a href="CppOperatorDivide.htm">/</a>opt/devkitpro/<a href="CppLibnds.html">libnds</a>-1.4.7/include\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# options <b><a href="CppFor.htm">for</a></b> code generation\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "ARCH	:=	-mthumb <a href="CppOperatorMinus.htm">-</a>mthumb-interwork\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "CFLAGS	:=	-g <a href="CppWall.html">-Wall</a> <a href="CppOperatorMinus.htm">-</a>O2\\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " 			-march=armv5te <a href="CppOperatorMinus.htm">-</a>mtune=arm946e-s <a href="CppOperatorMinus.htm">-</a>fomit-frame-<a href="CppPointer.html">pointer</a>\\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "			-ffast-math \\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "			$(ARCH)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "CFLAGS	<a href="CppOperatorPlusAssign.htm">+=</a>	$(INCLUDE) <a href="CppOperatorMinus.htm">-</a>DARM9\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "CXXFLAGS	:<a href="CppOperatorAssign.htm">=</a> $(CFLAGS) <a href="CppOperatorMinus.htm">-</a>fno-rtti <a href="CppOperatorMinus.htm">-</a>fno-<a href="CppException.html">exception</a>s\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "ASFLAGS	:=	-g $(ARCH)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "LDFLAGS	=	-specs=ds_arm9.specs <a href="CppOperatorMinus.htm">-</a>g $(ARCH) <a href="CppOperatorMinus.htm">-</a>mno-fpu <a href="CppOperatorMinus.htm">-</a>Wl,-Map,$(notdir $*.map)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# <a href="CppAny.htm">any</a> extra libraries we wish to <a href="CppLink.htm">link</a> with the project\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<a href="CppQmakeLibs<a href="CppHeaderFile.htm">.h</a>tm">LIBS</a>	:<a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>lnds9\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# list of directories containing libraries, <b><a href="CppThis.htm">this</a></b> must be the top level containing\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# include and lib\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "LIBDIRS	:=	$(LIB<a href="CppNds.htm">NDS</a>)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# no real need to edit <a href="CppAny.htm">any</a>thing past <b><a href="CppThis.htm">this</a></b> <a href="CppPointer.html">point</a> unless you need to add additional\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# rules <b><a href="CppFor.htm">for</a></b> different file extensions\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "ifneq ($(BUILD),$(notdir $(CURDIR)))\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppExport.html">export</a></b> OUTPUT	:=	$(CURDIR)/$(TARGET)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppExport.html">export</a></b> VPATH	:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(<a href="CppQmakeSources.html">SOURCES</a>),$(CURDIR)/$(dir))\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppExport.html">export</a></b> DEPSDIR	:=	$(CURDIR)/$(BUILD)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "C<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S		:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(<a href="CppQmakeSources.html">SOURCES</a>),$(notdir $(wildcard $(dir)<a href="CppComment.htm">/*</a>.c)))\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "CPP<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S	:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(<a href="CppQmakeSources.html">SOURCES</a>),$(notdir $(wildcard $(dir)<a href="CppComment.htm">/*</a><a href="CppImplementationFile.html">.cpp</a>)))\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "S<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S		:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(<a href="CppQmakeSources.html">SOURCES</a>),$(notdir $(wildcard $(dir)<a href="CppComment.htm">/*</a>.s)))\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "BIN<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S	:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(<a href="CppQmakeSources.html">SOURCES</a>),$(notdir $(wildcard $(dir)<a href="CppComment.htm">/*</a>.bin)))\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# use CXX <b><a href="CppFor.htm">for</a></b> <a href="CppLink.htm">link</a>ing <a href="Cpp.htm">C++</a> projects, CC <b><a href="CppFor.htm">for</a></b> standard C\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "ifeq ($(strip $(CPP<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S)),)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	<b><a href="CppExport.html">export</a></b> LD	:=	$(CC)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppElse.htm">else</a></b>\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	<b><a href="CppExport.html">export</a></b> LD	:=	$(CXX)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "endif\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppExport.html">export</a></b> O<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S	:=	$(BIN<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S:.bin=.o) \\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "					$(CPP<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S:<a href="CppImplementationFile.html">.cpp</a>=.o) $(C<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S:.c=.o) $(S<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S:.s=.o)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppExport.html">export</a></b> INCLUDE	:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(INCLUDES),-I$(CURDIR)/$(dir)) \\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "					$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(LIBDIRS),-I$(dir)/include) \\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "					$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(LIBDIRS),-I$(dir)/include) \\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "					-I$(CURDIR)/$(BUILD)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppExport.html">export</a></b> LIBPATHS	:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(LIBDIRS),-L$(dir)/lib)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> ".PHONY: $(BUILD) clean\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "$(BUILD):\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	@[ <a href="CppOperatorMinus.htm">-</a>d $@ ] <a href="CppOperatorLogicalOr.htm">||</a> mkdir <a href="CppOperatorMinus.htm">-</a>p $@\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	@<a href="CppMake.htm">make</a> <a href="CppOperatorMinus.htm">-</a>-no-print-directory <a href="CppOperatorMinus.htm">-</a>C $(BUILD) <a href="CppOperatorMinus.htm">-</a>f $(CURDIR)/<a href="CppMakefile.html">Makefile</a>\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "clean:\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	@echo clean ...\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	@rm <a href="CppOperatorMinus.htm">-</a>fr $(BUILD) $(TARGET).elf $(TARGET).nds $(TARGET).ds.gba \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppElse.htm">else</a></b>\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "DEPE<a href="CppNds.htm">NDS</a>	:=	$(O<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S:.o=.d)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a> targets\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "$(OUTPUT).nds	: 	$(OUTPUT).elf\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "$(OUTPUT).elf	:	$(O<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "%.o	:	%.bin\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	@echo $(notdir $&lt;)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	$(bin2o)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "-include $(DEPE<a href="CppNds.htm">NDS</a>)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "endif\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------------\n";<br/>
}<br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> CREATEHOLYMAKE<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>createmakefile.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="createmakefile.h" border = "1"><tr><td><code>
<a href="CppIfndef.html">#ifndef</a> CREATEMAKE<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>_H<br/>
<a href="CppDefine.html">#define</a> CREATEMAKE<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppFstreamH.html">fstream</a>&gt;<br/>
<a href="CppInclude.html">#include</a> "../<a href="Tools.htm">Tool</a>TestProFile/<a href="CppProFile.html">profile</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> Create<a href="CppMakefile.html">Makefile</a>(<b><a href="CppConst.html">const</a></b> ProFile&amp; p)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppOfstream.html">std::ofstream</a> f("<a href="CppMakefile.html">Makefile</a>");<br/>
&nbsp;&nbsp;f<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> header<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# <a href="ToolNdsmake.html">ndsmake</a> <a href="CppVersion.html">version</a> 0.2\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# by Richel Bilderbeek\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# www.richelbilderbeek.nl\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# Arguments: " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> p.GetProFilename() <a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> ".SUFFIXES:\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorStreamOut.html">&lt;&lt;</a> "DEVKITARM:=/opt/devkitpro/<a href="CppDevkitArm.html">devkitARM</a>\n" <a href="CppComment.htm">//</a>Bilderbikkel addition<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorStreamOut.html">&lt;&lt;</a> "DEVKITPRO:=/opt/devkitpro\n" <a href="CppComment.htm">//</a>Bilderbikkel addition<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "ifeq ($(strip $(DEVKITARM)),)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "$(error \"Please set DEVKITARM in your environment. <b><a href="CppExport.html">export</a></b> DEVKITARM=&lt;path to&gt;<a href="CppDevkitArm.html">devkitARM</a>\")\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "endif\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "include $(DEVKITARM)/ds_rules\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# TARGET is the name of the output\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# BUILD is the directory where object files &amp; intermediate files will be placed\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# <a href="CppQmakeSources.html">SOURCES</a> is a list of directories containing source code\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# INCLUDES is a list of directories containing extra <a href="CppHeaderFile.html">header file</a>s\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "TARGET :<a href="CppOperatorAssign.htm">=</a> " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> p.GetTarget() <a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n" <a href="CppComment.htm">//</a>Bilderbikkel addition<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "BUILD		:=	build\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<a href="CppQmakeSources.html">SOURCES</a>		:=	gfx source data&nbsp;&nbsp;\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "INCLUDES	:=	include build <a href="CppOperatorDivide.htm">/</a>usr/include <a href="CppOperatorDivide.htm">/</a>opt/devkitpro/<a href="CppLibnds.html">libnds</a>-1.4.7/include\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# options <b><a href="CppFor.htm">for</a></b> code generation\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "ARCH	:=	-mthumb <a href="CppOperatorMinus.htm">-</a>mthumb-interwork\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "CFLAGS	:=	-g <a href="CppWall.html">-Wall</a> <a href="CppOperatorMinus.htm">-</a>O2\\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " 			-march=armv5te <a href="CppOperatorMinus.htm">-</a>mtune=arm946e-s <a href="CppOperatorMinus.htm">-</a>fomit-frame-<a href="CppPointer.html">pointer</a>\\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "			-ffast-math \\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "			$(ARCH)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "CFLAGS	<a href="CppOperatorPlusAssign.htm">+=</a>	$(INCLUDE) <a href="CppOperatorMinus.htm">-</a>DARM9\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "CXXFLAGS	:<a href="CppOperatorAssign.htm">=</a> $(CFLAGS) <a href="CppOperatorMinus.htm">-</a>fno-rtti <a href="CppOperatorMinus.htm">-</a>fno-<a href="CppException.html">exception</a>s\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "ASFLAGS	:=	-g $(ARCH)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "LDFLAGS	=	-specs=ds_arm9.specs <a href="CppOperatorMinus.htm">-</a>g $(ARCH) <a href="CppOperatorMinus.htm">-</a>mno-fpu <a href="CppOperatorMinus.htm">-</a>Wl,-Map,$(notdir $*.map)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# <a href="CppAny.htm">any</a> extra libraries we wish to <a href="CppLink.htm">link</a> with the project\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<a href="CppQmakeLibs<a href="CppHeaderFile.htm">.h</a>tm">LIBS</a>	:<a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a>lnds9\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# list of directories containing libraries, <b><a href="CppThis.htm">this</a></b> must be the top level containing\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# include and lib\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "LIBDIRS	:=	$(LIB<a href="CppNds.htm">NDS</a>)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# no real need to edit <a href="CppAny.htm">any</a>thing past <b><a href="CppThis.htm">this</a></b> <a href="CppPointer.html">point</a> unless you need to add additional\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# rules <b><a href="CppFor.htm">for</a></b> different file extensions\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "ifneq ($(BUILD),$(notdir $(CURDIR)))\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppExport.html">export</a></b> OUTPUT	:=	$(CURDIR)/$(TARGET)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppExport.html">export</a></b> VPATH	:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(<a href="CppQmakeSources.html">SOURCES</a>),$(CURDIR)/$(dir))\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppExport.html">export</a></b> DEPSDIR	:=	$(CURDIR)/$(BUILD)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "C<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S		:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(<a href="CppQmakeSources.html">SOURCES</a>),$(notdir $(wildcard $(dir)<a href="CppComment.htm">/*</a>.c)))\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "CPP<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S	:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(<a href="CppQmakeSources.html">SOURCES</a>),$(notdir $(wildcard $(dir)<a href="CppComment.htm">/*</a><a href="CppImplementationFile.html">.cpp</a>)))\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "S<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S		:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(<a href="CppQmakeSources.html">SOURCES</a>),$(notdir $(wildcard $(dir)<a href="CppComment.htm">/*</a>.s)))\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "BIN<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S	:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(<a href="CppQmakeSources.html">SOURCES</a>),$(notdir $(wildcard $(dir)<a href="CppComment.htm">/*</a>.bin)))\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# use CXX <b><a href="CppFor.htm">for</a></b> <a href="CppLink.htm">link</a>ing <a href="Cpp.htm">C++</a> projects, CC <b><a href="CppFor.htm">for</a></b> standard C\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "ifeq ($(strip $(CPP<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S)),)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	<b><a href="CppExport.html">export</a></b> LD	:=	$(CC)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppElse.htm">else</a></b>\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	<b><a href="CppExport.html">export</a></b> LD	:=	$(CXX)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "endif\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppExport.html">export</a></b> O<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S	:=	$(BIN<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S:.bin=.o) \\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "					$(CPP<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S:<a href="CppImplementationFile.html">.cpp</a>=.o) $(C<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S:.c=.o) $(S<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S:.s=.o)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppExport.html">export</a></b> INCLUDE	:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(INCLUDES),-I$(CURDIR)/$(dir)) \\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "					$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(LIBDIRS),-I$(dir)/include) \\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "					$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(LIBDIRS),-I$(dir)/include) \\\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "					-I$(CURDIR)/$(BUILD)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppExport.html">export</a></b> LIBPATHS	:=	$(<a href="CppBOOST_FOREACH.html">foreach</a> dir,$(LIBDIRS),-L$(dir)/lib)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> ".PHONY: $(BUILD) clean\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "$(BUILD):\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	@[ <a href="CppOperatorMinus.htm">-</a>d $@ ] <a href="CppOperatorLogicalOr.htm">||</a> mkdir <a href="CppOperatorMinus.htm">-</a>p $@\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	@<a href="CppMake.htm">make</a> <a href="CppOperatorMinus.htm">-</a>-no-print-directory <a href="CppOperatorMinus.htm">-</a>C $(BUILD) <a href="CppOperatorMinus.htm">-</a>f $(CURDIR)/<a href="CppMakefile.html">Makefile</a>\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "clean:\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	@echo clean ...\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	@rm <a href="CppOperatorMinus.htm">-</a>fr $(BUILD) $(TARGET).elf $(TARGET).nds $(TARGET).ds.gba \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<b><a href="CppElse.htm">else</a></b>\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "DEPE<a href="CppNds.htm">NDS</a>	:=	$(O<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S:.o=.d)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "# <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a> targets\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "$(OUTPUT).nds	: 	$(OUTPUT).elf\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "$(OUTPUT).elf	:	$(O<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>S)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "%.o	:	%.bin\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	@echo $(notdir $&lt;)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "	$(bin2o)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "-include $(DEPE<a href="CppNds.htm">NDS</a>)\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> " \n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------------\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "endif\n"<br/>
&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "#---------------------------------------------------------------------------------------\n";<br/>
}<br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> CREATEMAKE<a href="CppCfile<a href="CppHeaderFile.htm">.h</a>tm">FILE</a>_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="main.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolNdsmake.html">ndsmake</a>, <a href="Tools.htm">tool</a> to generate <a href="CppNds.htm">NDS</a> <a href="CppMakefile.html">makefile</a> from <a href="CppQtCreator.html">Qt Creator</a> project file<br/>
Copyright (C) 2010 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl/<a href="Tools.htm">Tool</a><a href="CppNdsmake.html">Ndsmake</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppAlgorithmH.html">algorithm</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCassertH.html">cassert</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCstdlibH.html">cstdlib</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppFstreamH.html">fstream</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppIostreamH.html">iostream</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppIteratorH.html">iterator</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppVectorH.html">vector</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> "createholy<a href="CppMakefile.html">makefile</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "create<a href="CppMakefile.html">makefile</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="ToolNdsmake.html">ndsmake</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "../<a href="Tools.htm">Tool</a>TestProFile/<a href="CppProFile.html">profile</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b>* <a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( <a href="CppArgc.htm">argc</a><a href="CppOperatorNotEqual.htm">!=</a> 2<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> <a href="CppString.html">std::string</a>(<a href="CppArgc.htm">argv</a>[1]) <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> "-help"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorLogicalOr.htm">||</a> <a href="CppString.html">std::string</a>(<a href="CppArgc.htm">argv</a>[1]) <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> "<a href="CppOperatorDecrement.htm">--</a>help")<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt;&amp; v <a href="CppOperatorAssign.htm">=</a> <a href="CppNdsmake.html">Ndsmake</a>::GetHelp();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCopy.html">std::copy</a>(v.begin(),v.end(),<a href="CppOstream_iterator.html">std::ostream_iterator</a>&lt;<a href="CppString.html">std::string</a>&gt;(<a href="CppCout.html">std::cout</a>,"\n"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> 0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppString.html">std::string</a>(<a href="CppArgc.htm">argv</a>[1]) <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> "<a href="CppOperatorDecrement.htm">--</a>history")<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt;&amp; v <a href="CppOperatorAssign.htm">=</a> <a href="CppNdsmake.html">Ndsmake</a>::GetHistory();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCopy.html">std::copy</a>(v.begin(),v.end(),<a href="CppOstream_iterator.html">std::ostream_iterator</a>&lt;<a href="CppString.html">std::string</a>&gt;(<a href="CppCout.html">std::cout</a>,"\n"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> 0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppString.html">std::string</a>(<a href="CppArgc.htm">argv</a>[1]) <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> "<a href="CppOperatorDecrement.htm">--</a>licence")<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt;&amp; v <a href="CppOperatorAssign.htm">=</a> <a href="CppNdsmake.html">Ndsmake</a>::GetLicence();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCopy.html">std::copy</a>(v.begin(),v.end(),<a href="CppOstream_iterator.html">std::ostream_iterator</a>&lt;<a href="CppString.html">std::string</a>&gt;(<a href="CppCout.html">std::cout</a>,"\n"));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> 0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppString.html">std::string</a>(<a href="CppArgc.htm">argv</a>[1]) <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> "<a href="CppOperatorDecrement.htm">--</a><a href="CppVersion.html">version</a>")<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.html">std::cout</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> <a href="CppNdsmake.html">Ndsmake</a>::Get<a href="CppVersion.html">Version</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> 0;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start <a href="ToolNdsmake.html">ndsmake</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppNdsmake.html">Ndsmake</a> n(<a href="CppArgc.htm">argv</a>[1]);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy source files<br/>
&nbsp;&nbsp;<a href="CppClog.html">std::clog</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> "<a href="CppNdsmake.html">Ndsmake</a> cmd: " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> n.GetCommand() <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;<a href="CppSystem.html">std::system</a>(n.GetCommand().c_str());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Create <a href="CppMakefile.html">makefile</a> and <a href="CppMake.htm">make</a> it<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Create<a href="CppMakefile.html">Makefile</a>(n.GetProFile());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> s <a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"<b><a href="CppExport.html">export</a></b> DEVKITARM=/opt/devkitpro/<a href="CppDevkitArm.html">devkitARM</a>; "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"<b><a href="CppExport.html">export</a></b> DEVKITPRO=/opt/devkitpro; "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"<a href="CppMake.htm">make</a>;";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppSystem.html">std::system</a>(s.c_str());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Run the <a href="CppNds.htm">NDS</a> file<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppSystem.html">std::system</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<a href="CppString.html">std::string</a>("desmume ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> n.GetProFile().GetTarget()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(".nds")).c_str());<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>ndsmake.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="ndsmake.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolNdsmake.html">ndsmake</a>, <a href="Tools.htm">tool</a> to generate <a href="CppNds.htm">NDS</a> <a href="CppMakefile.html">makefile</a> from <a href="CppQtCreator.html">Qt Creator</a> project file<br/>
Copyright (C) 2010 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl/<a href="Tools.htm">Tool</a><a href="CppNdsmake.html">Ndsmake</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.html">#ifndef</a> <a href="CppNds.htm">NDS</a>MAKE_H<br/>
<a href="CppDefine.html">#define</a> <a href="CppNds.htm">NDS</a>MAKE_H<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppVectorH.html">vector</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> "../<a href="Tools.htm">Tool</a>TestProFile/<a href="CppProFile.html">profile</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppNdsmake.html">Ndsmake</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppNdsmake.html">Ndsmake</a>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> filename);<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; GetCommand() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_command; }<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; GetHelp();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; GetHistory();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; GetLicence();<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> ProFile&amp; GetProFile() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_proFile; }<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <a href="CppString.html">std::string</a> Get<a href="CppVersion.html">Version</a>() { <b><a href="CppReturn.html">return</a></b> "1.2"; }<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a>* <b><a href="CppConst.html">const</a></b> <a href="CppComment.htm">*/</a> <a href="CppString.html">std::string</a> m_command; <a href="CppComment.htm">//</a>A terminal command<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> ProFile m_proFile;<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> CreateCommand() <b><a href="CppConst.html">const</a></b>;<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> <a href="CppNds.htm">NDS</a>MAKE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>ndsmake.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="ndsmake.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="ToolNdsmake.html">ndsmake</a>, <a href="Tools.htm">tool</a> to generate <a href="CppNds.htm">NDS</a> <a href="CppMakefile.html">makefile</a> from <a href="CppQtCreator.html">Qt Creator</a> project file<br/>
Copyright (C) 2010 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl/<a href="Tools.htm">Tool</a><a href="CppNdsmake.html">Ndsmake</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> "<a href="ToolNdsmake.html">ndsmake</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppNdsmake.html">Ndsmake</a>::<a href="CppNdsmake.html">Ndsmake</a>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> filename)<br/>
&nbsp;&nbsp;: m_proFile(filename)<br/>
{<br/>
&nbsp;&nbsp;m_command <a href="CppOperatorAssign.htm">=</a> CreateCommand();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppNdsmake.html">Ndsmake</a>::CreateCommand() <b><a href="CppConst.html">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Copy ProFile files to the needed folders<br/>
&nbsp;&nbsp;<a href="CppString.html">std::string</a> s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> "cd .. ;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>("mkdir ") <a href="CppOperatorPlus.htm">+</a> m_proFile.GetBuildDir() <a href="CppOperatorPlus.htm">+</a> "; "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> "cd " <a href="CppOperatorPlus.htm">+</a> m_proFile.GetBuildDir() <a href="CppOperatorPlus.htm">+</a> "; "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> "mkdir source; ";<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start copying all files<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppSize_t.html">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> m_proFile.GetHeaders().size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppSize_t.html">std::size_t</a> i <a href="CppOperatorAssign.htm">=</a> 0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorPlus.htm">+</a>+i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppBOOST_FOREACH.html">BOOST_FOREACH</a>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; f,m_proFile.GetHeaders())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> f <a href="CppOperatorAssign.htm">=</a> m_proFile.GetHeaders()[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> <a href="CppString.html">std::string</a>("cp ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_proFile.GetCurDirFull()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>("/")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> f<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(" ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_proFile.GetBuildDirFull()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>("/source/")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> f<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>("; ");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppSize_t.html">std::size_t</a> sz <a href="CppOperatorAssign.htm">=</a> m_proFile.GetSources().size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<a href="CppSize_t.html">std::size_t</a> i <a href="CppOperatorAssign.htm">=</a> 0; i<a href="CppOperatorNotEqual.htm">!=</a>sz; <a href="CppOperatorPlus.htm">+</a>+i)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppBOOST_FOREACH.html">BOOST_FOREACH</a>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; f,m_proFile.GetSources())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> f <a href="CppOperatorAssign.htm">=</a> m_proFile.GetSources()[i];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> <a href="CppString.html">std::string</a>("cp ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_proFile.GetCurDirFull()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>("/")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> f<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(" ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> m_proFile.GetBuildDirFull()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>("/source/")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> f<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>("; ");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> s;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppNdsmake.html">Ndsmake</a>::GetHelp()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("Usage: <a href="ToolNdsmake.html">ndsmake</a> [options] [target]");<br/>
&nbsp;&nbsp;v.push_back("");<br/>
&nbsp;&nbsp;v.push_back("[target] must be the full path and filename of your <a href="CppQtCreator.html">Qt Creator</a> project");<br/>
&nbsp;&nbsp;v.push_back("<b><a href="CppFor.htm">for</a></b> example: '<a href="ToolNdsmake.html">ndsmake</a> <a href="CppOperatorDivide.htm">/</a>myqtfolder/myqtproject.pro'");<br/>
&nbsp;&nbsp;v.push_back("");<br/>
&nbsp;&nbsp;v.push_back("Options:");<br/>
&nbsp;&nbsp;v.push_back("&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>-help: prints <b><a href="CppThis.htm">this</a></b> message and exits");<br/>
&nbsp;&nbsp;v.push_back("&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>-history: prints <b><a href="CppThis.htm">this</a></b> <a href="ToolNdsmake.html">ndsmake</a> <a href="CppVersion.html">version</a> history and exits");<br/>
&nbsp;&nbsp;v.push_back("&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>-licence: prints the <a href="ToolNdsmake.html">ndsmake</a> licence and exits");<br/>
&nbsp;&nbsp;v.push_back("&nbsp;&nbsp;<a href="CppOperatorMinus.htm">-</a>-<a href="CppVersion.html">version</a>: print the current <a href="CppVersion.html">version</a> of <a href="ToolNdsmake.html">ndsmake</a> and exits");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppNdsmake.html">Ndsmake</a>::GetHistory()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("YYYY-MM-DD: <a href="CppVersion.html">version</a> X.Y: [description]");<br/>
&nbsp;&nbsp;v.push_back("2010-10-10: <a href="CppVersion.html">version</a> 0.1: incomplete, could not be run from <a href="CppQtCreator.html">Qt Creator</a>");<br/>
&nbsp;&nbsp;v.push_back("2010-10-13: <a href="CppVersion.html">version</a> 1.0: initial release, works from <a href="CppQtCreator.html">Qt Creator</a>, tested by <a href="ToolTestNdsmake.html">TestNdsmake</a>");<br/>
&nbsp;&nbsp;v.push_back("2010-12-19: <a href="CppVersion.html">version</a> 1.1: added extra commands, use of ProFile <b><a href="CppClass.html">class</a></b>");<br/>
&nbsp;&nbsp;v.push_back("2010-12-19: <a href="CppVersion.html">version</a> 1.2: use of <a href="CppNdsmake.html">Ndsmake</a> <b><a href="CppClass.html">class</a></b>");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppNdsmake.html">Ndsmake</a>::GetLicence()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("<a href="ToolNdsmake.html">ndsmake</a>, <a href="Tools.htm">tool</a> to generate <a href="CppNds.htm">NDS</a> <a href="CppMakefile.html">makefile</a> from <a href="CppQtCreator.html">Qt Creator</a> project file");<br/>
&nbsp;&nbsp;v.push_back("Copyright (C) 2010 Richel Bilderbeek");<br/>
&nbsp;&nbsp;v.push_back("");<br/>
&nbsp;&nbsp;v.push_back("This program is free software: you can redistribute it and/or modify");<br/>
&nbsp;&nbsp;v.push_back("it under the terms of the GNU General Public License as published by");<br/>
&nbsp;&nbsp;v.push_back("the Free Software Foundation, either version 3 of the License, or");<br/>
&nbsp;&nbsp;v.push_back("(at your option) any later version.");<br/>
&nbsp;&nbsp;v.push_back("");<br/>
&nbsp;&nbsp;v.push_back("This program is distributed in the hope that it will be useful,");<br/>
&nbsp;&nbsp;v.push_back("but WITHOUT ANY WARRANTY; without even the implied warranty of");<br/>
&nbsp;&nbsp;v.push_back("MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the");<br/>
&nbsp;&nbsp;v.push_back("GNU General Public License for more details.");<br/>
&nbsp;&nbsp;v.push_back("You should have received a copy of the GNU General Public License");<br/>
&nbsp;&nbsp;v.push_back("along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
