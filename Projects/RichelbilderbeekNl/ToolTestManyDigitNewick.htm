<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>TestManyDigitNewick</title>
  <meta name="description" content="C++ TestManyDigitNewick"/>
  <meta name="keywords" content="C++ TestManyDigitNewick code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolTestManyDigitNewick.htm">TestManyDigitNewick</a></h1>
<p>&nbsp;</p>
<!-- No CodeToHtmlInfo about this class with page name ToolTestManyDigitNewick-->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 13.04 (raring)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> unknown</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicGui.png" alt="GUI"/> <a href="CppGuiApplication.htm">GUI application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="Cpp11.htm">C++11</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.7.3</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicBoost.png" alt="Boost"/> <a href="CppBoost.htm">Boost</a>: version 1.49</li>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.1.1 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.7.3</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ToolTestManyDigitNewick.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="ToolTestManyDigitNewick.pro" border = "1"><tr><td><code>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; += core gui<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; += console<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>&nbsp;&nbsp; -= app_bundle<br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp0x.htm">c++11</a><br/>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppBinaryNewickVector.htm">CppBinaryNewickVector</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppMultiVector.htm">CppMultiVector</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewick.htm">CppNewick</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewickVector.htm">CppNewickVector</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a> \<br/>
&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a><br/>
#Debug flag for keeping/removing <a href="CppAssert.htm">assert</a><br/>
<a href="CppQmakeConfig.htm">CONFIG</a>(release,debug|release):<a href="CppQmakeDefines.htm">DEFINES</a> += NDEBUG<br/>
<a href="CppQmakeDefines.htm">DEFINES</a> += DEBUG_SKIP_SAZ_AND_SAO<br/>
#Add the path of the BigInt library<br/>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += ../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30<br/>
#<a href="CppLibrary.htm">Libraries</a><br/>
win32: <a href="CppQmakeLibs.htm">LIBS</a> +=C:/Qt/2010.02.1/qt/lib/libboost_regex.lib<br/>
unix : <a href="CppQmakeLibs.htm">LIBS</a> += -L/usr/local/lib <a href="CppRegex.htm">-lboost_regex</a><br/>
#Using BigInt library by including its source<br/>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += <a href="CppMain.htm">main</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialogtest<a href="CppManyDigitNewick.htm">manydigitnewick</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">about</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppBinaryNewickVector.htm">CppBinaryNewickVector</a>/<a href="CppBinaryNewickVector.htm">binarynewickvector</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>indexer.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>s.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>indextable.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>derivative.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewick.htm">CppNewick</a>/<a href="CppNewick.htm">newick</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>indexer.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>s.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>indextable.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>derivative.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/BigInteger.cc \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/BigIntegerAlgorithms.cc \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/BigIntegerUtils.cc \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/BigUnsigned.cc \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppLibrary.htm">Libraries</a>/bigint-2010.04.30/BigUnsignedInABase.cc \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewickVector.htm">CppNewickVector</a>/<a href="CppNewickVector.htm">newickvector</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>coordinat.cpp<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialogtest<a href="CppManyDigitNewick.htm">manydigitnewick</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">about</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>indexer.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>s.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>indextable.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>derivative.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppMultiVector.htm">CppMultiVector</a>/<a href="CppMultiVector.htm">multivector</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewick.htm">CppNewick</a>/<a href="CppNewick.htm">newick</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppNewickVector.htm">CppNewickVector</a>/<a href="CppNewickVector.htm">newickvector</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/<a href="CppTrace.htm">trace</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>indexer.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>s.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>indextable.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTwoDigitNewick.htm">CppTwoDigitNewick</a>/<a href="CppTwoDigitNewick.htm">twodigitnewick</a>derivative.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppBinaryNewickVector.htm">CppBinaryNewickVector</a>/<a href="CppBinaryNewickVector.htm">binarynewickvector</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>coordinat.h<br/>
<a href="CppFORMS.htm">FORMS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;dialogtest<a href="CppManyDigitNewick.htm">manydigitnewick</a>.ui \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>/<a href="CppQtAboutDialog.htm">qtaboutdialog</a>.ui<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ToolTest<a href="CppManyDigitNewick.htm">ManyDigitNewick</a>.qrc<br/>
<br/>
OTHER_FILES += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppManyDigitNewick.htm">CppManyDigitNewick</a>/<a href="CppManyDigitNewick.htm">manydigitnewick</a>algorithm.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>dialogtestmanydigitnewick.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="dialogtestmanydigitnewick.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Test<a href="CppManyDigitNewick.html">ManyDigitNewick</a>, <a href="Tools.htm">tool</a> to test the two-digit-<a href="CppNewick.html">Newick</a> architecture<br/>
Copyright (C) 2010 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="Tools.htm">Tool</a>Test<a href="CppManyDigitNewick.html">ManyDigitNewick</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.html">#ifndef</a> DIALOGTEST_H<br/>
<a href="CppDefine.html">#define</a> DIALOGTEST_H<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQDialog.html">QDialog</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppNamespace.html">namespace</a></b> Ui {<br/>
&nbsp;&nbsp;<b><a href="CppClass.html">class</a></b> DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppClass.html">class</a></b> DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a> : <b><a href="CppPublic.html">public</a></b> <a href="CppQDialog.html">QDialog</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.html">Q_OBJECT</a><br/>
<br/>
<b><a href="CppPublic.html">public</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.html">explicit</a></b> DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>(<a href="CppQWidget.html">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;~DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> Get<a href="CppVersion.html">Version</a>();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; Get<a href="CppVersion.html">Version</a>History();<br/>
<br/>
<b><a href="CppProtected.html">protected</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> changeEvent(<a href="CppQEvent.html">QEvent</a> *e);<br/>
<br/>
<b><a href="CppPrivate.html">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppUi.htm">Ui</a>::DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a> *ui;<br/>
<br/>
<b><a href="CppPrivate.html">private</a></b> <b><a href="CppSlots.html">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> on_button_calculate_clicked();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnAnyChange();<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> On<a href="CppAbout.html">About</a>Click();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppDouble.html">double</a></b> <a href="CppGetRandomUniform.html">GetRandomUniform</a>();<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> DIALOGTEST_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>dialogtestmanydigitnewick.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="dialogtestmanydigitnewick.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
Test<a href="CppManyDigitNewick.html">ManyDigitNewick</a>, <a href="Tools.htm">tool</a> to test the two-digit-<a href="CppNewick.html">Newick</a> architecture<br/>
Copyright (C) 2010 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="Tools.htm">Tool</a>Test<a href="CppManyDigitNewick.html">ManyDigitNewick</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppAlgorithmH.html">algorithm</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppBOOST_FOREACH.html">foreach</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppLexical_cast.html">lexical_cast</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/numeric/con<a href="CppVersion.html">version</a>/cast<a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQDesktopWidget.html">QDesktopWidget</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> "<a href="CppBigInt.html">BigInteger</a><a href="CppHeaderFile.htm">.h</a>h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> "<a href="CppAbout.html">about</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppBinaryNewickVector.html">binarynewickvector</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppNewickVector.html">newickvector</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "dialogtest<a href="CppManyDigitNewick.html">manydigitnewick</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppManyDigitNewick.html">manydigitnewick</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppManyDigitNewick.html">manydigitnewick</a>indexer<a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppNewick.html">newick</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppQtAboutDialog.html">qtaboutdialog</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppTwoDigitNewick.html">twodigitnewick</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "ui_dialogtest<a href="CppManyDigitNewick.html">manydigitnewick</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>::DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>(<a href="CppQWidget.html">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQDialog.html">QDialog</a>(parent,<a href="CppQt.htm">Qt</a>::Window),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui(<b><a href="CppNew.htm">new</a></b> <a href="CppUi.htm">Ui</a>::DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>)<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;setupUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;<a href="CppQObject.html">QObject</a>::connect(ui-&gt;edit_<a href="CppNewick.html">newick</a>,<a href="CppSignalMacro.html">SIGNAL</a>(textChanged(<a href="CppQString.html">QString</a>)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(OnAnyChange()));<br/>
&nbsp;&nbsp;<a href="CppQObject.html">QObject</a>::connect(ui-&gt;edit_theta,<a href="CppSignalMacro.html">SIGNAL</a>(textChanged(<a href="CppQString.html">QString</a>)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(OnAnyChange()));<br/>
<br/>
&nbsp;&nbsp;<a href="CppQObject.html">QObject</a>::connect(ui-&gt;button_about,<a href="CppSignalMacro.html">SIGNAL</a>(clicked()),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(On<a href="CppAbout.html">About</a>Click()));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Put the dialog in the screen center<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppQRect.html">QRect</a> screen <a href="CppOperatorAssign.htm">=</a> <a href="CppQApplication.html">QApplication</a>::desktop()-&gt;screenGeometry();<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;move( screen.center() <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;rect().center() );<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set the text of edit_theta to the value of 10.0,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>handled by the locale<br/>
&nbsp;&nbsp;ui-&gt;edit_theta-&gt;setText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQString.html">QString</a>(<a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(10.0).c_str()));<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Run some test <b><a href="CppCase.htm">case</a></b>s<br/>
&nbsp;&nbsp;<a href="CppIfndef.html">#ifndef</a> <a href="CppNDEBUG.html">NDEBUG</a><br/>
&nbsp;&nbsp;<a href="CppNewick.html">Newick</a>::Test();<br/>
&nbsp;&nbsp;<a href="CppBinaryNewickVector.html">BinaryNewickVector</a>::Test();<br/>
&nbsp;&nbsp;<a href="CppNewickVector.html">NewickVector</a>::Test();<br/>
&nbsp;&nbsp;<a href="CppTwoDigitNewick.html">TwoDigitNewick</a>::Test();<br/>
&nbsp;&nbsp;<a href="CppManyDigitNewick.html">ManyDigitNewick</a>::Test();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v <a href="CppOperatorAssign.htm">=</a> <a href="CppNewick.html">Newick</a>::<a href="CppCreateValidNewicks.html">CreateValidNewicks</a>();<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppBigInt.html">BigInteger</a> max_complexity <a href="CppOperatorAssign.htm">=</a> 10000;<br/>
&nbsp;&nbsp;<a href="CppBOOST_FOREACH.html">BOOST_FOREACH</a>(<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp; s,v)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Only test binary <a href="CppNewick.html">Newick</a>s and relatively small <a href="CppNewick.html">Newick</a>s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppNewick.html">Newick</a>::<a href="CppCalcComplexity.html">CalcComplexity</a>(<a href="CppNewick.html">Newick</a>::<a href="CppStringToNewick.html">StringToNewick</a>(s)) &gt; max_complexity)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppContinue.html">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Start the tests<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> theta <a href="CppOperatorAssign.htm">=</a> 1.0 <a href="CppOperatorPlus.htm">+</a> <a href="CppGetRandomUniform.html">GetRandomUniform</a>() * 10.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppIfndef.html">#ifndef</a> N<a href="CppTRACE.html">TRACE</a>_BILDERBIKKEL<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppNewick.html">Newick</a>::<a href="CppIsBinaryNewick.html">IsBinaryNewick</a>(<a href="CppNewick.html">Newick</a>::<a href="CppStringToNewick.html">StringToNewick</a>(s)))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> t <a href="CppOperatorAssign.htm">=</a> <a href="CppString.html">std::string</a>("Testing ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(" with complexity ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ::big<a href="CppInt.html">Integer</a>ToString(<a href="CppNewick.html">Newick</a>::<a href="CppCalcComplexity.html">CalcComplexity</a>(<a href="CppNewick.html">Newick</a>::<a href="CppStringToNewick.html">StringToNewick</a>(s)))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppString.html">std::string</a>(" <b><a href="CppFor.htm">for</a></b> three tests");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.html">TRACE</a>(t);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppEndif.html">#endif</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> p2 <a href="CppOperatorAssign.htm">=</a> <a href="CppTwoDigitNewick.html">TwoDigitNewick</a>::CalculateProbability(s,theta);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> p5 <a href="CppOperatorAssign.htm">=</a> <a href="CppNewickVector.html">NewickVector</a>::CalculateProbability(s,theta);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> p6 <a href="CppOperatorAssign.htm">=</a> <a href="CppManyDigitNewick.html">ManyDigitNewick</a>::CalculateProbability(s,theta);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( !<a href="CppNewick.html">Newick</a>::<a href="CppFuzzy_equal_to.html">fuzzy_equal_to</a>()(p2,p5))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorLogicalOr.htm">||</a> !<a href="CppNewick.html">Newick</a>::<a href="CppFuzzy_equal_to.html">fuzzy_equal_to</a>()(p2,p6))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCerr.html">std::cerr</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "ERROR: DIFFERENT PROBABILITIES FOUND"&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "FOR UNARY/BINARY NEWICK " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> s <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Probability (<a href="CppTwoDigitNewick.html">TwoDigitNewick</a>): "&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorStreamOut.html">&lt;&lt;</a> p2 <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Probability (<a href="CppNewickVector.html">NewickVector</a>): "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorStreamOut.html">&lt;&lt;</a> p5 <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Probability (<a href="CppManyDigitNewick.html">ManyDigitNewick</a>): "&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> p6 <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppNewick.html">Newick</a>::<a href="CppFuzzy_equal_to.html">fuzzy_equal_to</a>()(p2,p5));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAssert.html">assert</a>(<a href="CppNewick.html">Newick</a>::<a href="CppFuzzy_equal_to.html">fuzzy_equal_to</a>()(p2,p6));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Trinary <a href="CppNewick.html">Newick</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.html">TRACE</a>("Testing trinary <a href="CppNewick.html">Newick</a>");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> p5 <a href="CppOperatorAssign.htm">=</a> <a href="CppNewickVector.html">NewickVector</a>::CalculateProbability(s,theta);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> p6 <a href="CppOperatorAssign.htm">=</a> <a href="CppManyDigitNewick.html">ManyDigitNewick</a>::CalculateProbability(s,theta);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> ( !<a href="CppNewick.html">Newick</a>::<a href="CppFuzzy_equal_to.html">fuzzy_equal_to</a>()(p5,p6))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCerr.html">std::cerr</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "WARNING: DIFFERENT PROBABILITIES FOUND"&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "FOR HIGHER-ARITY NEWICK " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> s <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Probability (<a href="CppNewickVector.html">NewickVector</a>): "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorStreamOut.html">&lt;&lt;</a> p5 <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n'<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Probability (<a href="CppManyDigitNewick.html">ManyDigitNewick</a>): "&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> p6 <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.html">#endif</a><br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.html">#ifndef</a> <a href="CppNDEBUG.html">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle(<b><a href="CppThis.htm">this</a></b>-&gt;windowTitle() <a href="CppOperatorPlus.htm">+</a> <a href="CppQString.html">QString</a>(" (<a href="CppDebug.html">Debug</a>)"));<br/>
&nbsp;&nbsp;<a href="CppPreElse.html">#else</a><br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setWindowTitle(<b><a href="CppThis.htm">this</a></b>-&gt;windowTitle() <a href="CppOperatorPlus.htm">+</a> <a href="CppQString.html">QString</a>(" (Release)"));<br/>
&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(1<a href="CppOperatorEqual.htm">==</a>2 <a href="CppOperatorLogicalAnd.html">&amp;&amp;</a> "All <a href="CppAssert.html">assert</a>s are turned off");<br/>
&nbsp;&nbsp;<a href="CppEndif.html">#endif</a><br/>
<br/>
<br/>
<br/>
&nbsp;&nbsp;OnAnyChange();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>::~DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppDelete.html">delete</a></b> ui;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>::changeEvent(<a href="CppQEvent.html">QEvent</a> *e)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQDialog.html">QDialog</a>::changeEvent(e);<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.html">switch</a></b> (e-&gt;type()) {<br/>
&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQEvent.html">QEvent</a>::LanguageChange:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;retranslateUi(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.html">break</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppDefault.html">default</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppBreak.html">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/Cpp<a href="CppGetRandomUniform.html">GetRandomUniform</a>.html<br/>
<b><a href="CppDouble.html">double</a></b> DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>::<a href="CppGetRandomUniform.html">GetRandomUniform</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> <b><a href="CppStatic_cast.html">static_cast</a></b>&lt;<b><a href="CppDouble.html">double</a></b>&gt;(<a href="CppRand.html">std::rand</a>())/<b><a href="CppStatic_cast.html">static_cast</a></b>&lt;<b><a href="CppDouble.html">double</a></b>&gt;(<a href="CppRAND_MAX.html">RAND_MAX</a>);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>::Get<a href="CppVersion.html">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> "1.0";<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>::Get<a href="CppVersion.html">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("2011-03-02: <a href="CppVersion.html">version</a> 1.0: initial <a href="CppVersion.html">version</a> copied and from <a href="ToolTestTwoDigitNewick.html">TestTwoDigitNewick</a>");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>::OnAnyChange()<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;button_calculate-&gt;setEnabled(<b><a href="CppFalse.html">false</a></b>);<br/>
&nbsp;&nbsp;ui-&gt;edit_text-&gt;clear();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check <a href="CppNewick.html">Newick</a>s<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> s <a href="CppOperatorAssign.htm">=</a> ui-&gt;edit_<a href="CppNewick.html">newick</a>-&gt;text().toStdString();<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.html">Newick</a>::<a href="CppIsNewick.html">IsNewick</a>(s))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText("Not a valid <a href="CppNewick.html">Newick</a>");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!<a href="CppNewick.html">Newick</a>::<a href="CppIsBinaryNewick.html">IsBinaryNewick</a>(<a href="CppNewick.html">Newick</a>::<a href="CppStringToNewick.html">StringToNewick</a>(s)))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText("Not a binary <a href="CppNewick.html">Newick</a>");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText("<a href="CppNewick.html">Newick</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQString.html">QString</a>(s.c_str()));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check theta<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<b><a href="CppDouble.html">double</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a>(ui-&gt;edit_theta-&gt;text().toStdString()));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.html">catch</a></b> (<a href="CppBad_lexical_cast.html">boost::bad_lexical_cast</a>&amp;)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText("Not a valid value <b><a href="CppFor.htm">for</a></b> theta");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> theta <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<b><a href="CppDouble.html">double</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a>(ui-&gt;edit_theta-&gt;text().toStdString()));<br/>
&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText("Theta: "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppQString.html">QString</a>(<a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(theta).c_str()));<br/>
<br/>
&nbsp;&nbsp;ui-&gt;button_calculate-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/\warning: theta must be set before <a href="CppNewick.html">Newick</a>Indexer is created<br/>
&nbsp;&nbsp;<a href="CppManyDigitNewick.html">ManyDigitNewick</a>::SetTheta(theta);<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppNewickVector.html">NewickVector</a> n(s);<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppManyDigitNewick.html">ManyDigitNewick</a>Indexer i(n,theta);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>View all indices in the index table<br/>
&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a>*<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppVector.html">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt;&amp; index_table<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> i.GetIndexTable().Get();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> maxx <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.html">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(index_table.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=0; x<a href="CppOperatorNotEqual.htm">!=</a>maxx; <a href="CppOperatorPlus.htm">+</a>+x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> maxy <a href="CppOperatorAssign.htm">=</a> <a href="CppNumeric_cast.html">boost::numeric_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(index_table[x].size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=0; y<a href="CppOperatorNotEqual.htm">!=</a>maxy; <a href="CppOperatorPlus.htm">+</a>+y)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> z <a href="CppOperatorAssign.htm">=</a> index_table[x][y];<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (!z) <b><a href="CppContinue.html">continue</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a> s <a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"F <a href="CppOperatorAssign.htm">=</a> "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(z)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> " <a href="CppOperatorAssign.htm">=</a> ("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> ","<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(y)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> "): F' <a href="CppOperatorAssign.htm">=</a> { ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> all derivatives<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBOOST_FOREACH.html">BOOST_FOREACH</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> M<a href="CppAny.htm">any</a>DigitDerivative&amp; di,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i.Get<a href="CppNewick.html">Newick</a>(z).GetDerivatives())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorAssign.htm">=</a> s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(di.m_derived_index)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> " ("<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(di.m_value_changed)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> "-&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(di.m_value_changed-1)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> "), ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s[s.size()-2]=' ';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s[s.size()-1]='}';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText(s.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Just display all <a href="CppNewick.html">Newick</a>s<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> n_<a href="CppNewick.html">newick</a>s <a href="CppOperatorAssign.htm">=</a> i.Get<a href="CppNewick.html">Newick</a>s().Size();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> ix=0; ix<a href="CppOperatorNotEqual.htm">!=</a>n_<a href="CppNewick.html">newick</a>s; <a href="CppOperatorPlus.htm">+</a>+ix)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppManyDigitNewick.html">ManyDigitNewick</a>&amp; n <a href="CppOperatorAssign.htm">=</a> i.Get<a href="CppNewick.html">Newick</a>s().Get<a href="CppNewick.html">Newick</a>(ix);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a> s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(ix)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> " : ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a>i.<a href="CppConstructor.html">Construct</a><a href="CppNewick.html">Newick</a>(ix).ToStr() <a href="CppOperatorPlus.htm">+</a> " : ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n.IsProbabilityKnown())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a><a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(n.GetProbability());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a>"[unknown probability]";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (n.IsComplete())<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a>", ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a><a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(n.<a href="CppGetSum.html">GetSum</a>TermsAboveZero());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a>", ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a><a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(n.<a href="CppGetSum.html">GetSum</a>TermsAboveOne());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a>", ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a><a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(n.GetDenominator());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a>", [not complete]";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText(<a href="CppQString.html">QString</a>(s.c_str()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display misc information<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> "Probability of <a href="CppNewick.html">Newick</a>: "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(i.GetProbability());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText(<a href="CppQString.html">QString</a>(s.c_str()));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> s<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> "Number of reserved indices: "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(i.GetReserved());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText(<a href="CppQString.html">QString</a>(s.c_str()));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Display IndexTable use<br/>
&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a>*<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> n_non_zero&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> i.GetIndexTable().GetNumUsed();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> n_allocated <a href="CppOperatorAssign.htm">=</a> i.GetIndexTable().GetNumAllocated();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> f_used<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> (n_allocated <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> 0 ? 0.0 :<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppNumeric_cast.html">boost::numeric_cast</a>&lt;<b><a href="CppDouble.html">double</a></b>&gt;(n_non_zero)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a> <a href="CppNumeric_cast.html">boost::numeric_cast</a>&lt;<b><a href="CppDouble.html">double</a></b>&gt;(n_allocated));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText(<a href="CppQString.html">QString</a>("Indices allocated: ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppQString.html">QString</a>(<a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(n_allocated).c_str()) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText(<a href="CppQString.html">QString</a>("Indices used: ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppQString.html">QString</a>(<a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(n_non_zero).c_str()) );<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText(<a href="CppQString.html">QString</a>("Fraction used: ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppQString.html">QString</a>(<a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(f_used).c_str()) );<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check <a href="CppCalcNumOfCombinations.html">CalcNumOfCombinations</a> and <a href="CppCalcNumOfSymmetries.html">CalcNumOfSymmetries</a><br/>
&nbsp;&nbsp;<a href="CppOperatorDivide.htm">/</a>*<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppNewickVector.html">NewickVector</a> n(s);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppBigInt.html">BigInteger</a> n_s <a href="CppOperatorAssign.htm">=</a> n.<a href="CppCalcNumOfSymmetries.html">CalcNumOfSymmetries</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppBigInt.html">BigInteger</a> n_c <a href="CppOperatorAssign.htm">=</a> n.<a href="CppCalcNumOfCombinations.html">CalcNumOfCombinations</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQString.html">QString</a>("Number of symmetries: ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppQString.html">QString</a>(<a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(n_s).c_str()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQString.html">QString</a>("Number of combinations: ")<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppQString.html">QString</a>(big<a href="CppInt.html">Integer</a>ToString(n_c).c_str()));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">*/</a><br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>::On<a href="CppAbout.html">About</a>Click()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.html">About</a> <a href="CppAbout.html">about</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Richel Bilderbeek",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Test<a href="CppManyDigitNewick.html">ManyDigitNewick</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="Tools.htm">tool</a> to test the two-digit-<a href="CppNewick.html">Newick</a> architecture",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"the 20th of February 2011",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2010-2011",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"http://www.richelbilderbeek.nl/<a href="Tools.htm">Tool</a>Test<a href="CppManyDigitNewick.html">ManyDigitNewick</a>",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.html">Version</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.html">Version</a>History());<br/>
<br/>
&nbsp;&nbsp;<a href="CppAbout.html">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.html">Library</a>("BigInt: <a href="CppVersion.html">version</a> 2010.04.30");<br/>
&nbsp;&nbsp;<a href="CppAbout.html">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.html">Library</a>("<a href="CppNewickVector.html">NewickVector</a>: <a href="CppVersion.html">version</a> " <a href="CppOperatorPlus.htm">+</a> <a href="CppNewickVector.html">NewickVector</a>::Get<a href="CppVersion.html">Version</a>());<br/>
&nbsp;&nbsp;<a href="CppAbout.html">about</a>.<a href="CppAdd.htm">Add</a><a href="CppLibrary.html">Library</a>("<a href="CppManyDigitNewick.html">ManyDigitNewick</a>: <a href="CppVersion.html">version</a> " <a href="CppOperatorPlus.htm">+</a> <a href="CppManyDigitNewick.html">ManyDigitNewick</a>::Get<a href="CppVersion.html">Version</a>());<br/>
<br/>
&nbsp;&nbsp;<a href="CppQtAboutDialog.html">QtAboutDialog</a> d(<a href="CppAbout.html">about</a>);<br/>
&nbsp;&nbsp;d.exec();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a>::on_button_calculate_clicked()<br/>
{<br/>
&nbsp;&nbsp;ui-&gt;edit_text-&gt;clear();<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check <a href="CppNewick.html">Newick</a>s<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> s <a href="CppOperatorAssign.htm">=</a> ui-&gt;edit_<a href="CppNewick.html">newick</a>-&gt;text().toStdString();<br/>
&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText("<a href="CppNewick.html">Newick</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppQString.html">QString</a>(s.c_str()));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Check theta<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> theta <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<b><a href="CppDouble.html">double</a></b>&gt;(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppString.html">std::string</a>(ui-&gt;edit_theta-&gt;text().toStdString()));<br/>
&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText("Theta: "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppQString.html">QString</a>(<a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(theta).c_str()));<br/>
<br/>
&nbsp;&nbsp;ui-&gt;button_calculate-&gt;setEnabled(<b><a href="CppTrue.htm">true</a></b>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/\warning: theta must be set before <a href="CppNewick.html">Newick</a>Indexer is created<br/>
&nbsp;&nbsp;<a href="CppManyDigitNewick.html">ManyDigitNewick</a>::SetTheta(theta);<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppNewickVector.html">NewickVector</a> n(s);<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppManyDigitNewick.html">ManyDigitNewick</a>Indexer i(n,theta);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> probability_str<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorAssign.htm">=</a> "Probability of <a href="CppNewick.html">Newick</a>: "<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(i.GetProbability());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ui-&gt;edit_text-&gt;appendPlainText(<a href="CppQString.html">QString</a>(probability_str.c_str()));<br/>
<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="main.cpp" border = "1"><tr><td><code>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCmathH.html">cmath</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCtimeH.html">ctime</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCstdlibH.html">cstdlib</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppFstreamH.html">fstream</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppIomanipH.html">iomanip</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppIostreamH.html">iostream</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppLexical_cast.html">lexical_cast</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQApplication.html">QApplication</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> "<a href="CppBigInt.html">BigInteger</a><a href="CppHeaderFile.htm">.h</a>h"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.html">#include</a> "dialogtest<a href="CppManyDigitNewick.html">manydigitnewick</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b>* <a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.html">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;DialogTest<a href="CppManyDigitNewick.html">ManyDigitNewick</a> w;<br/>
&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> a.exec();<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>zip.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="zip.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
#zip packs all the files to port into a single .zip file,<br/>
#minicking the same folder structure<br/>
#Folder structure<br/>
# *<br/>
#&nbsp;&nbsp; * Classes<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppAbout<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppBinaryNewickVector<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppNewick<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppQtAboutDialog<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * CppTwoDigitNewick<br/>
#&nbsp;&nbsp; * Libraries<br/>
#&nbsp;&nbsp;&nbsp;&nbsp; * bigint-2010.04.30<br/>
#&nbsp;&nbsp; * Tools<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;* ToolTestTwoDigitNewick<br/>
echo "Mimicking file structure"<br/>
mkdir temp_zip<br/>
mkdir temp_zip/Classes<br/>
mkdir temp_zip/Classes/CppAbout<br/>
mkdir temp_zip/Classes/CppBinaryNewickVector<br/>
mkdir temp_zip/Classes/CppNewick<br/>
mkdir temp_zip/Classes/CppQtAboutDialog<br/>
mkdir temp_zip/Classes/CppTwoDigitNewick<br/>
mkdir temp_zip/Libraries<br/>
mkdir temp_zip/Libraries/bigint-2010.04.30<br/>
mkdir temp_zip/Tools<br/>
mkdir temp_zip/Tools/ToolTestTwoDigitNewick<br/>
<br/>
echo "Copying files"<br/>
cp ../../Classes/CppAbout/*.* temp_zip/Classes/CppAbout<br/>
cp ../../Classes/CppBinaryNewickVector/*.* temp_zip/Classes/CppBinaryNewickVector<br/>
cp ../../Classes/CppNewick/*.* temp_zip/Classes/CppNewick<br/>
cp ../../Classes/CppQtAboutDialog/*.* temp_zip/Classes/CppQtAboutDialog<br/>
cp ../../Classes/CppTwoDigitNewick/*.* temp_zip/Classes/CppTwoDigitNewick<br/>
cp ../../Libraries/bigint-2010.04.30/*.* temp_zip/Libraries/bigint-2010.04.30<br/>
cp ../../Tools/ToolTestTwoDigitNewick/*.* temp_zip/Tools/ToolTestTwoDigitNewick<br/>
<br/>
echo "Compressing files"<br/>
cd temp_zip<br/>
<br/>
zip -r ToolTestTwoDigitNewickSource_2_0 Classes<br/>
zip -r ToolTestTwoDigitNewickSource_2_0 Libraries<br/>
zip -r ToolTestTwoDigitNewickSource_2_0 Tools<br/>
<br/>
echo "Copying zipped file from temp folder to this folder"<br/>
<br/>
cd ..<br/>
cp temp_zip/ToolTestTwoDigitNewickSource_2_0.zip ToolTestTwoDigitNewickSource_2_0.zip<br/>
<br/>
echo "Cleaning up"<br/>
#Classes<br/>
rm temp_zip/Classes/CppAbout/*.*<br/>
rm temp_zip/Classes/CppBinaryNewickVector/*.*<br/>
rm temp_zip/Classes/CppNewick/*.*<br/>
rm temp_zip/Classes/CppQtAboutDialog/*.*<br/>
rm temp_zip/Classes/CppTwoDigitNewick/*.*<br/>
rmdir temp_zip/Classes/CppAbout<br/>
rmdir temp_zip/Classes/CppBinaryNewickVector<br/>
rmdir temp_zip/Classes/CppNewick<br/>
rmdir temp_zip/Classes/CppQtAboutDialog<br/>
rmdir temp_zip/Classes/CppTwoDigitNewick<br/>
rmdir temp_zip/Classes<br/>
#Libraries<br/>
rm temp_zip/Libraries/bigint-2010.04.30/*.*<br/>
rmdir temp_zip/Libraries/bigint-2010.04.30<br/>
rmdir temp_zip/Libraries<br/>
#Tools<br/>
rm temp_zip/Tools/ToolTestTwoDigitNewick/*.*<br/>
rmdir temp_zip/Tools/ToolTestTwoDigitNewick<br/>
rmdir temp_zip/Tools<br/>
rm temp_zip/*.*<br/>
rmdir temp_zip<br/>
echo "Done"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
