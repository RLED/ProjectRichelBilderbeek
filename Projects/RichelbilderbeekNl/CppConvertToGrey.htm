<title>ConvertToGrey</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
 </o:DocumentProperties>
</xml><![endif]-->
<style>



<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>ConvertToGrey</title>
  <meta name="description" content="C++ ConvertToGrey"/>
  <meta name="keywords" content="C++ ConvertToGrey Convert To Grey"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppConvertToGrey.htm">ConvertToGrey</a></h1>
<p>&nbsp;</p>
<p><a href="CppConvertToGrey.htm">ConvertToGrey</a> is a <a href="CppGraphics.htm">graphics</a> <a href="CppCodeSnippets.htm"> code
snippet</a> to convert a color <a href="CppVcl.htm">VCL</a> <a href="CppTImage.htm">TImage</a> to a grey <a href="CppTImage.htm">TImage</a>.</p>
<p>&nbsp;</p>
<p>In <a href="CppConvertToGrey.PNG">the 'ConvertToGrey' example image</a> you see an original color image, this image 
<a href="CppConvertToGrey.htm">converted to grey</a> and the result of <a href="CppDoHistogramEqualization.htm">a histogram equalization</a> on the grey image.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppConvertToGrey.PNG">View an example of an image converted to grey</a></li>
  <li><a href="CppConvertToGrey.txt">View the code of 'ConvertToGrey' in plain text</a></li>
</ul>
<p>&nbsp;</p>


<p><a href="CppComment.htm">//</a>From
http://www.richelbilderbeek.nl/CppConvertToGrey.htm</p>

<p><b> <a href="CppVoid.htm">void</a> </b>  ConvertToGrey(<b><a
href="CppConst.htm">const</a></b>   <a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b>
source, <a href="CppTImage.htm">TImage</a> * <b><a href="CppConst.htm">const</a></b>
target)</p>

<p>{</p>

<p>
 <a href="CppAssert.htm">assert</a>(source!=0 &amp;&amp; &quot;Source
image is NULL&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>(target!=0 &amp;&amp; &quot;Target
image is NULL&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>(source-&gt;Picture-&gt;Bitmap!=0
&amp;&amp; &quot;Source bitmap is NULL&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>(target-&gt;Picture-&gt;Bitmap!=0
&amp;&amp; &quot;Target bitmap is NULL&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>(source-&gt;Picture-&gt;Bitmap-&gt;PixelFormat
== pf24bit &amp;&amp; &quot;Source bitmap must be 24 bit&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>(target-&gt;Picture-&gt;Bitmap-&gt;PixelFormat
== pf24bit &amp;&amp; &quot;Target bitmap must be 24 bit&quot;);</p>

<p>
 <a href="CppComment.htm">//</a>Get the width and height from the source</p>

<p>
 <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>
width    =
source-&gt;Picture-&gt;Bitmap-&gt;Width;</p>

<p>
 <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>
height = source-&gt;Picture-&gt;Bitmap-&gt;Height;</p>

<p>
 <a href="CppComment.htm">//</a>Set the target's width and height</p>

<p>
 target-&gt;Picture-&gt;Bitmap-&gt;Width  
 = width;</p>

<p>
 target-&gt;Picture-&gt;Bitmap-&gt;Height = height;</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b>
y=0; y!=height; ++y)</p>

<p>
 {</p>

<p> 
 <b><a href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b>
<b><a href="CppChar.htm">char</a></b> * lineSource</p>

<p>     = <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b>
<b><a href="CppChar.htm">char</a></b> *&gt;(</p>

<p>       source-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);</p>

<p> 
 <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>
* lineTarget</p>

<p>     = <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>
*&gt;(</p>

<p>       target-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);</p>

<p> 
 <b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b>
x=0; x!=width; ++x)</p>

<p> 
 {</p>

<p>     <b><a href="CppConst.htm">const</a></b> int grey</p>

<p>       = (lineSource[x*3+0] + lineSource[x*3+1] +
lineSource[x*3+2]) / 3;</p>

<p>&nbsp;</p>

<p>     lineTarget[x*3+0]=grey; //Blue</p>

<p>     lineTarget[x*3+1]=grey; //Green</p>

<p>     lineTarget[x*3+2]=grey; //Red</p>

<p> 
 }</p>

<p>
 }</p>

<p>}</p>

<p>&nbsp;</p>

</div>


<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
