 
<title>GetGreyness</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>C++ Code Snippet GetGreyness</o:Subject>
  <o:Author>Richel Bilderbeek</o:Author>
  <o:Keywords>C++ Code Snippet Richel Bilderbeek GetGreyness get pixel pixels grey greyness gray grayness VCL</o:Keywords>
  <o:Description>From http://www.richelbilderbeek.nl</o:Description>
  <o:LastAuthor>Richel Bilderbeek</o:LastAuthor>
  <o:Revision>17</o:Revision>
  <o:TotalTime>138</o:TotalTime>
  <o:Created>2008-01-02T10:00:00Z</o:Created>
  <o:LastSaved>2008-07-22T11:52:00Z</o:LastSaved>
  <o:Pages>3</o:Pages>
  <o:Words>1084</o:Words>
  <o:Characters>6181</o:Characters>
  <o:Category>C++ Code Snippet Richel Bilderbeek GetGreyness</o:Category>
  <o:Manager>Richel Bilderbeek</o:Manager>
  <o:Company>Richel Bilderbeek</o:Company>
  <o:Lines>51</o:Lines>
  <o:Paragraphs>12</o:Paragraphs>
  <o:CharactersWithSpaces>7590</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
 
</head>

 

 

<p><a
href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>

<p><a
href="CppCodeSnippets.htm">Go back to Richel Bilderbeek's Code Snippets</a>.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h1>(<a href="Cpp.htm">C++</a>)
<a href="CppGetGreyness.htm">GetGreyness</a></h1>

<p>&nbsp;</p>

<p><a
href="CppGraphics.htm">Graphics</a> <a
href="CppCodeSnippets.htm"> code
snippet</a> to get the greyness of one or more pixels of a <a
href="CppVcl.htm">VCL</a> <a href="CppTImage.htm">TImage</a>.</p>

<p></p>

<p>The
greyness of a pixels is the averaged red, green and blue value of it. You can
get a single pixel's greyness, or from a square of pixels.</p>

<p>&nbsp;</p>

<p>To
set pixels' their greynesses, use <a href="CppSetGreyness.htm">the SetGreyness
function</a>.</p>

<p>&nbsp;</p>

<p>* <a
href="CppGetGreyness.txt">View the code of 'GetGreyness' in plain text</a>.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;<a href="CppCassertH.htm">cassert</a>&gt;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;vcl.h&gt;</p>

<p>&nbsp;</p>

<p>//Get a pixel's greyness</p>

<p>//From
http://www.richelbilderbeek.nl/CppGetGreyness.htm</p>

<p><b> <a href="CppConst.htm">const</a> <a
href="CppUnsigned.htm">unsigned</a> <a href="CppChar.htm">char</a> </b>  <a href="CppGetGreyness.htm">GetGreyness</a>(</p>

<p>
 <b><a href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a>
* <b><a href="CppConst.htm">const</a></b> image,</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b> x,</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b> y)</p>

<p>{</p>

<p>
 <a href="CppAssert.htm">assert</a>(image!=0 &amp;&amp; &quot;Image is
NULL&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap!=0
&amp;&amp; &quot;Bitmap is NULL&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap-&gt;PixelFormat
== pf24bit &amp;&amp; &quot;Bitmap must be 24 bit&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>( x &gt;= 0 &amp;&amp; &quot;x
coordinat is below zero&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>( y &gt;= 0 &amp;&amp; &quot;y
coordinat is below zero&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>( x &lt;
image-&gt;Picture-&gt;Bitmap-&gt;Width  
 &amp;&amp; &quot;x coordinat is beyond image width&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>( y &lt;
image-&gt;Picture-&gt;Bitmap-&gt;Height &amp;&amp; &quot;y coordinat is beyond
image height&quot;);</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppUnsigned.htm">unsigned</a>
<a href="CppChar.htm">char</a></b> * <b><a href="CppConst.htm">const</a></b>
line</p>

<p> 
 = <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppUnsigned.htm">unsigned</a> <a href="CppChar.htm">char</a></b>
*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppUnsigned.htm">unsigned</a>
<a href="CppChar.htm">char</a></b> red   
 = line[x*3+2];</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppUnsigned.htm">unsigned</a>
<a href="CppChar.htm">char</a></b> green = line[x*3+1];</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppUnsigned.htm">unsigned</a>
<a href="CppChar.htm">char</a></b> blue  
 = line[x*3+0];</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b>
grey = (red + green + blue) / 3;</p>

<p>
 <a href="CppAssert.htm">assert</a>(grey &gt;= 0 &amp;&amp; grey &lt;
256);</p>

<p>
 <b><a href="CppReturn.htm">return</a></b> grey;</p>

<p>}</p>

</div>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;<a href="CppCassertH.htm">cassert</a>&gt;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;vcl.h&gt;</p>

<p>&nbsp;</p>

<p>//Get a line of pixel's average
greyness</p>

<p>//From
http://www.richelbilderbeek.nl/CppGetGreyness.htm</p>

<p><b> <a href="CppConst.htm">const</a> <a
href="CppUnsigned.htm">unsigned</a> <a href="CppChar.htm">char</a> </b>  <a href="CppGetGreyness.htm">GetGreyness</a>(</p>

<p>
 <b><a href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a>
* <b><a href="CppConst.htm">const</a></b> image,</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b> x1,</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b> x2,</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b> y)</p>

<p>{</p>

<p>
 <a href="CppAssert.htm">assert</a>(image!=0 &amp;&amp; &quot;Image is
NULL&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap!=0
&amp;&amp; &quot;Bitmap is NULL&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap-&gt;PixelFormat
== pf24bit &amp;&amp; &quot;Bitmap must be 24 bit&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>( x1 &gt;= 0 &amp;&amp; &quot;x1
coordinat is below zero&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>( x2 &gt;= 0 &amp;&amp; &quot;x2
coordinat is below zero&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>( y &gt;= 0 &amp;&amp; &quot;y
coordinat is below zero&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>( x1 &lt;
image-&gt;Picture-&gt;Bitmap-&gt;Width  
 &amp;&amp; &quot;x1 coordinat is beyond image width&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>( x2 &lt;
image-&gt;Picture-&gt;Bitmap-&gt;Width  
 &amp;&amp; &quot;x2 coordinat is beyond image width&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>( y &lt; image-&gt;Picture-&gt;Bitmap-&gt;Height
&amp;&amp; &quot;y coordinat is beyond image height&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>( x1 &lt; x2);</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppUnsigned.htm">unsigned</a>
<a href="CppChar.htm">char</a> </b>* <b><a href="CppConst.htm">const</a></b>
line</p>

<p> 
 = <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppUnsigned.htm">unsigned</a> <a href="CppChar.htm">char</a></b>
*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b> nPixels
= x2 - x1;</p>

<p>
 <b><a href="CppInt.htm">int</a></b> sum = 0;</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b>
x=x1; x!=x2; ++x)</p>

<p>
 {</p>

<p> 
 <b><a href="CppConst.htm">const</a> <a href="CppUnsigned.htm">unsigned</a>
<a href="CppChar.htm">char</a></b> red   
 = line[x*3+2];</p>

<p> 
 <b><a href="CppConst.htm">const</a> <a href="CppUnsigned.htm">unsigned</a>
<a href="CppChar.htm">char</a> </b>green = line[x*3+1];</p>

<p> 
 <b><a href="CppConst.htm">const</a> <a href="CppUnsigned.htm">unsigned</a>
<a href="CppChar.htm">char</a></b> blue  
 = line[x*3+0];</p>

<p> 
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b>
grey = (red + green + blue) / 3;</p>

<p> 
 <a href="CppAssert.htm">assert</a>(grey &gt;= 0 &amp;&amp; grey &lt;
256);</p>

<p> 
 sum+=grey;</p>

<p>
 }</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b>
averageGrey = sum / nPixels;</p>

<p>
 <a href="CppAssert.htm">assert</a>(averageGrey &gt;= 0 &amp;&amp;
averageGrey &lt; 256);</p>

<p>
 <b><a href="CppReturn.htm">return</a></b> averageGrey;</p>

<p>}</p>

</div>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

 

<p class=MsoNormal style='border:none;mso-border-alt:solid windowtext .5pt;

padding:0in;mso-padding-alt:1.0pt 4.0pt 1.0pt 4.0pt'>  &nbsp;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;<a href="CppCassertH.htm">cassert</a>&gt;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;vcl.h&gt;</p>

<p>&nbsp;</p>

<p>//Get a square of pixels' average
greyness</p>

<p>//From
http://www.richelbilderbeek.nl/CppGetGreyness.htm</p>

<p><b> <a href="CppConst.htm">const</a> <a
href="CppUnsigned.htm">unsigned</a> <a href="CppChar.htm">char</a> </b>  <a href="CppGetGreyness.htm">GetGreyness</a>(</p>

<p>
 <b><a href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a>
* <b><a href="CppConst.htm">const</a></b> image,</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b> x1,</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b> y1,</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b> x2,</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b> y2)</p>

<p>{</p>

<p>
 <a href="CppAssert.htm">assert</a>(x1 &lt; x2 );</p>

<p>
 <a href="CppAssert.htm">assert</a>(y1 &lt; y2 );</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b>
nPixelsVertical = y2 - y1;</p>

<p>
 <b><a href="CppInt.htm">int</a></b> sum = 0;</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b>
y=y1; y!=y2; ++y)</p>

<p>
 {</p>

<p> 
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b>
grey = GetGreyness(image,x1,x2,y);</p>

<p> 
 <a href="CppAssert.htm">assert</a>(grey &gt;= 0 &amp;&amp; grey &lt;
256);</p>

<p> 
 sum+=grey;</p>

<p>
 }</p>

<p>
 <b><a href="CppConst.htm">const</a> <a href="CppInt.htm">int</a></b>
grey = sum / nPixelsVertical;</p>

<p>
 <a href="CppAssert.htm">assert</a>(grey &gt;=0 &amp;&amp; grey &lt;
256);</p>

<p>
 <b><a href="CppReturn.htm">return</a></b> grey;</p>

<p>}</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><a
href="CppCodeSnippets.htm">Go back to Richel Bilderbeek's Code Snippets</a>.</p>

<p><a
href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>

<p>&nbsp;</p>

</div>

</body>

</html>
