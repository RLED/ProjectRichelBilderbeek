<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Boost.Graph example 1</title>
  <meta name="description" content="C++ Boost.Graph example 1"/>
  <meta name="keywords" content="C++ Boost.Graph Boost Graph boost::adjacency_graph adjacency_graph example 1 names plot plotting code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppGraphExample1.htm">Boost.Graph example 1: four human names and their relationships + plotting</a></h1>
<p>&nbsp;</p>
<p><a href="CppGraph.htm">Boost.Graph</a> example. It defines a graph of person names and their 
relationships. Then the graph is written to .dot file and plotted using KGraphViewer.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppGraphExample1.png">View the graph of this example (png)</a></li>
  <li><a href="CppGraphExample1.zip">Download the Qt Creator project 'CppGraphExample1' (zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>Operating system: <a href="http://www.ubuntu.com">Ubuntu</a> 10.04 LTS Lucid Lynx</p>
<p><a href="CppIde.htm">IDE</a>: <a href="CppQtCreator.htm">Qt Creator</a> 2.0.0</p>
<p><a href="CppQtProjectType.htm">Project type</a>: <a href="CppGui.htm">GUI</a> application</p>
<p><a href="CppCompiler.htm">Compiler</a>: <a href="CppGpp.htm">G++</a> 4.4.1</p>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><a href="CppBoost.htm">Boost</a>: version 1.40</li>
<!--  <li><a href="CppQt.htm">Qt</a>: version 4.7.0 (32 bit)</li> -->
  <li><a href="CppStl.htm">STL</a>: from <a href="CppGcc.htm">GCC</a>, shipped with <a href="CppQt.htm">Qt Creator</a> 2.0.0</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a></h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
#-------------------------------------------------<br/>
#<br/>
# Project created by QtCreator 2010-08-26T10:39:57<br/>
#<br/>
#-------------------------------------------------<br/>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; += core<br/>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -= gui<br/>
TARGET = CppGraphExample1<br/>
CONFIG&nbsp;&nbsp; += console<br/>
CONFIG&nbsp;&nbsp; -= app_bundle<br/>
TEMPLATE = app<br/>
SOURCES += main.cpp<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table border = "1"><tr><td><code>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/graph/adjacency_list.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/graph/graphviz.hpp&gt;<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain.htm">main</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Define the type of graph:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdjacency_list.htm">boost::adjacency_list</a> is the 'Swiss army knife' graph<br/>
&nbsp;&nbsp;<b><a href="CppTypedef.htm">typedef</a></b> <a href="CppAdjacency_list.htm">boost::adjacency_list</a><br/>
&nbsp;&nbsp;&lt;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Store all out edges as a <a href="CppVector.htm">std::vector</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::vecS,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Store all vertices in a <a href="CppVector.htm">std::vector</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::vecS,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Relations are both ways (in <b><a href="CppThis.htm">this</a></b> example)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>(note: but you can freely change it to <a href="CppBoost.htm">boost</a>::directedS)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::undirectedS,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>All vertices are person names of type <a href="CppString.htm">std::string</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::property&lt;<a href="CppBoost.htm">boost</a>::vertex_name_t,<a href="CppString.htm">std::string</a>&gt;,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>All edges are relation of type <a href="CppString.htm">std::string</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::property&lt;<a href="CppBoost.htm">boost</a>::edge_name_t,<a href="CppString.htm">std::string</a>&gt;<br/>
&nbsp;&nbsp;&gt; Graph;<br/>
<br/>
&nbsp;&nbsp;Graph&nbsp;&nbsp;g;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Graph::vertex_descriptor v1 <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::add_vertex(<a href="CppString.htm">std::string</a>("Mr. A"),g);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Graph::vertex_descriptor v2 <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::add_vertex(<a href="CppString.htm">std::string</a>("Mrs. B"),g);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Graph::vertex_descriptor v3 <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::add_vertex(<a href="CppString.htm">std::string</a>("Dr. C"),g);<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> Graph::vertex_descriptor v4 <a href="CppOperatorAssign.htm">=</a> <a href="CppBoost.htm">boost</a>::add_vertex(<a href="CppString.htm">std::string</a>("Prof. D"),g);<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::add_edge(v1,v2,<a href="CppString.htm">std::string</a>("Married"),g);<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::add_edge(v2,v3,<a href="CppString.htm">std::string</a>("Lovers"),g);<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::add_edge(v3,v4,<a href="CppString.htm">std::string</a>("Collegues"),g);<br/>
&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::add_edge(v1,v4,<a href="CppString.htm">std::string</a>("Roommates"),g);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Writing graph to file<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOfstream.htm">std::ofstream</a> f("test.dot");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>Problems:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorMinus.htm">-</a> All names are replaced by numbers<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorMinus.htm">-</a> All relationships are omitted<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoost.htm">boost</a>::write_graphviz(f,g);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;f.close();<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>View the output directly <b><a href="CppUsing.htm">using</a></b> KGraphViewerer<br/>
&nbsp;&nbsp;<a href="CppSystem.htm">std::system</a>("kgraphviewer test.dot");<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>
