<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>RaspberryPi</title>
  <meta name="description" content="C++ RaspberryPi"/>
  <meta name="keywords" content="C++ RaspberryPi code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppRaspberryPi.htm">RaspberryPi</a></h1>
<p>&nbsp;</p>
<!-- This text is generated by CodeToHtml -->
<p><img src="PicRpi.png" alt="RPi"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppRaspberryPi.htm">RaspberryPi</a> is a collection of <a href="CppClass.htm">class</a> for working with a Raspberry Pi.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>raspberrypifwd.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="raspberrypifwd.h" border = "1"><tr><td><code>
<a href="CppIfndef.html">#ifndef</a> RASPBERRYPIFWD_H<br/>
<a href="CppDefine.html">#define</a> RASPBERRYPIFWD_H<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> rpi {<br/>
&nbsp;&nbsp;<b><a href="CppNamespace.html">namespace</a></b> gpio {<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStruct.html">struct</a></b> Pin;<br/>
&nbsp;&nbsp;} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> gpio<br/>
} <a href="CppComment.htm">//</a><b><a href="CppNamespace.html">namespace</a></b> rpi<br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> RASPBERRYPIFWD_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>raspberrypigpiopin.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="raspberrypigpiopin.h" border = "1"><tr><td><code>
<a href="CppIfndef.html">#ifndef</a> RASPBERRYPIGPIOPIN_H<br/>
<a href="CppDefine.html">#define</a> RASPBERRYPIGPIOPIN_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppSetH.html">set</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> rpi {<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> gpio {<br/>
<br/>
<b><a href="CppConstexpr.html">constexpr</a></b> <b><a href="CppInt.htm">int</a></b> GetMaxPinNumber() { <b><a href="CppReturn.html">return</a></b> 26; }<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> Pin<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a pin and set its output to high<br/>
&nbsp;&nbsp;Pin(<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> pin_number);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create all valid Pin indices<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppSet.html">std::set</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; CreatePinNumbers();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the pin number<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetPinNumber() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_pin_number; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the output to high<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetOutputHigh();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the output to low<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetOutputLow();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Toggle the output value<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Toggle();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Is the output high? Or is it low?<br/>
&nbsp;&nbsp;<b><a href="CppBool.htm">bool</a></b> m_is_high;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The pin number<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> m_pin_number;<br/>
};<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorLess.html">operator&lt;</a></b>(<b><a href="CppConst.html">const</a></b> Pin&amp; lhs, <b><a href="CppConst.html">const</a></b> Pin&amp; rhs);<br/>
<br/>
} <a href="CppComment.htm">//</a><b><a href="CppNamespace.html">namespace</a></b> gpio<br/>
<br/>
} <a href="CppComment.htm">//</a><b><a href="CppNamespace.html">namespace</a></b> rpi<br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> RASPBERRYPIGPIOPIN_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>raspberrypigpiopin.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="raspberrypigpiopin.cpp" border = "1"><tr><td><code>
<a href="CppInclude.html">#include</a> "raspberrypigpiopin<a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCassertH.html">cassert</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppIostreamH.html">iostream</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppLexical_cast.html">lexical_cast</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> rpi {<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> gpio {<br/>
<br/>
<br/>
Pin::Pin(<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> pin)<br/>
&nbsp;&nbsp;: m_is_high(<b><a href="CppTrue.htm">true</a></b>),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_pin_number(pin)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.html">#ifndef</a> <a href="CppNDEBUG.html">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppSet.html">std::set</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; pins <a href="CppOperatorAssign.htm">=</a> CreatePinNumbers();<br/>
&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(pins.count(pin));<br/>
&nbsp;&nbsp;<a href="CppEndif.html">#endif</a><br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetOutputHigh();<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppSet.html">std::set</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; Pin::CreatePinNumbers()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Note that I commented out pin number 27<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>I <b><a href="CppDo.htm">do</a></b> not know why I have so often included it, but I must have read it somewhere<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppSet.html">std::set</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; pins { 3,5,7,8,10,11,12,13,15,16,18,19,21,22,23,24,26 };<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> pins;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> Pin::SetOutputHigh()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> cmd <a href="CppOperatorAssign.htm">=</a> "echo \"" <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(GetPinNumber()) <a href="CppOperatorPlus.htm">+</a> "\" &gt; <a href="CppOperatorDivide.htm">/</a>sys/<b><a href="CppClass.html">class</a></b>/gpio/<b><a href="CppExport.html">export</a></b>";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppClog.html">std::clog</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> cmd <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> error <a href="CppOperatorAssign.htm">=</a> <a href="CppSystem.html">std::system</a>(cmd.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (error) <a href="CppCerr.html">std::cerr</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Error: " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> error <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> cmd <a href="CppOperatorAssign.htm">=</a> "echo \"out\" &gt; <a href="CppOperatorDivide.htm">/</a>sys/<b><a href="CppClass.html">class</a></b>/gpio/gpio" <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(GetPinNumber())<a href="CppOperatorPlus.htm">+</a> "/direction";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppClog.html">std::clog</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> cmd <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> error <a href="CppOperatorAssign.htm">=</a> <a href="CppSystem.html">std::system</a>(cmd.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (error) <a href="CppCerr.html">std::cerr</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Error: " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> error <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> cmd <a href="CppOperatorAssign.htm">=</a> "echo \"1\" &gt; <a href="CppOperatorDivide.htm">/</a>sys/<b><a href="CppClass.html">class</a></b>/gpio/gpio" <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(GetPinNumber())<a href="CppOperatorPlus.htm">+</a> "/value";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppClog.html">std::clog</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> cmd <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> error <a href="CppOperatorAssign.htm">=</a> <a href="CppSystem.html">std::system</a>(cmd.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (error) <a href="CppCerr.html">std::cerr</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Error: " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> error <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;m_is_high <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> Pin::SetOutputLow()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> cmd <a href="CppOperatorAssign.htm">=</a> "echo \"0\" &gt; <a href="CppOperatorDivide.htm">/</a>sys/<b><a href="CppClass.html">class</a></b>/gpio/gpio" <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(GetPinNumber())<a href="CppOperatorPlus.htm">+</a> "/value";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppClog.html">std::clog</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> cmd <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> error <a href="CppOperatorAssign.htm">=</a> <a href="CppSystem.html">std::system</a>(cmd.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (error) <a href="CppCerr.html">std::cerr</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Error: " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> error <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> cmd <a href="CppOperatorAssign.htm">=</a> "echo \"" <a href="CppOperatorPlus.htm">+</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<a href="CppString.html">std::string</a>&gt;(GetPinNumber()) <a href="CppOperatorPlus.htm">+</a> "\" &gt; <a href="CppOperatorDivide.htm">/</a>sys/<b><a href="CppClass.html">class</a></b>/gpio/un<b><a href="CppExport.html">export</a></b>";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppClog.html">std::clog</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> cmd <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> error <a href="CppOperatorAssign.htm">=</a> <a href="CppSystem.html">std::system</a>(cmd.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (error) <a href="CppCerr.html">std::cerr</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> "Error: " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> error <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;m_is_high <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.html">false</a></b>;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> Pin::Toggle()<br/>
{<br/>
&nbsp;&nbsp;m_is_high ? SetOutputLow() : SetOutputHigh();<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorLess.html">operator&lt;</a></b>(<b><a href="CppConst.html">const</a></b> Pin&amp; lhs, <b><a href="CppConst.html">const</a></b> Pin&amp; rhs)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(lhs.GetPinNumber() <a href="CppOperatorNotEqual.htm">!=</a> rhs.GetPinNumber());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> lhs.GetPinNumber() &lt; rhs.GetPinNumber();<br/>
}<br/>
<br/>
} <a href="CppComment.htm">//</a><b><a href="CppNamespace.html">namespace</a></b> gpio<br/>
<br/>
<br/>
} <a href="CppComment.htm">//</a><b><a href="CppNamespace.html">namespace</a></b> rpi<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
