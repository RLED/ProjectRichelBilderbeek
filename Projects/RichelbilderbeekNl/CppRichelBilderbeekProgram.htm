<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>RichelBilderbeekProgram</title>
  <meta name="description" content="C++ RichelBilderbeekProgram"/>
  <meta name="keywords" content="C++ RichelBilderbeekProgram code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppRichelBilderbeekProgram.htm">RichelBilderbeekProgram</a></h1>
<p>&nbsp;</p>
<!-- This text is generated by CodeToHtml -->
<p><img src="PicStl.png" alt="STL"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppRichelBilderbeekProgram.htm">RichelBilderbeekProgram</a> is a
<a href="CppClass.htm">class</a> for a ProjectRichelBilderbeek class.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>richelbilderbeekprogram.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="richelbilderbeekprogram.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
RichelBilderbeek::Program, <b><a href="CppClass.htm">class</a></b> <b><a href="CppFor.htm">for</a></b> a program by Richel Bilderbeek<br/>
Copyright (C) 2012 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>Program.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> RICHELBILDERBEEKPROGRAM_H<br/>
<a href="CppDefine.htm">#define</a> RICHELBILDERBEEKPROGRAM_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppShared_ptr.htm">shared_ptr</a>.hpp&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>status.h"<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>type.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> RichelBilderbeek {<br/>
<br/>
<a href="CppComment.htm">///</a>RichelBilderbeek::Program is the <a href="CppBaseClass.htm">base class</a> <b><a href="CppFor.htm">for</a></b> program information<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~Program() {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a <a href="CppVector.htm">std::vector</a> with all different Program <a href="CppInstance.htm">instances</a> in it<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt; CreateProgram(<b><a href="CppConst.htm">const</a></b> ProgramType type);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Create a <a href="CppVector.htm">std::vector</a> with all different Program <a href="CppInstance.htm">instances</a> in it<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt; &gt; GetAllPrograms();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the filename of a console <a href="CppVersion.htm">version</a> screenshot<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the filename of a desktop platform-independent <a href="CppVersion.htm">version</a> screenshot<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the filename of a desktop windows-only <a href="CppVersion.htm">version</a> screenshot<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the filename of a <a href="CppWebApplication.htm">web application</a> <a href="CppVersion.htm">version</a> screenshot<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The item its name, e.g. 'Sim<a href="CppMysteryMachine.htm">MysteryMachine</a>'<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Status of the console-only <a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Status of the <a href="CppWindows.htm">Windows</a>-only desktop <a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Status of the platform-independent desktop <a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Status of the <a href="CppWebApplication.htm">web application</a> <a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The program, e.g. '<a href="CppRichelBilderbeekProgram.htm">RichelBilderbeekProgram</a>Type::<a href="GameBoenken.htm">boenken</a>'<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ProgramType GetType() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The type of program its name, e.g. 'Game'<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetTypeName() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The item its URL (at http://ww.richelbilderbeek.nl), e.g. '<a href="ToolSimMysteryMachine.htm">ToolSimMysteryMachine</a>.htm'<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the base of a filename<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameBase() <b><a href="CppConst.htm">const</a></b>;<br/>
};<br/>
<br/>
<a href="CppComment.htm">///</a>RichelBilderbeek::ProgramClass is the <a href="CppBaseClass.htm">base class</a> <b><a href="CppFor.htm">for</a></b> all <b><a href="CppClass.htm">class</a></b> demonstration programs<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramClass: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~ProgramClass() {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The type of program its name, e.g. 'game'<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetTypeName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<b><a href="CppClass.htm">class</a></b>"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramGame: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~ProgramGame() {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The type of program its name, e.g. 'game'<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetTypeName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "game"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramProject: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~ProgramProject() {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The type of program its name, e.g. 'game'<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetTypeName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "project"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="Tools.htm">Tool</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~Program<a href="Tools.htm">Tool</a>() {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The type of program its name, e.g. 'game'<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetTypeName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">tool</a>"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppGnuplot.htm">Gnuplot</a><a href="CppInterface.htm">Interface</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Cpp<a href="CppGnuplot.htm">Gnuplot</a><a href="CppInterface.htm">Interface</a>.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppGnuplot.htm">Gnuplot</a><a href="CppInterface.htm">Interface</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="CppGnuplot.htm">gnuplot</a><a href="CppInterface.htm">Interface</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Cpp<a href="CppGnuplot.htm">Gnuplot</a><a href="CppInterface.htm">Interface</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramGrayCoder: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>GrayCoder_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GrayCoder"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::grayCoder; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GrayCoder.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramNdsMake: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppNdsmake.htm">Ndsmake</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::ndsMake; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "CppNdsMake.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestBroadcastServer.htm">TestBroadcastServer</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestBroadcastServer.htm">ToolTestBroadcastServer</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestBroadcastServer.htm">TestBroadcastServer</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::n_a; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::n_a; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::n_a; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testBroadcastServer; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestBroadcastServer.htm">ToolTestBroadcastServer</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestChess: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestChess.htm">ToolTestChess</a>20120209.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestChess.htm">ToolTestChess</a>20120207.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "TestChess"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testChess; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestChess.htm">ToolTestChess</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestDial.htm">TestDial</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestDial.htm">ToolTestDial</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestDial.htm">ToolTestDial</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestDial.htm">TestDial</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::n_a; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testDial; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestDial.htm">ToolTestDial</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestEncranger.htm">TestEncranger</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestEncranger.htm">ToolTestEncranger</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestEncranger.htm">ToolTestEncranger</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestEncranger.htm">ToolTestEncranger</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestEncranger.htm">TestEncranger</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppEncranger.htm">Encranger</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestEncranger.htm">ToolTestEncranger</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestEntrance.htm">TestEntrance</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestEntrance.htm">ToolTestEntrance</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestEntrance.htm">TestEntrance</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::n_a; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::n_a; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::n_a; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testEntrance; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestEntrance.htm">ToolTestEntrance</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestExercise.htm">TestExercise</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestExercise.htm">ToolTestExercise</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestExercise.htm">TestExercise</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::unk; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppExercise.htm">Exercise</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestExercise.htm">ToolTestExercise</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestFunctionParser.htm">TestFunctionParser</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestFunctionParser.htm">ToolTestFunctionParser</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestFunctionParser.htm">ToolTestFunctionParser</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestFunctionParser.htm">ToolTestFunctionParser</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestFunctionParser.htm">TestFunctionParser</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppFunctionParser.htm">FunctionParser</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestFunctionParser.htm">ToolTestFunctionParser</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestGroupWidget.htm">TestGroupWidget</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestGroupWidget.htm">ToolTestGroupWidget</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestGroupWidget.htm">TestGroupWidget</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppGroupWidget.htm">GroupWidget</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestGroupWidget.htm">ToolTestGroupWidget</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestLed.htm">TestLed</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestLed.htm">ToolTestLed</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestLed.htm">ToolTestLed</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestLed.htm">TestLed</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppLed.htm">Led</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestLed.htm">ToolTestLed</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestMultiVector.htm">TestMultiVector</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestMultiVector.htm">TestMultiVector</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppMultiVector.htm">MultiVector</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestMultiVector.htm">TestMultiVector</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestNdsMake : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestNdsmake.htm">TestNdsmake</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestNdsmake.htm">TestNdsmake</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testNdsMake; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestNdsmake.htm">TestNdsmake</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestNeuralNet.htm">TestNeuralNet</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestNeuralNet.htm">ToolTestNeuralNet</a>_0_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestNeuralNet.htm">TestNeuralNet</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppNeuralNet.htm">NeuralNet</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestNeuralNet.htm">ToolTestNeuralNet</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTest<a href="CppPrimeExpert.htm">PrimeExpert</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Test<a href="CppPrimeExpert.htm">PrimeExpert</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Test<a href="CppPrimeExpert.htm">PrimeExpert</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppPrimeExpert.htm">PrimeExpert</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Test<a href="CppPrimeExpert.htm">PrimeExpert</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestPylos.htm">TestPylos</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestPylos.htm">ToolTestPylos</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestPylos.htm">TestPylos</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppPylos.htm">Pylos</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestPylos.htm">ToolTestPylos</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestQrcFile: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "TestQrcFile"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testQrcFile; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQrcFile.htm">ToolTestQrcFile</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtArrowItems.htm">TestQtArrowItems</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtArrowItems.htm">ToolTestQtArrowItems</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtArrowItems.htm">TestQtArrowItems</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppQtArrowItem.htm">QtArrowItem</a>s; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtArrowItems.htm">ToolTestQtArrowItems</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtCreatorProFile.htm">TestQtCreatorProFile</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtCreatorProFile.htm">TestQtCreatorProFile</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppQtCreator.htm">QtCreator</a>ProFile; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtCreatorProFile.htm">ToolTestQtCreatorProFile</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTest<a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Test<a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtKeyboardFriendlyGraphicsView.htm">ToolTestQtKeyboardFriendlyGraphicsView</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtModels.htm">TestQtModels</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtModels.htm">TestQtModels</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppQt.htm">Qt</a>Models; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtModels.htm">ToolTestQtModels</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtRoundededitRectItem.htm">TestQtRoundedEditRectItem</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedEditRectItem.htm">ToolTestQtRoundedEditRectItem</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundededitRectItem.htm">TestQtRoundedEditRectItem</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppQt.htm">Qt</a>RoundedEditRectItem; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedEditRectItem.htm">ToolTestQtRoundedEditRectItem</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTest<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedRectItem.htm">ToolTestQtRoundedRectItem</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Test<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedRectItem.htm">ToolTestQtRoundedRectItem</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQtRoundedTextRectItem.htm">TestQtRoundedTextRectItem</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedTextRectItem.htm">ToolTestQtRoundedTextRectItem</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedTextRectItem.htm">TestQtRoundedTextRectItem</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppQt.htm">Qt</a>RoundedTextRectItem; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQtRoundedTextRectItem.htm">ToolTestQtRoundedTextRectItem</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestQuestion.htm">TestQuestion</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQuestion.htm">ToolTestQuestion</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQuestion.htm">TestQuestion</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::unk; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppQuestion.htm">Question</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestQuestion.htm">ToolTestQuestion</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestSelectFile: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestSelectFileDialog.htm">ToolTestSelectFileDialog</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "TestSelectFile"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testSelectFile; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>TestSelectFile.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestServerPusher.htm">TestServerPusher</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestServerPusher.htm">TestServerPusher</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testServerPusher; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestServerPusher.htm">ToolTestServerPusher</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestShape.htm">TestShape</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShape.htm">ToolTestShape</a>_1_0_desktop.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShape.htm">ToolTestShape</a>_1_0_web.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShape.htm">TestShape</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppShape.htm">Shape</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShape.htm">ToolTestShape</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestShinyButton.htm">TestShinyButton</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShinyButton.htm">ToolTestShinyButton</a>_2_0_desktop.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShinyButton.htm">ToolTestShinyButton</a>_2_0_web.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShinyButton.htm">TestShinyButton</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppShinyButton.htm">ShinyButton</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestShinyButton.htm">ToolTestShinyButton</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestStopwatch.htm">TestStopwatch</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestStopwatch.htm">TestStopwatch</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppStopwatch.htm">Stopwatch</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestStopwatch.htm">ToolTestStopwatch</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestTicTacToe.htm">TestTicTacToe</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTicTacToe.htm">ToolTestTicTacToe</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTicTacToe.htm">ToolTestTicTacToe</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTicTacToe.htm">TestTicTacToe</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppTicTacToe.htm">TicTacToe</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTicTacToe.htm">ToolTestTicTacToe</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestTimedServerPusher.htm">TestTimedServerPusher</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTimedServerPusher.htm">TestTimedServerPusher</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppTime.htm">Time</a>dServerPusher; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTimedServerPusher.htm">ToolTestTimedServerPusher</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestToggleButton.htm">TestToggleButton</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestToggleButton.htm">TestToggleButton</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppToggleButton.htm">ToggleButton</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestToggleButton.htm">ToolTestToggleButton</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestTwoDigitNewick.htm">TestTwoDigitNewick</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTwoDigitNewick.htm">ToolTestTwoDigitNewick</a>_0_6.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTwoDigitNewick.htm">TestTwoDigitNewick</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestTwoDigitNewick.htm">ToolTestTwoDigitNewick</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameBeerWanter.htm">BeerWanter</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBeerWanter.htm">GameBeerWanter</a>5.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBeerWanter.htm">GameBeerWanter</a>3.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBeerWanter.htm">BeerWanter</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::beerWanter; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBeerWanter.htm">GameBeerWanter</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="GameBoenken.htm">Boenken</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBoenken.htm">GameBoenken</a>_3_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBoenken.htm">GameBoenken</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBoenken.htm">Boenken</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameBoenken.htm">boenken</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameBoenken.htm">GameBoenken</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppConnectThree.htm">ConnectThree</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameConnectThree.htm">GameConnectThree</a>_5_2.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameConnectThree.htm">GameConnectThree</a>_6_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppConnectThree.htm">ConnectThree</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::connectThree; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameConnectThree.htm">GameConnectThree</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramDasWahreSchlagerfest: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameDasWahreSchlagerfest.htm">GameDasWahreSchlagerfest</a>_2_2.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameDasWahreSchlagerfest.htm">GameDasWahreSchlagerfest</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameDasWahreSchlagerfest.htm">Das Wahre Schlagerfest</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::dasWahreSchlagerfest; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameDasWahreSchlagerfest.htm">GameDasWahreSchlagerfest</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramK3OpEenRij: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameK3OpEenRij_4_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameK3OpEenRij_5_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "K3 Op Een Rij"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::k3OpEenRij; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameK3OpEenRij.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolKalmanFilterer.htm">KalmanFilterer</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolKalmanFilterer.htm">ToolKalmanFilterer</a>_1_6.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolKalmanFilterer.htm">ToolKalmanFilterer</a>_1_4.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolKalmanFilterer.htm">KalmanFilterer</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::kalmanFilterer; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolKalmanFilterer.htm">ToolKalmanFilterer</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramKeySender : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>KeySender_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "KeySender"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::keySender; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>KeySender.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramKnokfighter: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameKnokfighter_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Knokfighter"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::knokfighter; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameKnokfighter.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramKTouchLectureCreator : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "KTouchLectureCreator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::kTouchLectureCreator; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolKTouchLectureCreator.htm">ToolKTouchLectureCreator</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramLearyCircumplex : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>LearyCircumplex_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "LearyCircumplex"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::learyCircumplex; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>LearyCircumplex.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramLogisticGrowthSimulator : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>LogisticGrowthSimulator_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "LogisticGrowthSimulator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::logisticGrowthSimulator; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>LogisticGrowthSimulator.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramLoose : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Loose_2_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "LogisticGrowthSimulator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::loose; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Loose.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMaziak: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameMaziak.htm">GameMaziak</a>_1_3.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameMaziak.htm">GameMaziak</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Maziak"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="GameMaziak.htm">maziak</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameMaziak.htm">GameMaziak</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMorpher : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Morpher_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Morpher"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::morpher; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Morpher.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramPokeVolley: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GamePokeVolley_2_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "PokeVolley"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::pokeVolley; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GamePokeVolley.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppPylos.htm">Pylos</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GamePylos.htm">GamePylos</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppPylos.htm">Pylos</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="CppPylos.htm">pylos</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GamePylos.htm">GamePylos</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramQ<a href="CppMake.htm">make</a>Watcher : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Q<a href="CppMake.htm">make</a>Watcher"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::q<a href="CppMake.htm">make</a>Watcher; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Q<a href="CppMake.htm">make</a>Watcher.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramQuadraticSolver: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>QuadraticSolver_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "QuadraticSolver"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::quadraticSolver; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>QuadraticSolver..htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramReversi: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameReversi_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Reversi"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::reversi; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameReversi.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppRubiksClock.htm">RubiksClock</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameRubiksClock.htm">GameRubiksClock</a>Desktop_2_2.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameRubiksClock.htm">GameRubiksClock</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameRubiksClock.htm">GameRubiksClock</a>_2_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Rubik's Clock"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::rubiksClock; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameRubiksClock.htm">GameRubiksClock</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSearchAndDestroyChess: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameSearchAndDestroyChessConsole_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameSearchAndDestroyChess_2_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Search And Destroy Chess"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::searchAndDestroyChess; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameSearchAndDestroyChess.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSpaceHarry : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameSpaceHarry_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Space Harry"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::spaceHarry; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GameSpaceHarry.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppStateObserver.htm">StateObserver</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolStateObserver.htm">ToolStateObserver</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppStateObserver.htm">StateObserver</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::stateObserver; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolStateObserver.htm">ToolStateObserver</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramStyleSheetSetter : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "StyleSheetSetter"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::styleSheetSetter; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>StyleSheetSetter.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppTicTacToe.htm">TicTacToe</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramGame<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameTicTacToe.htm">GameTicTacToe</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameTicTacToe.htm">GameTicTacToe</a>_1_4.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppTicTacToe.htm">TicTacToe</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::ticTacToe; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="GameTicTacToe.htm">GameTicTacToe</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTicTacToeLearner.htm">TicTacToeLearner</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTicTacToeLearner.htm">TicTacToeLearner</a>_0_3.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTicTacToeLearner.htm">TicTacToeLearner</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::ticTacToeLearner; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTicTacToeLearner.htm">TicTacToeLearner</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTicTacToeValuer.htm">TicTacToeValuer</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTicTacToeValuer.htm">TicTacToeValuer</a>_0_7.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTicTacToeValuer.htm">TicTacToeValuer</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::ticTacToeValuer; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTicTacToeValuer.htm">TicTacToeValuer</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramBochum: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectBochumGaborFiltersResults.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project Bochum"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::n_a; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::bochum; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectBochum.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramChrisWiley: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectChrisWiley_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project Chris Wiley"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::chrisWiley; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectChrisWiley.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramCrossPoll: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectCrossPoll3.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "CrossPoll"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::crossPoll; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectCrossPoll.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramGtst: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ProjectGtst.htm">ProjectGtst</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ProjectGtst.htm">GTST</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::gtst; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ProjectGtst.htm">ProjectGtst</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMuscaDomestica: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectMuscaDomestica_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project Musca Domestica"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::muscaDomestica; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectMuscaDomestica.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppNewickVector.htm">NewickVector</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppNewickVector.htm">NewickVector</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="CppNewick.htm">newick</a>Vector; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project<a href="CppNewickVector.htm">NewickVector</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramThorVeen: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectThorVeen_0_9.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project ThorVeen"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::thorVeen; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "ProjectThorVeen.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramProject<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::twoDigit<a href="CppNewick.htm">Newick</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Project<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppUbuntu.htm">Ubuntu</a>OneWatcher : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="CppUbuntu.htm">Ubuntu</a>OneWatcher_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppUbuntu.htm">Ubuntu</a>OneWatcher"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::ubuntuOneWatcher; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="CppUbuntu.htm">Ubuntu</a>OneWatcher.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppAsciiArter.htm">AsciiArter</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolAsciiArter.htm">ToolAsciiArter</a>_5_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolAsciiArter.htm">ToolAsciiArter</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestAsciiArter.htm">ToolTestAsciiArter</a>_4_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppAsciiArter.htm">AsciiArter</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::asciiArter; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolAsciiArter.htm">ToolAsciiArter</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramBarbaImage: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>BarbaImage_1_3.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "BarbaImage"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::barbaImage; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>BarbaImage.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolCodeToHtml.htm">CodeToHtml</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCodeToHtml.htm">ToolCodeToHtml</a>_2_3.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCodeToHtml.htm">ToolCodeToHtml</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCodeToHtml.htm">CodeToHtml</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::codeToHtml; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCodeToHtml.htm">ToolCodeToHtml</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolCreateGlossary.htm">CreateGlossary</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCreateGlossary.htm">CreateGlossary</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::createGlossary; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCreateGlossary.htm">ToolCreateGlossary</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramCreate<a href="CppQt.htm">Qt</a>ProjectZipFile: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCreateQtProjectZipFile.htm">ToolCreateQtProjectZipFile</a>_1_3.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Create<a href="CppQt.htm">Qt</a>ProjectZipFile"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::wip; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::create<a href="CppQt.htm">Qt</a>ProjectZipFile; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolCreateQtProjectZipFile.htm">ToolCreateQtProjectZipFile</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramCreateSitemap : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "CreateSitemap"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::createSitemap; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>CreateSitemap.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramDot<a href="CppMatrix.htm">Matrix</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Dot<a href="CppMatrix.htm">Matrix</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Dot<a href="CppMatrix.htm">Matrix</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::dot<a href="CppMatrix.htm">Matrix</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Dot<a href="CppMatrix.htm">Matrix</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppEncranger.htm">Encranger</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="CppEncranger.htm">Encranger</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppEncranger.htm">Encranger</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="CppEncranger.htm">encranger</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="CppEncranger.htm">Encranger</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramFilterOperationer: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>FilterOperationer_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "FilterOperationer"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::filterOperationer; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>FilterOperationer.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramFryskLeareLieder: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>FryskLeareLieder_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "FryskLeareLieder"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::fryskLeareLieder; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>FryskLeareLieder.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppFunction.htm">Function</a>Plotter: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="CppFunction.htm">Function</a>Plotter_1_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppFunction.htm">Function</a>Plotter"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="CppFunction.htm">function</a>Plotter; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="CppFunction.htm">Function</a>Plotter.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramGaborFilter: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolGaborFilter.htm">ToolGaborFilter</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolGaborFilter.htm">ToolGaborFilter</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "GaborFilter"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::gaborFilter; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolGaborFilter.htm">ToolGaborFilter</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramHistogramEqualizationer: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>HistogramEqualizationer_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "HistogramEqualizationer"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::unk; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::histogramEqualizationer; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>HistogramEqualizationer.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolHometrainer.htm">Hometrainer</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHometrainer.htm">ToolHometrainer</a>_1_8.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHometrainer.htm">ToolHometrainer</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHometrainer.htm">Hometrainer</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="ToolHometrainer.htm">hometrainer</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolHometrainer.htm">ToolHometrainer</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramImage<a href="CppRotate.htm">Rotate</a>r: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Image<a href="CppRotate.htm">Rotate</a>rClx_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Image<a href="CppRotate.htm">Rotate</a>r"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::image<a href="CppRotate.htm">Rotate</a>r; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Image<a href="CppRotate.htm">Rotate</a>r.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMazeCreator: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMazeCreator.htm">ToolMazeCreator</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMazeCreator.htm">ToolMazeCreator</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "MazeCreator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::mazeCreator; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMazeCreator.htm">ToolMazeCreator</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramMulti<a href="CppEncranger.htm">Encranger</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Multi<a href="CppEncranger.htm">Encranger</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Multi<a href="CppEncranger.htm">Encranger</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::multi<a href="CppEncranger.htm">Encranger</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Multi<a href="CppEncranger.htm">Encranger</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppMusic.htm">Music</a>Theory : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMusicTheory.htm">ToolMusicTheory</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppMusic.htm">Music</a>Theory"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="CppMusic.htm">music</a>Theory; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolMusicTheory.htm">ToolMusicTheory</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramPaperRockScissors : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>PaperRockScissors_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "PaperRockScissors"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::paperRockScissors; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>PaperRockScissors.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolPause.htm">Pause</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPause.htm">Pause</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::pause; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPause.htm">ToolPause</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramPerfectElasticCollision: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPerfectElasticCollision.htm">ToolPerfectElasticCollision</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "PerfectElasticCollision"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::perfectElasticCollision; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPerfectElasticCollision.htm">ToolPerfectElasticCollision</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolPicToCode.htm">PicToCode</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPicToCode.htm">ToolPicToCode</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPicToCode.htm">ToolPicToCode</a>_1_3.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPicToCode.htm">PicToCode</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::picToCode; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolPicToCode.htm">ToolPicToCode</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramPixelator: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Pixelator_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Pixelator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::pixelator; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Pixelator.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppRandomCode.htm">RandomCode</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRandomCode.htm">ToolRandomCode</a>_4_2.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRandomCode.htm">ToolRandomCode</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRandomCode.htm">ToolRandomCode</a>_3_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppRandomCode.htm">RandomCode</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::randomCode; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRandomCode.htm">ToolRandomCode</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramRasper: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Rasper_0_3.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Rasper"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::rasper; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Rasper.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramRefrigeratorPuzzleSolver: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>RefrigeratorPuzzleSolver_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "RefrigeratorPuzzleSolver"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::refrigeratorPuzzleSolver; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>RefrigeratorPuzzleSolver.htm"; }<br/>
};<br/>
<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="CppRegex.htm">Regex</a>Tester: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRegexTester.htm">ToolRegexTester</a>_1_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="CppRegex.htm">Regex</a>Tester"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="CppRegex.htm">regex</a>Tester; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRegexTester.htm">ToolRegexTester</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramRichelBilderbeekGallery : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRichelBilderbeekGallery.htm">ToolRichelBilderbeekGallery</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "RichelBilderbeekGallery"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::richelBilderbeekGallery; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRichelBilderbeekGallery.htm">ToolRichelBilderbeekGallery</a>.htm"; }<br/>
};<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramRichelBilderbeekNlSitemapGenerator : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolRichelbilderbeekNlSitemapGenerator.htm">ToolRichelbilderbeekNlSitemapGenerator</a>_2_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "RichelBilderbeekNlSitemapGenerator"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::richelBilderbeekNlSitemapGenerator; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>RichelBilderbeekNlSitemapGenerator.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolSecretMessage.htm">SecretMessage</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolSecretMessage.htm">SecretMessage</a>_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSecretMessage.htm">SecretMessage</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::secretMessage; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolSecretMessage.htm">SecretMessage</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSimBrainiac: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SimBrainiac_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "SimBrainiac"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::simBrainiac; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SimBrainiac.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSimImmuneResponse: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SimImmuneResponse_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "SimImmuneResponse"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::simImmuneResponse; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SimImmuneResponse.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSim<a href="CppMysteryMachine.htm">MysteryMachine</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSimMysteryMachine.htm">ToolSimMysteryMachine</a>_1_1_desktop.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSimMysteryMachine.htm">ToolSimMysteryMachine</a>_1_1_web.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Sim<a href="CppMysteryMachine.htm">MysteryMachine</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::sim<a href="CppMysteryMachine.htm">MysteryMachine</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolSimMysteryMachine.htm">ToolSimMysteryMachine</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSimplify<a href="CppNewick.htm">Newick</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Simplify<a href="CppNewick.htm">Newick</a>_1_2.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "Simplify<a href="CppNewick.htm">Newick</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::simplify<a href="CppNewick.htm">Newick</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>Simplify<a href="CppNewick.htm">Newick</a>.htm"; }<br/>
};<br/>
<br/>
<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSimStagecraft: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SimStagecraft_1_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "SimStagecraft"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::simStagecraft; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SimStagecraft.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSoaSim: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SoaSim_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "SoaSim"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::soaSim; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SoaSim.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSolvePuzzleX: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "SolvePuzzleX"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::solvePuzzleX; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SolvePuzzleX.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramSurfacePlotter : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SurfacePlotter_1_2.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "SurfacePlotter"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::surfacePlotter; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>SurfacePlotter.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramTestAbout : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::ProgramClass<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "TestAbout"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::testAbout; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>TestAbout.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a> : <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a>_1_5.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::test<a href="CppBinaryNewickVector.htm">BinaryNewickVector</a>; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a><a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramThresholdFilterer: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>ThresholdFilterer_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "ThresholdFilterer"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::thresholdFilterer; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>ThresholdFilterer.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> Program<a href="ToolTimePoll.htm">TimePoll</a>: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTimePoll.htm">ToolTimePoll</a>_4_1.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTimePoll.htm">TimePoll</a>"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::<a href="CppTime.htm">time</a>Poll; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="ToolTimePoll.htm">ToolTimePoll</a>.htm"; }<br/>
};<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramVisualAbc: <b><a href="CppPublic.htm">public</a></b> RichelBilderbeek::Program<a href="Tools.htm">Tool</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>VisualAbc_1_0.png"; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetFilenameWeb() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ""; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetName() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "VisualAbc"; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusConsole() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::nvr; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusDesktop() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::yes; }<br/>
&nbsp;&nbsp;ProgramStatus GetStatusWeb<a href="CppApplication.htm">Application</a>() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramStatus::no; }<br/>
&nbsp;&nbsp;ProgramType GetType() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> ProgramType::visualAbc; }<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GetUrl() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> "<a href="Tools.htm">Tool</a>VisualAbc.htm"; }<br/>
};<br/>
<br/>
<a href="CppOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> Program * <b><a href="CppConst.htm">const</a></b> p);<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorLess.htm">operator&lt;</a></b>(<b><a href="CppConst.htm">const</a></b> Program&amp; lhs, <b><a href="CppConst.htm">const</a></b> Program&amp; rhs);<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> RichelBilderbeek<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> RICHELBILDERBEEKPROGRAM_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>richelbilderbeekprogram.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="richelbilderbeekprogram.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
RichelBilderbeek::Program, <b><a href="CppClass.htm">class</a></b> <b><a href="CppFor.htm">for</a></b> a program by Richel Bilderbeek<br/>
Copyright (C) 2012 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>Program.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfdef.htm">#ifdef</a> _WIN32<br/>
<a href="CppComment.htm">//</a>See http://www.richelbilderbeek.nl/Cpp<a href="CppCompile.htm">Compile</a>ErrorUnableToFindNumericLiteralOperatorOperatorQ.htm<br/>
<a href="CppPreIf.htm">#if</a> !(__GNUC__ <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 4 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> __GNUC_MINOR__ <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 8)<br/>
<a href="CppComment.htm">//</a>See http://www.richelbilderbeek.nl/Cpp<a href="CppCompile.htm">Compile</a>ErrorSwprintfHasNotBeenDeclared.htm<br/>
<a href="CppUndef.htm">#undef</a> __STRICT_ANSI__<br/>
<a href="CppEndif.htm">#endif</a><br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> own <a href="CppHeaderFile.htm">header file</a> as first substantive line of code, from:<br/>
<a href="CppComment.htm">//</a> * John Lakos. Large-Scale <a href="Cpp.htm">C++</a> Software Design. 1996. ISBN: 0-201-63362-0. Section 3.2, page 110<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>status.h"<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> RichelBilderbeek {<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt; Program::CreateProgram(<b><a href="CppConst.htm">const</a></b> ProgramType type)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt; p;<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (type)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::asciiArter: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppAsciiArter.htm">AsciiArter</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::barbaImage: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramBarbaImage); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::beerWanter: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameBeerWanter.htm">BeerWanter</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::bochum: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramBochum); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameBoenken.htm">boenken</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="GameBoenken.htm">Boenken</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::chrisWiley: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramChrisWiley); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::codeToHtml: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolCodeToHtml.htm">CodeToHtml</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::connectThree: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolCodeToHtml.htm">CodeToHtml</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::createGlossary: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolCreateGlossary.htm">CreateGlossary</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::create<a href="CppQt.htm">Qt</a>ProjectZipFile: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramCreate<a href="CppQt.htm">Qt</a>ProjectZipFile); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::createSitemap: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramCreateSitemap); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::crossPoll: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramCrossPoll); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::dasWahreSchlagerfest: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramDasWahreSchlagerfest); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::dot<a href="CppMatrix.htm">Matrix</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramDot<a href="CppMatrix.htm">Matrix</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="CppEncranger.htm">encranger</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppEncranger.htm">Encranger</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::filterOperationer: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramFilterOperationer); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::fryskLeareLieder: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramFryskLeareLieder); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="CppFunction.htm">function</a>Plotter: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppFunction.htm">Function</a>Plotter); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::gaborFilter: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramGaborFilter); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="CppGnuplot.htm">gnuplot</a><a href="CppInterface.htm">Interface</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppGnuplot.htm">Gnuplot</a><a href="CppInterface.htm">Interface</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::grayCoder: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramGrayCoder); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::gtst: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramGtst); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::histogramEqualizationer: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramHistogramEqualizationer); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="ToolHometrainer.htm">hometrainer</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolHometrainer.htm">Hometrainer</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::image<a href="CppRotate.htm">Rotate</a>r: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramImage<a href="CppRotate.htm">Rotate</a>r); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::k3OpEenRij: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramK3OpEenRij); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::kalmanFilterer: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolKalmanFilterer.htm">KalmanFilterer</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::keySender: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramKeySender); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::knokfighter: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramKnokfighter); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::kTouchLectureCreator: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramKTouchLectureCreator); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::learyCircumplex: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramLearyCircumplex); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::logisticGrowthSimulator: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramLogisticGrowthSimulator); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::loose: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramLoose); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::mazeCreator: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMazeCreator); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="GameMaziak.htm">maziak</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMaziak); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::morpher: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMorpher); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::multi<a href="CppEncranger.htm">Encranger</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMulti<a href="CppEncranger.htm">Encranger</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::muscaDomestica: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramMuscaDomestica); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="CppMusic.htm">music</a>Theory: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppMusic.htm">Music</a>Theory); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::ndsMake: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramNdsMake); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="CppNewick.htm">newick</a>Vector: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppNewickVector.htm">NewickVector</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::paperRockScissors: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramPaperRockScissors); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::pause: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolPause.htm">Pause</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::perfectElasticCollision: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramPerfectElasticCollision); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::picToCode: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolPicToCode.htm">PicToCode</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::pixelator: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramPixelator); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::pokeVolley: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramPokeVolley); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="CppPylos.htm">pylos</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppPylos.htm">Pylos</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::q<a href="CppMake.htm">make</a>Watcher: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramQ<a href="CppMake.htm">make</a>Watcher); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::quadraticSolver: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramQuadraticSolver); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::randomCode: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppRandomCode.htm">RandomCode</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::rasper: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramRasper); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::refrigeratorPuzzleSolver: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramRefrigeratorPuzzleSolver); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="CppRegex.htm">regex</a>Tester: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppRegex.htm">Regex</a>Tester); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::reversi: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramReversi); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::richelBilderbeekGallery: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramRichelBilderbeekGallery); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::richelBilderbeekNlSitemapGenerator: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramRichelBilderbeekNlSitemapGenerator); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::rubiksClock: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppRubiksClock.htm">RubiksClock</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::searchAndDestroyChess: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSearchAndDestroyChess); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::secretMessage: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolSecretMessage.htm">SecretMessage</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::simBrainiac: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSimBrainiac); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::simImmuneResponse: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSimImmuneResponse); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::sim<a href="CppMysteryMachine.htm">MysteryMachine</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSim<a href="CppMysteryMachine.htm">MysteryMachine</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::simplify<a href="CppNewick.htm">Newick</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSimplify<a href="CppNewick.htm">Newick</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::simStagecraft: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSimStagecraft); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::soaSim: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSoaSim); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::solvePuzzleX: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSolvePuzzleX); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::spaceHarry: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSpaceHarry); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::stateObserver: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppStateObserver.htm">StateObserver</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::styleSheetSetter: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramStyleSheetSetter); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::surfacePlotter: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramSurfacePlotter); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testAbout: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestAbout); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppBinaryNewickVector.htm">BinaryNewickVector</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestBinaryNewickVector.htm">TestBinaryNewickVector</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testBroadcastServer: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestBroadcastServer.htm">TestBroadcastServer</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testChess: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestChess); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testDial: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestDial.htm">TestDial</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppEncranger.htm">Encranger</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestEncranger.htm">TestEncranger</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testEntrance: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestEntrance.htm">TestEntrance</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppExercise.htm">Exercise</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestExercise.htm">TestExercise</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppFunctionParser.htm">FunctionParser</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestFunctionParser.htm">TestFunctionParser</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppGroupWidget.htm">GroupWidget</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestGroupWidget.htm">TestGroupWidget</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppLed.htm">Led</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestLed.htm">TestLed</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppMultiVector.htm">MultiVector</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestMultiVector.htm">TestMultiVector</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testNdsMake: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestNdsMake); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppNeuralNet.htm">NeuralNet</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestNeuralNet.htm">TestNeuralNet</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppPrimeExpert.htm">PrimeExpert</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTest<a href="CppPrimeExpert.htm">PrimeExpert</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppPylos.htm">Pylos</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestPylos.htm">TestPylos</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testQrcFile: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestQrcFile); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppQtArrowItem.htm">QtArrowItem</a>s: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtArrowItems.htm">TestQtArrowItems</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppQtCreator.htm">QtCreator</a>ProFile: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtCreatorProFile.htm">TestQtCreatorProFile</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTest<a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppQt.htm">Qt</a>Models: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtModels.htm">TestQtModels</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppQt.htm">Qt</a>RoundedEditRectItem: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtRoundededitRectItem.htm">TestQtRoundedEditRectItem</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTest<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppQt.htm">Qt</a>RoundedTextRectItem: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQtRoundedTextRectItem.htm">TestQtRoundedTextRectItem</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppQuestion.htm">Question</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestQuestion.htm">TestQuestion</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testSelectFile: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramTestSelectFile); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::testServerPusher: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestServerPusher.htm">TestServerPusher</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppShape.htm">Shape</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestShape.htm">TestShape</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppShinyButton.htm">ShinyButton</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestShinyButton.htm">TestShinyButton</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppStopwatch.htm">Stopwatch</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestStopwatch.htm">TestStopwatch</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppTicTacToe.htm">TicTacToe</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestTicTacToe.htm">TestTicTacToe</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppTime.htm">Time</a>dServerPusher: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestTimedServerPusher.htm">TestTimedServerPusher</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppToggleButton.htm">ToggleButton</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestToggleButton.htm">TestToggleButton</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::test<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTestTwoDigitNewick.htm">TestTwoDigitNewick</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::thorVeen: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramThorVeen); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::thresholdFilterer: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramThresholdFilterer); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::ticTacToe: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppTicTacToe.htm">TicTacToe</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::ticTacToeLearner: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTicTacToeLearner.htm">TicTacToeLearner</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::ticTacToeValuer: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTicTacToeValuer.htm">TicTacToeValuer</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::<a href="CppTime.htm">time</a>Poll: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="ToolTimePoll.htm">TimePoll</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::twoDigit<a href="CppNewick.htm">Newick</a>: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::ubuntuOneWatcher: p.reset(<b><a href="CppNew.htm">new</a></b> Program<a href="CppUbuntu.htm">Ubuntu</a>OneWatcher); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::visualAbc: p.reset(<b><a href="CppNew.htm">new</a></b> ProgramVisualAbc); <b><a href="CppBreak.htm">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramType::n_types:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(!"Unimplemented RichelBilderbeek::ProgramType");<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppLogic_error.htm">std::logic_error</a>("Unimplemented RichelBilderbeek::ProgramType");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> p;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt; &gt; Program::GetAllPrograms()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;ProgramType&gt; types <a href="CppOperatorAssign.htm">=</a> GetAllProgramTypes();<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt; &gt; v;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.htm">const</a></b> ProgramType type: types)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt; p <a href="CppOperatorAssign.htm">=</a> CreateProgram(type);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(p);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(p);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(v.size() <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> types.size());<br/>
&nbsp;&nbsp;<a href="CppSort.htm">std::sort</a>(v.begin(),v.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[](<b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt;&amp; lhs, <b><a href="CppConst.htm">const</a></b> <a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;Program&gt;&amp; rhs) { <b><a href="CppReturn.htm">return</a></b> lhs-&gt;GetName() &lt; rhs-&gt;GetName(); }<br/>
&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Program::GetFilenameBase() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<a href="CppString.htm">std::string</a> s <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;GetTypeName();<br/>
&nbsp;&nbsp;s[0] <a href="CppOperatorAssign.htm">=</a> <a href="CppToupper.htm">std::toupper</a>(s[0]);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> s <a href="CppOperatorPlus.htm">+</a> GetName();<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Program::GetFilenameConsole() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetFilenameBase() <a href="CppOperatorPlus.htm">+</a> "Console.png";<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Program::GetFilenameDesktop() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetFilenameBase() <a href="CppOperatorPlus.htm">+</a> "Desktop.png";<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Program::GetFilenameDesktop<a href="CppWindows.htm">Windows</a>Only() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetFilenameBase() <a href="CppOperatorPlus.htm">+</a> "Desktop<a href="CppWindows.htm">Windows</a>Only.png";<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Program::GetFilenameWeb() <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> GetFilenameBase() <a href="CppOperatorPlus.htm">+</a> "Web.png";<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Program::Get<a href="CppVersion.htm">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.0";<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; Program::Get<a href="CppVersion.htm">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("2012-02-19: <a href="CppVersion.htm">Version</a> 1.0: initial <a href="CppVersion.htm">version</a>");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> Program * <b><a href="CppConst.htm">const</a></b> p)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> name <a href="CppOperatorAssign.htm">=</a> p-&gt;GetName();<br/>
<br/>
&nbsp;&nbsp;os <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> name;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (name.size() &lt; 10) os <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t';<br/>
<br/>
&nbsp;&nbsp;os<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> p-&gt;GetTypeName()<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ProgramStatusToStr(p-&gt;GetStatusConsole())<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ProgramStatusToStr(p-&gt;GetStatusDesktop<a href="CppWindows.htm">Windows</a>Only())<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ProgramStatusToStr(p-&gt;GetStatusDesktop())<br/>
&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> '\t' <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ProgramStatusToStr(p-&gt;GetStatusWeb<a href="CppApplication.htm">Application</a>());<br/>
&nbsp;&nbsp; <b><a href="CppReturn.htm">return</a></b> os;<br/>
}<br/>
<br/>
<b><a href="CppBool.htm">bool</a></b> <b><a href="CppOperatorLess.htm">operator&lt;</a></b>(<b><a href="CppConst.htm">const</a></b> Program&amp; lhs, <b><a href="CppConst.htm">const</a></b> Program&amp; rhs)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (lhs.GetTypeName() &lt; rhs.GetTypeName()) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (lhs.GetTypeName() &gt; rhs.GetTypeName()) <b><a href="CppReturn.htm">return</a></b> <b><a href="CppFalse.htm">false</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> lhs.GetName() &lt; rhs.GetName();<br/>
}<br/>
<br/>
} <a href="CppComment.htm">//</a><b><a href="CppNamespace.htm">namespace</a></b> RichelBilderbeek<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>richelbilderbeekprogramstatus.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="richelbilderbeekprogramstatus.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
RichelBilderbeek::ProgramStatus, status of a program by Richel Bilderbeek<br/>
Copyright (C) 2012 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>ProgramStatus.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> RICHELBILDERBEEKPROGRAMSTATUS_H<br/>
<a href="CppDefine.htm">#define</a> RICHELBILDERBEEKPROGRAMSTATUS_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> RichelBilderbeek {<br/>
<br/>
<a href="CppComment.htm">///</a>Status: yes, no, never, not applicable, work in progress, to be done and unknown<br/>
<b><a href="CppEnumClass.htm">enum class</a></b> ProgramStatus { yes, no, nvr, n_a, wip, tbd, unk };<br/>
<br/>
<b><a href="CppStruct.htm">struct</a></b> ProgramStatus<a href="CppVersion.htm">Version</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.htm">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History();<br/>
};<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> ProgramStatusToStr(<b><a href="CppConst.htm">const</a></b> ProgramStatus c);<br/>
<a href="CppOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> ProgramStatus c);<br/>
<br/>
} <a href="CppComment.htm">//</a><b><a href="CppNamespace.htm">namespace</a></b> RichelBilderbeek<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> RICHELBILDERBEEKPROGRAMSTATUS_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>richelbilderbeekprogramstatus.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="richelbilderbeekprogramstatus.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
RichelBilderbeek::ProgramStatus, status of a program by Richel Bilderbeek<br/>
Copyright (C) 2012 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>ProgramStatus.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfdef.htm">#ifdef</a> _WIN32<br/>
<a href="CppComment.htm">//</a>See http://www.richelbilderbeek.nl/Cpp<a href="CppCompile.htm">Compile</a>ErrorUnableToFindNumericLiteralOperatorOperatorQ.htm<br/>
<a href="CppPreIf.htm">#if</a> !(__GNUC__ <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 4 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> __GNUC_MINOR__ <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 8)<br/>
<a href="CppComment.htm">//</a>See http://www.richelbilderbeek.nl/Cpp<a href="CppCompile.htm">Compile</a>ErrorSwprintfHasNotBeenDeclared.htm<br/>
<a href="CppUndef.htm">#undef</a> __STRICT_ANSI__<br/>
<a href="CppEndif.htm">#endif</a><br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> own <a href="CppHeaderFile.htm">header file</a> as first substantive line of code, from:<br/>
<a href="CppComment.htm">//</a> * John Lakos. Large-Scale <a href="Cpp.htm">C++</a> Software Design. 1996. ISBN: 0-201-63362-0. Section 3.2, page 110<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>status.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStdexceptH.htm">stdexcept</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> RichelBilderbeek {<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> ProgramStatusToStr(<b><a href="CppConst.htm">const</a></b> ProgramStatus c)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.htm">switch</a></b> (c)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::yes: <b><a href="CppReturn.htm">return</a></b> "yes";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::no : <b><a href="CppReturn.htm">return</a></b> "no";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::nvr: <b><a href="CppReturn.htm">return</a></b> "never";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::n_a: <b><a href="CppReturn.htm">return</a></b> "n/a";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::wip: <b><a href="CppReturn.htm">return</a></b> "wip";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::tbd: <b><a href="CppReturn.htm">return</a></b> "todo";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> ProgramStatus::unk: <b><a href="CppReturn.htm">return</a></b> "unknown";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDefault.htm">default</a></b>: <a href="CppAssert.htm">assert</a>(!"Should not get here");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThrow.htm">throw</a></b> <a href="CppLogic_error.htm">std::logic_error</a>("RichelBilderbeek::ProgramStatusToStr");<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> ProgramStatus<a href="CppVersion.htm">Version</a>::Get<a href="CppVersion.htm">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.0";<br/>
}<br/>
<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; ProgramStatus<a href="CppVersion.htm">Version</a>::Get<a href="CppVersion.htm">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("2012-02-19: <a href="CppVersion.htm">Version</a> 1.0: initial <a href="CppVersion.htm">version</a>");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> ProgramStatus c)<br/>
{<br/>
&nbsp;&nbsp;os <a href="CppOperatorStreamOut.htm">&lt;&lt;</a> ProgramStatusToStr(c);<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> os;<br/>
}<br/>
<br/>
} <a href="CppComment.htm">//</a><b><a href="CppNamespace.htm">namespace</a></b> RichelBilderbeek<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>richelbilderbeekprogramtype.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="richelbilderbeekprogramtype.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
RichelBilderbeek::ProgramType, <b><a href="CppEnum.htm">enum</a></b> <b><a href="CppFor.htm">for</a></b> a program by Richel Bilderbeek<br/>
Copyright (C 2013 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option <a href="CppAny.htm">any</a> later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> RICHELBILDERBEEKPROGRAMTYPE_H<br/>
<a href="CppDefine.htm">#define</a> RICHELBILDERBEEKPROGRAMTYPE_H<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.htm">namespace</a></b> RichelBilderbeek {<br/>
<br/>
<b><a href="CppEnumClass.htm">enum class</a></b> ProgramType<br/>
{<br/>
&nbsp;&nbsp;asciiArter,<br/>
&nbsp;&nbsp;barbaImage,<br/>
&nbsp;&nbsp;beerWanter,<br/>
&nbsp;&nbsp;bochum,<br/>
&nbsp;&nbsp;<a href="GameBoenken.htm">boenken</a>,<br/>
&nbsp;&nbsp;chrisWiley,<br/>
&nbsp;&nbsp;codeToHtml,<br/>
&nbsp;&nbsp;connectThree,<br/>
&nbsp;&nbsp;createGlossary,<br/>
&nbsp;&nbsp;create<a href="CppQt.htm">Qt</a>ProjectZipFile,<br/>
&nbsp;&nbsp;createSitemap,<br/>
&nbsp;&nbsp;crossPoll,<br/>
&nbsp;&nbsp;dasWahreSchlagerfest,<br/>
&nbsp;&nbsp;dot<a href="CppMatrix.htm">Matrix</a>,<br/>
&nbsp;&nbsp;<a href="CppEncranger.htm">encranger</a>,<br/>
&nbsp;&nbsp;filterOperationer,<br/>
&nbsp;&nbsp;fryskLeareLieder,<br/>
&nbsp;&nbsp;<a href="CppFunction.htm">function</a>Plotter,<br/>
&nbsp;&nbsp;gaborFilter,<br/>
&nbsp;&nbsp;<a href="CppGnuplot.htm">gnuplot</a><a href="CppInterface.htm">Interface</a>,<br/>
&nbsp;&nbsp;grayCoder,<br/>
&nbsp;&nbsp;gtst,<br/>
&nbsp;&nbsp;histogramEqualizationer,<br/>
&nbsp;&nbsp;<a href="ToolHometrainer.htm">hometrainer</a>,<br/>
&nbsp;&nbsp;image<a href="CppRotate.htm">Rotate</a>r,<br/>
&nbsp;&nbsp;k3OpEenRij,<br/>
&nbsp;&nbsp;kalmanFilterer,<br/>
&nbsp;&nbsp;keySender,<br/>
&nbsp;&nbsp;kTouchLectureCreator,<br/>
&nbsp;&nbsp;knokfighter,<br/>
&nbsp;&nbsp;learyCircumplex,<br/>
&nbsp;&nbsp;logisticGrowthSimulator,<br/>
&nbsp;&nbsp;loose,<br/>
&nbsp;&nbsp;mazeCreator,<br/>
&nbsp;&nbsp;<a href="GameMaziak.htm">maziak</a>,<br/>
&nbsp;&nbsp;morpher,<br/>
&nbsp;&nbsp;multi<a href="CppEncranger.htm">Encranger</a>,<br/>
&nbsp;&nbsp;muscaDomestica,<br/>
&nbsp;&nbsp;<a href="CppMusic.htm">music</a>Theory,<br/>
&nbsp;&nbsp;ndsMake,<br/>
&nbsp;&nbsp;pause,<br/>
&nbsp;&nbsp;<a href="CppNewick.htm">newick</a>Vector,<br/>
&nbsp;&nbsp;paperRockScissors,<br/>
&nbsp;&nbsp;perfectElasticCollision,<br/>
&nbsp;&nbsp;picToCode,<br/>
&nbsp;&nbsp;pixelator,<br/>
&nbsp;&nbsp;pokeVolley,<br/>
&nbsp;&nbsp;<a href="CppPylos.htm">pylos</a>,<br/>
&nbsp;&nbsp;q<a href="CppMake.htm">make</a>Watcher,<br/>
&nbsp;&nbsp;quadraticSolver,<br/>
&nbsp;&nbsp;randomCode,<br/>
&nbsp;&nbsp;rasper,<br/>
&nbsp;&nbsp;refrigeratorPuzzleSolver,<br/>
&nbsp;&nbsp;<a href="CppRegex.htm">regex</a>Tester,<br/>
&nbsp;&nbsp;reversi,<br/>
&nbsp;&nbsp;richelBilderbeekGallery,<br/>
&nbsp;&nbsp;richelBilderbeekNlSitemapGenerator,<br/>
&nbsp;&nbsp;rubiksClock,<br/>
&nbsp;&nbsp;searchAndDestroyChess,<br/>
&nbsp;&nbsp;secretMessage,<br/>
&nbsp;&nbsp;simBrainiac,<br/>
&nbsp;&nbsp;simImmuneResponse,<br/>
&nbsp;&nbsp;sim<a href="CppMysteryMachine.htm">MysteryMachine</a>,<br/>
&nbsp;&nbsp;simplify<a href="CppNewick.htm">Newick</a>,<br/>
&nbsp;&nbsp;simStagecraft,<br/>
&nbsp;&nbsp;soaSim,<br/>
&nbsp;&nbsp;solvePuzzleX,<br/>
&nbsp;&nbsp;spaceHarry,<br/>
&nbsp;&nbsp;stateObserver,<br/>
&nbsp;&nbsp;styleSheetSetter,<br/>
&nbsp;&nbsp;surfacePlotter,<br/>
&nbsp;&nbsp;testAbout,<br/>
&nbsp;&nbsp;test<a href="CppBinaryNewickVector.htm">BinaryNewickVector</a>,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>testBouncingBalls<a href="CppWidget.htm">Widget</a>,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>testBouncingRects<a href="CppWidget.htm">Widget</a>,<br/>
&nbsp;&nbsp;testBroadcastServer,<br/>
&nbsp;&nbsp;testChess,<br/>
&nbsp;&nbsp;testDial,<br/>
&nbsp;&nbsp;test<a href="CppEncranger.htm">Encranger</a>,<br/>
&nbsp;&nbsp;testEntrance,<br/>
&nbsp;&nbsp;test<a href="CppExercise.htm">Exercise</a>,<br/>
&nbsp;&nbsp;test<a href="CppFunctionParser.htm">FunctionParser</a>,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>testGraphicsProxy<a href="CppWidget.htm">Widget</a>,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>testGravity<a href="CppWidget.htm">Widget</a>,<br/>
&nbsp;&nbsp;test<a href="CppGroupWidget.htm">GroupWidget</a>,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>testHugeVector,<br/>
&nbsp;&nbsp;test<a href="CppLed.htm">Led</a>,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>test<a href="CppManyDigitNewick.htm">ManyDigitNewick</a>,<br/>
&nbsp;&nbsp;test<a href="CppMultiVector.htm">MultiVector</a>,<br/>
&nbsp;&nbsp;testNdsMake,<br/>
&nbsp;&nbsp;test<a href="CppNeuralNet.htm">NeuralNet</a>,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>test<a href="CppNewick.htm">Newick</a>,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>test<a href="CppNewickVector.htm">NewickVector</a>,<br/>
&nbsp;&nbsp;test<a href="CppPrimeExpert.htm">PrimeExpert</a>,<br/>
&nbsp;&nbsp;test<a href="CppPylos.htm">Pylos</a>,<br/>
&nbsp;&nbsp;testQrcFile,<br/>
&nbsp;&nbsp;test<a href="CppQtArrowItem.htm">QtArrowItem</a>s,<br/>
&nbsp;&nbsp;test<a href="CppQtCreator.htm">QtCreator</a>ProFile,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>test<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>,<br/>
&nbsp;&nbsp;test<a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>,<br/>
&nbsp;&nbsp;test<a href="CppQt.htm">Qt</a>Models,<br/>
&nbsp;&nbsp;test<a href="CppQt.htm">Qt</a>RoundedEditRectItem,<br/>
&nbsp;&nbsp;test<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>,<br/>
&nbsp;&nbsp;test<a href="CppQt.htm">Qt</a>RoundedTextRectItem,<br/>
&nbsp;&nbsp;test<a href="CppQuestion.htm">Question</a>,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>testReversi,<br/>
&nbsp;&nbsp;testSelectFile,<br/>
&nbsp;&nbsp;testServerPusher,<br/>
&nbsp;&nbsp;test<a href="CppShape.htm">Shape</a>,<br/>
&nbsp;&nbsp;test<a href="CppShinyButton.htm">ShinyButton</a>,<br/>
&nbsp;&nbsp;test<a href="CppStopwatch.htm">Stopwatch</a>,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>testTextPosition<a href="CppWidget.htm">Widget</a>,<br/>
&nbsp;&nbsp;test<a href="CppTicTacToe.htm">TicTacToe</a>,<br/>
&nbsp;&nbsp;test<a href="CppTime.htm">Time</a>dServerPusher,<br/>
&nbsp;&nbsp;test<a href="CppToggleButton.htm">ToggleButton</a>,<br/>
&nbsp;&nbsp;test<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>,<br/>
&nbsp;&nbsp;thorVeen,<br/>
&nbsp;&nbsp;thresholdFilterer,<br/>
&nbsp;&nbsp;ticTacToe,<br/>
&nbsp;&nbsp;ticTacToeLearner,<br/>
&nbsp;&nbsp;ticTacToeValuer,<br/>
&nbsp;&nbsp;<a href="CppTime.htm">time</a>Poll,<br/>
&nbsp;&nbsp;twoDigit<a href="CppNewick.htm">Newick</a>,<br/>
&nbsp;&nbsp;ubuntuOneWatcher,<br/>
&nbsp;&nbsp;visualAbc,<br/>
&nbsp;&nbsp;n_types <a href="CppComment.htm">//</a>Used <b><a href="CppFor.htm">for</a></b> <a href="CppDebug.htm">debugging</a><br/>
};<br/>
<br/>
<a href="CppVector.htm">std::vector</a>&lt;ProgramType&gt; GetAllProgramTypes();<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> RichelBilderbeek {<br/>
<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> RICHELBILDERBEEKPROGRAMTYPE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>richelbilderbeekprogramtype.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="richelbilderbeekprogramtype.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
RichelBilderbeek::ProgramType, <b><a href="CppEnum.htm">enum</a></b> <b><a href="CppFor.htm">for</a></b> a program by Richel Bilderbeek<br/>
Copyright (C) 2013 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="ProjectRichelBilderbeek.htm">ProjectRichelBilderbeek</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfdef.htm">#ifdef</a> _WIN32<br/>
<a href="CppComment.htm">//</a>See http://www.richelbilderbeek.nl/Cpp<a href="CppCompile.htm">Compile</a>ErrorUnableToFindNumericLiteralOperatorOperatorQ.htm<br/>
<a href="CppPreIf.htm">#if</a> !(__GNUC__ <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 4 <a href="CppOperatorLogicalAnd.htm">&amp;&amp;</a> __GNUC_MINOR__ <a href="CppOperatorGreaterEqual.htm">&gt;=</a> 8)<br/>
<a href="CppComment.htm">//</a>See http://www.richelbilderbeek.nl/Cpp<a href="CppCompile.htm">Compile</a>ErrorSwprintfHasNotBeenDeclared.htm<br/>
<a href="CppUndef.htm">#undef</a> __STRICT_ANSI__<br/>
<a href="CppEndif.htm">#endif</a><br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> own <a href="CppHeaderFile.htm">header file</a> as first substantive line of code, from:<br/>
<a href="CppComment.htm">//</a> * John Lakos. Large-Scale <a href="Cpp.htm">C++</a> Software Design. 1996. ISBN: 0-201-63362-0. Section 3.2, page 110<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppRichelBilderbeekProgram.htm">richelbilderbeekprogram</a>type.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppTrace.htm">trace</a>.h"<br/>
<b><a href="CppNamespace.htm">namespace</a></b> RichelBilderbeek {<br/>
<br/>
<a href="CppVector.htm">std::vector</a>&lt;ProgramType&gt; GetAllProgramTypes()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;ProgramType&gt; v <a href="CppOperatorAssign.htm">=</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::asciiArter,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::barbaImage,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::beerWanter,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::bochum,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::<a href="GameBoenken.htm">boenken</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::chrisWiley,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::codeToHtml,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::connectThree,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::createGlossary,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::create<a href="CppQt.htm">Qt</a>ProjectZipFile,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::createSitemap,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::crossPoll,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::dasWahreSchlagerfest,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::dot<a href="CppMatrix.htm">Matrix</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::<a href="CppEncranger.htm">encranger</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::filterOperationer,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::fryskLeareLieder,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::<a href="CppFunction.htm">function</a>Plotter,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::gaborFilter,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::<a href="CppGnuplot.htm">gnuplot</a><a href="CppInterface.htm">Interface</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::grayCoder,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::gtst,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::histogramEqualizationer,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::<a href="ToolHometrainer.htm">hometrainer</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::image<a href="CppRotate.htm">Rotate</a>r,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::k3OpEenRij,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::kalmanFilterer,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::keySender,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::kTouchLectureCreator,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::knokfighter,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::learyCircumplex,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::logisticGrowthSimulator,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::loose,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::mazeCreator,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::<a href="GameMaziak.htm">maziak</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::morpher,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::multi<a href="CppEncranger.htm">Encranger</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::muscaDomestica,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::<a href="CppMusic.htm">music</a>Theory,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::ndsMake,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::pause,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::<a href="CppNewick.htm">newick</a>Vector,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::paperRockScissors,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::perfectElasticCollision,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::picToCode,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::pixelator,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::pokeVolley,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::<a href="CppPylos.htm">pylos</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::q<a href="CppMake.htm">make</a>Watcher,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::quadraticSolver,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::randomCode,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::rasper,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::refrigeratorPuzzleSolver,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::<a href="CppRegex.htm">regex</a>Tester,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::reversi,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::richelBilderbeekGallery,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::richelBilderbeekNlSitemapGenerator,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::rubiksClock,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::searchAndDestroyChess,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::secretMessage,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::simBrainiac,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::simImmuneResponse,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::sim<a href="CppMysteryMachine.htm">MysteryMachine</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::simplify<a href="CppNewick.htm">Newick</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::simStagecraft,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::soaSim,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::solvePuzzleX,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::spaceHarry,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::stateObserver,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::styleSheetSetter,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::surfacePlotter,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::testAbout,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppBinaryNewickVector.htm">BinaryNewickVector</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ProgramType::testBouncingBalls<a href="CppWidget.htm">Widget</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ProgramType::testBouncingRects<a href="CppWidget.htm">Widget</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::testBroadcastServer,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::testChess,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::testDial,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppEncranger.htm">Encranger</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::testEntrance,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppExercise.htm">Exercise</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppFunctionParser.htm">FunctionParser</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ProgramType::testGraphicsProxy<a href="CppWidget.htm">Widget</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ProgramType::testGravity<a href="CppWidget.htm">Widget</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppGroupWidget.htm">GroupWidget</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ProgramType::testHugeVector,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppLed.htm">Led</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ProgramType::test<a href="CppManyDigitNewick.htm">ManyDigitNewick</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppMultiVector.htm">MultiVector</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::testNdsMake,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppNeuralNet.htm">NeuralNet</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ProgramType::test<a href="CppNewick.htm">Newick</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ProgramType::test<a href="CppNewickVector.htm">NewickVector</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppPrimeExpert.htm">PrimeExpert</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppPylos.htm">Pylos</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::testQrcFile,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppQtArrowItem.htm">QtArrowItem</a>s,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppQtCreator.htm">QtCreator</a>ProFile,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ProgramType::test<a href="CppQtHideAndShowDialog.htm">QtHideAndShowDialog</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppQtKeyboardFriendlyGraphicsView.htm">QtKeyboardFriendlyGraphicsView</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppQt.htm">Qt</a>Models,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppQt.htm">Qt</a>RoundedEditRectItem,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppQt.htm">Qt</a>RoundedTextRectItem,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppQuestion.htm">Question</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ProgramType::testReversi,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::testSelectFile,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::testServerPusher,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppShape.htm">Shape</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppShinyButton.htm">ShinyButton</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppStopwatch.htm">Stopwatch</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a>ProgramType::testTextPosition<a href="CppWidget.htm">Widget</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppTicTacToe.htm">TicTacToe</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppTime.htm">Time</a>dServerPusher,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppToggleButton.htm">ToggleButton</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::test<a href="CppTwoDigitNewick.htm">TwoDigitNewick</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::thorVeen,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::thresholdFilterer,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::ticTacToe,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::ticTacToeLearner,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::ticTacToeValuer,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::<a href="CppTime.htm">time</a>Poll,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::twoDigit<a href="CppNewick.htm">Newick</a>,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::ubuntuOneWatcher,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;ProgramType::visualAbc<br/>
&nbsp;&nbsp;};<br/>
&nbsp;&nbsp;<a href="CppIfndef.htm">#ifndef</a> <a href="CppNDEBUG.htm">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size()) <a href="CppOperatorNotEqual.htm">!=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ProgramType::n_types))<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(v.size());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ProgramType::n_types));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTRACE.htm">TRACE</a>("Copy the contents of ProgramType (except n_types) to above here");<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppEndif.htm">#endif</a><br/>
&nbsp;&nbsp;<a href="CppAssert.htm">assert</a>(<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(v.size()) <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(ProgramType::n_types));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.htm">namespace</a></b> RichelBilderbeek<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
