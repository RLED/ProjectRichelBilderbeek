<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>QtRoundedRectItem</title>
  <meta name="description" content="C++ QtRoundedRectItem"/>
  <meta name="keywords" content="C++ QtRoundedRectItem code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppQtRoundedRectItem.htm">QtRoundedRectItem</a></h1>
<p>&nbsp;</p>
<!-- This text is generated by CodeToHtml -->
<p><img src="PicQt.png" alt="Qt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppQtRoundedEditRectItem.htm">QtRoundedEditRectItem</a> is a <a href="CppQt.htm">Qt</a> 
<a href="CppQGraphicsItem.htm">QGraphicsItem</a> <a href="CppClass.htm">class</a> that displays a rounded rectangle.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>qtroundedrectitem.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="qtroundedrectitem.h" border = "1"><tr><td><code>
<a href="CppIfndef.html">#ifndef</a> QTROUNDEDRECTITEM_H<br/>
<a href="CppDefine.html">#define</a> QTROUNDEDRECTITEM_H<br/>
<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.html">typedef</a></b>s"<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppSignals2.html">signals2</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQGraphicsRectItem.html">QGraphicsRectItem</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;QPen&gt;<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<a href="CppComment.htm">///</a>Rounded <a href="CppRectangle.html">rectangle</a> item<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a> : <b><a href="CppPublic.html">public</a></b> <a href="CppQGraphicsRectItem.html">QGraphicsRectItem</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>(<a href="CppQGraphicsItem.html">QGraphicsItem</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.html">virtual</a></b> ~<a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>() {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the pen by which the contour is drawn<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> QPen&amp; GetContourPen() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_contour_pen; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the pen by which focus is indicated<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> QPen&amp; GetFocusPen() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_focus_pen; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the rounded rect corner x radius<br/>
&nbsp;&nbsp;<b><a href="CppDouble.html">double</a></b> GetRadiusX() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_radius_x; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the rounded rect corner y radius<br/>
&nbsp;&nbsp;<b><a href="CppDouble.html">double</a></b> GetRadiusY() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_radius_y; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.html">version</a> of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> Get<a href="CppVersion.html">Version</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppVersion.html">version</a> history of <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.html">class</a></b><br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; Get<a href="CppVersion.html">Version</a>History();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the pen by which the contours are normally drawn<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Default value: QPen(<a href="CppQt.htm">Qt</a>::DashLine)<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetContourPen(<b><a href="CppConst.html">const</a></b> QPen&amp; pen);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the pen by which focus is indicated<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Default value: QPen(<a href="CppQt.htm">Qt</a>::DashLine)<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetFocusPen(<b><a href="CppConst.html">const</a></b> QPen&amp; pen);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the rounded rect corner x radius<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetRadiusX(<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> radius_x);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the rounded rect corner y radius<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetRadiusY(<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> radius_y);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the rounded rect<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetRoundedRect(<b><a href="CppConst.html">const</a></b> <a href="CppQRect.html">QRect</a>F rect, <b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> radius_x, <b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> radius_y);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppSignal.html">Signal</a> <a href="CppEmit.html">emitted</a> when <b><a href="CppThis.htm">this</a></b> item has updated itself<br/>
&nbsp;&nbsp;<b><a href="CppMutable.html">mutable</a></b> <a href="CppBoostSignal.html">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> (<b><a href="CppConst.html">const</a></b> <a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>*)&gt; m_signal_item_has_updated;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppSignal.html">Signal</a> <a href="CppEmit.html">emitted</a> when <b><a href="CppThis.htm">this</a></b> item has moved<br/>
&nbsp;&nbsp;<b><a href="CppMutable.html">mutable</a></b> <a href="CppBoostSignal.html">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_request_scene_update;<br/>
<br/>
<b><a href="CppProtected.html">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.html">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> mouseMoveEvent(<a href="CppQGraphicsSceneMouseEvent.html">QGraphicsSceneMouseEvent</a> *event);<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.html">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> paint(<a href="CppQPainter.html">QPainter</a> *painter, <b><a href="CppConst.html">const</a></b> <a href="CppQStyleOptionGraphicsItem.html">QStyleOptionGraphicsItem</a> *option, <a href="CppQWidget.html">QWidget</a> *<a href="CppWidget.html">widget</a>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The pen by which the contour is drawn<br/>
&nbsp;&nbsp;QPen m_contour_pen;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The pen by which focus is indicated<br/>
&nbsp;&nbsp;QPen m_focus_pen;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The rounded rect corner x radius<br/>
&nbsp;&nbsp;<b><a href="CppDouble.html">double</a></b> m_radius_x;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The rounded rect corner y radius<br/>
&nbsp;&nbsp;<b><a href="CppDouble.html">double</a></b> m_radius_y;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> QTROUNDEDRECTITEM_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>qtroundedrectitem.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="qtroundedrectitem.cpp" border = "1"><tr><td><code>
<a href="CppPragma.html">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.html">-Weffc++</a>"<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.html">typedef</a></b>s"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppQtRoundedRectItem.html">qtroundedrectitem</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCassertH.html">cassert</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppSstreamH.html">sstream</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQFont.html">QFont</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQGraphicsScene.html">QGraphicsScene</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQPainter.html">QPainter</a>&gt;<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>::<a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>(<a href="CppQGraphicsItem.html">QGraphicsItem</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQGraphicsRectItem.html">QGraphicsRectItem</a>(parent), <a href="CppComment.htm">//</a>New since <a href="CppQt.htm">Qt</a>5<br/>
&nbsp;&nbsp; m_signal_item_has_updated{},<br/>
&nbsp;&nbsp; m_signal_request_scene_update{},<br/>
&nbsp;&nbsp; m_contour_pen(QPen(<a href="CppQColor.html">QColor</a>(0,0,0))),<br/>
&nbsp;&nbsp; m_focus_pen(QPen(<a href="CppQColor.html">QColor</a>(0,0,0),1,<a href="CppQt.htm">Qt</a>::DashLine)),<br/>
&nbsp;&nbsp; m_radius_x{4.0},<br/>
&nbsp;&nbsp; m_radius_y{4.0}<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setFlags(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.html">QGraphicsItem</a>::ItemIsFocusable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.html">QGraphicsItem</a>::ItemIsMovable<br/>
&nbsp;&nbsp;&nbsp;&nbsp;| <a href="CppQGraphicsItem.html">QGraphicsItem</a>::ItemIsSelectable);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetRoundedRect(<a href="CppQRect.html">QRect</a>F(-16.0,-16.0,32.0,32.0),m_radius_x,m_radius_y);<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>::Get<a href="CppVersion.html">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> "1.2";<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>::Get<a href="CppVersion.html">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("2012-12-13: <a href="CppVersion.html">version</a> 1.0: initial <a href="CppVersion.html">version</a>");<br/>
&nbsp;&nbsp;v.push_back("2012-12-19: <a href="CppVersion.html">version</a> 1.1: added use of pen, brush and focus-indicating pen");<br/>
&nbsp;&nbsp;v.push_back("2012-12-22: <a href="CppVersion.html">version</a> 1.2: correctly uses the focus and regular pen, added contour pen");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "-Wunused-but-set-parameter"<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>::mouseMoveEvent(<a href="CppQGraphicsSceneMouseEvent.html">QGraphicsSceneMouseEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQGraphicsRectItem.html">QGraphicsRectItem</a>::mouseMoveEvent(event);<br/>
&nbsp;&nbsp;m_signal_request_scene_update();<br/>
}<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>::paint(<a href="CppQPainter.html">QPainter</a> *painter, <b><a href="CppConst.html">const</a></b> <a href="CppQStyleOptionGraphicsItem.html">QStyleOptionGraphicsItem</a> *, <a href="CppQWidget.html">QWidget</a> *)<br/>
{<br/>
&nbsp;&nbsp;painter-&gt;setBrush(brush());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>The item can be selected by clicking on it, or can have focus by moving towards it<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<b><a href="CppThis.htm">this</a></b>-&gt;isSelected() <a href="CppOperatorLogicalOr.htm">||</a> <b><a href="CppThis.htm">this</a></b>-&gt;hasFocus())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;setPen(m_focus_pen);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;drawRoundedRect(<b><a href="CppThis.htm">this</a></b>-&gt;rect(),m_radius_x,m_radius_y);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppElse.htm">else</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;setPen(m_contour_pen);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;painter-&gt;drawRoundedRect(<b><a href="CppThis.htm">this</a></b>-&gt;rect(),m_radius_x,m_radius_y);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>::SetContourPen(<b><a href="CppConst.html">const</a></b> QPen&amp; pen)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_contour_pen <a href="CppOperatorNotEqual.htm">!=</a> pen)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_contour_pen <a href="CppOperatorAssign.htm">=</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_item_has_updated(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>::SetFocusPen(<b><a href="CppConst.html">const</a></b> QPen&amp; pen)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_focus_pen <a href="CppOperatorNotEqual.htm">!=</a> pen)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_focus_pen <a href="CppOperatorAssign.htm">=</a> pen;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_item_has_updated(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>::SetRadiusX(<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> radius_x)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_radius_x <a href="CppOperatorNotEqual.htm">!=</a> radius_x)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_radius_x <a href="CppOperatorAssign.htm">=</a> radius_x;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_item_has_updated(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>::SetRadiusY(<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> radius_y)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (m_radius_y <a href="CppOperatorNotEqual.htm">!=</a> radius_y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_radius_y <a href="CppOperatorAssign.htm">=</a> radius_y;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_item_has_updated(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQtRoundedRectItem.html">QtRoundedRectItem</a>::SetRoundedRect(<b><a href="CppConst.html">const</a></b> <a href="CppQRect.html">QRect</a>F rect, <b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> radius_x, <b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> radius_y)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setRect(rect);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetRadiusX(radius_x);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;SetRadiusY(radius_y);<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
