<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>GameKnokfighter</title>
  <meta name="description" content="C++ GameKnokfighter"/>
  <meta name="keywords" content="C++ GameKnokfighter code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="GameKnokfighter.htm">GameKnokfighter</a></h1>
<p>&nbsp;</p>
<!-- This text is generated by CodeToHtml -->
<p><a href="GameKnokfighter.htm">Knokfighter</a> is a <a href="Games.htm">game</a> programmed by me and Joost van den Bogaart.</p>
<p>&nbsp;</p>
<p>We tried to make a Double Dragon clone with ourselves as the heroes.</p>
<p>&nbsp;</p>
<p><a href="GameKnokfighter.htm">Knokfighter</a> is programmed in <a href="Cpp.htm">C++</a> using the IDE <a href="CppBuilder.htm">C++ Builder</a> 6.0. It uses the <a href="CppVcl.htm">VCL</a> and <a href="CppBoost.htm">Boost</a> <a href="CppLibrary.htm">libraries</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Downloads</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="GameKnokfighter_1_0.png">View a screenshot of 'Knokfighter' (version 1.0)(png)</a></li>
  <li><a href="GameKnokfighterStory_1_0.zip">Download the (.ppt) storyline of the final game (version 1.0)(zip)</a></li>
  <li><a href="GameKnokfighterExe_1_0.zip">Download the 'Knokfighter' Windows executable (version 1.0)(zip)</a></li>
  <li><a href="GameKnokfighterResources_1_0.zip">Download the 'Knokfighter' (.bmp) resources (version 1.0)(zip)</a></li>
  <li><a href="GameKnokfighterExeNoResources_1_0.zip">Download the 'Knokfighter' Windows executable (without resources)(version 1.0)(zip)</a></li>
  <li><a href="GameKnokfighterSource_1_0.zip">Download the 'Knokfighter' source code (without resources)(version 1.0)(zip)</a></li>
  <li><a href="GameKnokfighterSource_1_0.htm">View the C++ Builder source code of 'Knokfighter' as a web page (version 1.0)(htm)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 13.04 (raring)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> unknown</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicGui.png" alt="GUI"/> <a href="CppGuiApplication.htm">GUI application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="Cpp11.htm">C++11</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.7.3</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.1.1 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.7.3</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: GameKnokfighterDesktop.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="GameKnokfighterDesktop.pro" border = "1"><tr><td><code>
QT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; += core gui<br/>
greaterThan(QT_MAJOR_VERSION, 4): QT += <a href="CppWidget.htm">widget</a>s<br/>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp11.htm">c++11</a> <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a><br/>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppRainbow.htm">CppRainbow</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qt<a href="CppMain.htm">main</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtknokfighterbackground.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtknokfighter<a href="CppMain.htm">main</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtknokfighterplayer.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppRainbow.htm">CppRainbow</a>/<a href="CppRainbow.htm">rainbow</a>.cpp<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;knokfighterplayer.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;knokighterkey.cpp \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;knokfighterkey.cpp<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;knokfighterplayerstate.cpp \<br/>
#&nbsp;&nbsp; knokfighterattack.cbpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a>&nbsp;&nbsp;+= \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtknokfighterbackground.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtknokfighter<a href="CppMain.htm">main</a>dialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;qtknokfighterplayer.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/<a href="CppTrace.htm">trace</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppRainbow.htm">CppRainbow</a>/<a href="CppRainbow.htm">rainbow</a>.h<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;knokfighterplayer.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;knokighterkey.h \<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;knokfighterkey.h<br/>
#&nbsp;&nbsp; knokfighterplayerstate.h \<br/>
#&nbsp;&nbsp; knokfighterattack.h<br/>
<br/>
<a href="CppQmakeResources.htm">RESOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;GameKnokkfighter.qrc<br/>
<br/>
OTHER_FILES += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppRainbow.htm">CppRainbow</a>/Licence.txt<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>knokfighterattack.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="knokfighterattack.h" border = "1"><tr><td><code>
<a href="CppIfndef.html">#ifndef</a> KNOKFIGHTERATTACK_H<br/>
<a href="CppDefine.html">#define</a> KNOKFIGHTERATTACK_H<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> Knokfighter {<br/>
<br/>
<b><a href="CppEnumClass.html">enum class</a></b> Attack { high_kick, high_punch, low_kick, low_punch };<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> Knokfighter<br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> KNOKFIGHTERATTACK_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>knokfighterattack.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="knokfighterattack.cpp" border = "1"><tr><td><code>
<a href="CppInclude.html">#include</a> "knokfighterattack<a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> Knokfighter {<br/>
<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> Knokfighter<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>knokfighterkey.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="knokfighterkey.h" border = "1"><tr><td><code>
<a href="CppIfndef.html">#ifndef</a> KNOKFIGHTERKEY_H<br/>
<a href="CppDefine.html">#define</a> KNOKFIGHTERKEY_H<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> Knokfighter {<br/>
<br/>
<b><a href="CppEnumClass.html">enum class</a></b> Key { up, right, left, high_kick, high_punch, low_kick, low_punch };<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> Knokfighter<br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> KNOKFIGHTERKEY_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>knokfighterkey.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="knokfighterkey.cpp" border = "1"><tr><td><code>
<a href="CppInclude.html">#include</a> "knokfighterkey<a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> Knokfighter {<br/>
<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> Knokfighter<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>knokfighterplayer.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="knokfighterplayer.h" border = "1"><tr><td><code>
<a href="CppIfndef.html">#ifndef</a> KNOKFIGHTERPLAYER_H<br/>
<a href="CppDefine.html">#define</a> KNOKFIGHTERPLAYER_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppIosfwdH.html">iosfwd</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/checked_delete<a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppScoped_ptr.html">scoped_ptr</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> Knokfighter {<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> Player<a href="CppState.html">State</a>;<br/>
<b><a href="CppStruct.html">struct</a></b> Key;<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> Player<br/>
{<br/>
&nbsp;&nbsp;Player();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to a key press<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> PressKey(<b><a href="CppConst.html">const</a></b> Key&amp; key);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to a <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a> <a href="CppTime.htm">time</a>r tick<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Tick();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppState.html">State</a> machinery, used by the <a href="CppState.html">State</a>s themselves<br/>
&nbsp;&nbsp;Player<a href="CppState.html">State</a> * GetIdle<a href="CppState.html">State</a>();<br/>
&nbsp;&nbsp;Player<a href="CppState.html">State</a> * GetWalk<a href="CppState.html">State</a>();<br/>
&nbsp;&nbsp;Player<a href="CppState.html">State</a> * GetAttack<a href="CppState.html">State</a>();<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> Player<a href="CppState.html">State</a> * Get<a href="CppState.html">State</a>() <b><a href="CppConst.html">const</a></b>;<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Set<a href="CppState.html">State</a>(Player<a href="CppState.html">State</a> * <b><a href="CppConst.html">const</a></b> state);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.html">virtual</a></b> ~Player() {}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Do not forget the <b><a href="CppTemplate.html">template</a></b> brackets, as stated in<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppHerbSutter.html">Herb Sutter</a>. <a href="CppException.html">Exception</a>al <a href="Cpp.htm">C++</a> style. 2005. ISBN: 0-201-76042-8. Item 8: '<a href="CppFriend.html">Befriending</a> <a href="CppTemplate.html">templates</a>'.<br/>
&nbsp;&nbsp;<b><a href="CppFriend.html">friend</a></b> <b><a href="CppVoid.htm">void</a></b> <a href="CppChecked_delete.html">boost::checked_delete</a>&lt;&gt;(Player* x);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Player is attacking<br/>
&nbsp;&nbsp;<a href="CppScoped_ptr.html">boost::scoped_ptr</a>&lt;Player<a href="CppState.html">State</a>&gt; m_attack_state;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Player is idle<br/>
&nbsp;&nbsp;<a href="CppScoped_ptr.html">boost::scoped_ptr</a>&lt;Player<a href="CppState.html">State</a>&gt; m_idle_state;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Player is walking<br/>
&nbsp;&nbsp;<a href="CppScoped_ptr.html">boost::scoped_ptr</a>&lt;Player<a href="CppState.html">State</a>&gt; m_walk_state;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The current state<br/>
&nbsp;&nbsp;Player<a href="CppState.html">State</a> * m_state;<br/>
};<br/>
<br/>
<a href="CppOstream.html">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.html">operator&lt;&lt;</a></b>(<a href="CppOstream.html">std::ostream</a>&amp; os, <b><a href="CppConst.html">const</a></b> Player&amp; gumballMachine);<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> Knokfighter<br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> KNOKFIGHTERPLAYER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>knokfighterplayer.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="knokfighterplayer.cpp" border = "1"><tr><td><code>
<a href="CppInclude.html">#include</a> &lt;<a href="CppIostreamH.html">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> "knokfighterplayer<a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "knokfighterplayerstate<a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> Knokfighter {<br/>
<br/>
Player::Player()<br/>
 :&nbsp;&nbsp;m_attack_state(<b><a href="CppNew.htm">new</a></b> Player<a href="CppState.html">State</a>Attack(<b><a href="CppThis.htm">this</a></b>)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_idle_state(<b><a href="CppNew.htm">new</a></b> Player<a href="CppState.html">State</a>Idle(<b><a href="CppThis.htm">this</a></b>)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_walk_state(<b><a href="CppNew.htm">new</a></b> Player<a href="CppState.html">State</a>Walk(<b><a href="CppThis.htm">this</a></b>))<br/>
{<br/>
&nbsp;&nbsp;Set<a href="CppState.html">State</a>(GetIdle<a href="CppState.html">State</a>());<br/>
}<br/>
<br/>
Player<a href="CppState.html">State</a> * Player::GetAttack<a href="CppState.html">State</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> m_attack_state.get();<br/>
}<br/>
<br/>
Player<a href="CppState.html">State</a> * Player::GetIdle<a href="CppState.html">State</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> m_idle_state.get();<br/>
}<br/>
<br/>
Player<a href="CppState.html">State</a> * Player::GetWalk<a href="CppState.html">State</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> m_walk_state.get();<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> Player<a href="CppState.html">State</a> * Player::Get<a href="CppState.html">State</a>() <b><a href="CppConst.html">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> m_state;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> Player::PressKey(<b><a href="CppConst.html">const</a></b> Key&amp; key)<br/>
{<br/>
&nbsp;&nbsp;m_state-&gt;PressKey(key);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> Player::Tick()<br/>
{<br/>
&nbsp;&nbsp;m_state-&gt;Tick();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> Player::Set<a href="CppState.html">State</a>(Player<a href="CppState.html">State</a> * <b><a href="CppConst.html">const</a></b> state)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(state);<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>No need to <b><a href="CppDelete.html">delete</a></b> the old m_state, <b><a href="CppThis.htm">this</a></b> is done<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>by the <a href="CppScoped_ptr.html">boost::scoped_ptr</a>'s<br/>
&nbsp;&nbsp;m_state <a href="CppOperatorAssign.htm">=</a> state;<br/>
}<br/>
<br/>
<a href="CppOstream.html">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.html">operator&lt;&lt;</a></b>(<a href="CppOstream.html">std::ostream</a>&amp; os, <b><a href="CppConst.html">const</a></b> Player&amp; player)<br/>
{<br/>
&nbsp;&nbsp;os <a href="CppOperatorStreamOut.html">&lt;&lt;</a> player.Get<a href="CppState.html">State</a>()-&gt;ToStr() <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> os;<br/>
}<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> Knokfighter<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>knokfighterplayerstate.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="knokfighterplayerstate.h" border = "1"><tr><td><code>
<a href="CppIfndef.html">#ifndef</a> KNOKFIGHTERPLAYERSTATE_H<br/>
<a href="CppDefine.html">#define</a> KNOKFIGHTERPLAYERSTATE_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> Knokfighter {<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> Attack;<br/>
<b><a href="CppStruct.html">struct</a></b> Key;<br/>
<b><a href="CppStruct.html">struct</a></b> Player;<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> Player<a href="CppState.html">State</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppEnumClass.html">enum class</a></b> Direction { left, right };<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppState.html">State</a> needs access to the Player it is a state of<br/>
&nbsp;&nbsp;Player<a href="CppState.html">State</a>(Player * <b><a href="CppConst.html">const</a></b> player);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.html">virtual</a></b> ~Player<a href="CppState.html">State</a>() {}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to a key press<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.html">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> PressKey(<b><a href="CppConst.html">const</a></b> Key&amp; key) <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to the <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a> <a href="CppTime.htm">time</a>r ticking<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.html">virtual</a></b> <b><a href="CppVoid.htm">void</a></b> Tick() <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.html">Convert</a> the state to (part of) a filename, <b><a href="CppFor.htm">for</a></b> example 'HighKickLeft'<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.html">virtual</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> ToStr() <b><a href="CppConst.html">const</a></b> <a href="CppOperatorAssign.htm">=</a> 0;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppProtected.html">protected</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The Direction the player has<br/>
&nbsp;&nbsp;Direction m_direction;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The Player the Player<a href="CppState.html">State</a> is a <a href="CppState.html">State</a> of<br/>
&nbsp;&nbsp;Player * <b><a href="CppConst.html">const</a></b> m_player;<br/>
};<br/>
<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> Player<a href="CppState.html">State</a>Attack : <b><a href="CppPublic.html">public</a></b> Player<a href="CppState.html">State</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppState.html">State</a> needs access to the Player it is a state of<br/>
&nbsp;&nbsp;Player<a href="CppState.html">State</a>Attack(Player * <b><a href="CppConst.html">const</a></b> player);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to a key press<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> PressKey(<b><a href="CppConst.html">const</a></b> Key&amp; key);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the type of Attack and how m<a href="CppAny.htm">any</a> ticks it will last<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> StartAttack(<b><a href="CppConst.html">const</a></b> Attack&amp; attack, <b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> n_ticks);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to the <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a> <a href="CppTime.htm">time</a>r ticking<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Tick();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.html">Convert</a> the state to (part of) a filename, <b><a href="CppFor.htm">for</a></b> example 'HighKickLeft'<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> ToStr() <b><a href="CppConst.html">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The Attack being done<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Attack m_attack;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The number of ticks <b><a href="CppThis.htm">this</a></b> attack will last before Player goes back to Player<a href="CppState.html">State</a>Idle<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_ticks_left;<br/>
};<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> Player<a href="CppState.html">State</a>Idle : <b><a href="CppPublic.html">public</a></b> Player<a href="CppState.html">State</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppState.html">State</a> needs access to the Player it is a state of<br/>
&nbsp;&nbsp;Player<a href="CppState.html">State</a>Idle(Player * <b><a href="CppConst.html">const</a></b> player);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to a key press<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> PressKey(<b><a href="CppConst.html">const</a></b> Key&amp; key);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to the <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a> <a href="CppTime.htm">time</a>r ticking<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Tick();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.html">Convert</a> the state to (part of) a filename, <b><a href="CppFor.htm">for</a></b> example 'HighKickLeft'<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> ToStr() <b><a href="CppConst.html">const</a></b>;<br/>
};<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> Player<a href="CppState.html">State</a>Walk : <b><a href="CppPublic.html">public</a></b> Player<a href="CppState.html">State</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppState.html">State</a> needs access to the Player it is a state of<br/>
&nbsp;&nbsp;Player<a href="CppState.html">State</a>Walk(Player * <b><a href="CppConst.html">const</a></b> player);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to a key press<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> PressKey(<b><a href="CppConst.html">const</a></b> Key&amp; key);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to the <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a> <a href="CppTime.htm">time</a>r ticking<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> Tick();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.html">Convert</a> the state to (part of) a filename, <b><a href="CppFor.htm">for</a></b> example 'HighKickLeft'<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> ToStr() <b><a href="CppConst.html">const</a></b>;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> Knokfighter<br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> KNOKFIGHTERPLAYERSTATE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>knokfighterplayerstate.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="knokfighterplayerstate.cpp" border = "1"><tr><td><code>
<a href="CppInclude.html">#include</a> "knokfighterplayerstate<a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> Knokfighter {<br/>
<br/>
<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> Knokfighter<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>knokighterkey.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="knokighterkey.h" border = "1"><tr><td><code>
<a href="CppIfndef.html">#ifndef</a> KNOKIGHTERKEY_H<br/>
<a href="CppDefine.html">#define</a> KNOKIGHTERKEY_H<br/>
<br/>
<b><a href="CppClass.html">class</a></b> KnokighterKey<br/>
{<br/>
<b><a href="CppPublic.html">public</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;KnokighterKey();<br/>
};<br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> KNOKIGHTERKEY_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>knokighterkey.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="knokighterkey.cpp" border = "1"><tr><td><code>
<a href="CppInclude.html">#include</a> "knokighterkey<a href="CppHeaderFile.htm">.h</a>"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>qtknokfighterbackground.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="qtknokfighterbackground.h" border = "1"><tr><td><code>
<a href="CppIfndef.html">#ifndef</a> QTKNOKFIGHTERBACKGROUND_H<br/>
<a href="CppDefine.html">#define</a> QTKNOKFIGHTERBACKGROUND_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQGraphicsPixmapItem.html">QGraphicsPixmapItem</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppQt.htm">Qt</a>KnokfighterBackground : <b><a href="CppPublic.html">public</a></b> <a href="CppQGraphicsPixmapItem.html">QGraphicsPixmapItem</a><br/>
{<br/>
<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>KnokfighterBackground(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> width, <b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> height,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.html">QGraphicsItem</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> advance(<b><a href="CppInt.htm">int</a></b>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> z;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DrawPixmap();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> QTKNOKFIGHTERBACKGROUND_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>qtknokfighterbackground.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="qtknokfighterbackground.cpp" border = "1"><tr><td><code>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQColor.html">QColor</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQPixmap.html">QPixmap</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQGraphicsScene.html">QGraphicsScene</a>&gt;<br/>
<a href="CppInclude.html">#include</a> "qtknokfighterbackground<a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppRainbow.html">rainbow</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>KnokfighterBackground::<a href="CppQt.htm">Qt</a>KnokfighterBackground(<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> width, <b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> height,<br/>
&nbsp;&nbsp;<a href="CppQGraphicsItem.html">QGraphicsItem</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQGraphicsPixmapItem.html">QGraphicsPixmapItem</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;z(0)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setPixmap(<a href="CppQPixmap.html">QPixmap</a>(width,height));<br/>
&nbsp;&nbsp;DrawPixmap();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>KnokfighterBackground::advance(<b><a href="CppInt.htm">int</a></b>)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppOperatorIncrement.htm">++</a>z;<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>DrawPixmap();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>KnokfighterBackground::DrawPixmap()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQImage.html">QImage</a> i <a href="CppOperatorAssign.htm">=</a> <b><a href="CppThis.htm">this</a></b>-&gt;pixmap().toImage();<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> width <a href="CppOperatorAssign.htm">=</a> i.width();<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> height <a href="CppOperatorAssign.htm">=</a> i<a href="CppHeaderFile.htm">.h</a>eight();<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> y=0;y<a href="CppOperatorNotEqual.htm">!=</a>height;<a href="CppOperatorIncrement.htm">++</a>y)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> x=0;x<a href="CppOperatorNotEqual.htm">!=</a>width;<a href="CppOperatorIncrement.htm">++</a>x)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDouble.html">double</a></b> z <a href="CppOperatorAssign.htm">=</a> <b><a href="CppStatic_cast.html">static_cast</a></b>&lt;<b><a href="CppDouble.html">double</a></b>&gt;(1 <a href="CppOperatorPlus.htm">+</a> ((x+y) <a href="CppOperatorModulus.htm">%</a> 254)) <a href="CppOperatorDivide.htm">/</a> 255.0;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z <a href="CppOperatorAssign.htm">=</a> (z &lt; 0.0 ? 0.0 : (z &gt; 1.0 ? 1.0 : z));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppDouble.html">double</a></b> r,g,b;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppRainbow.html">Rainbow</a>::GetRgb(z,r,g,b);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i.setPixel( <a href="CppQPoint.html">QPoint</a>(x,y),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQColor.html">QColor</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic_cast.html">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(r * 255.0),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic_cast.html">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(g * 255.0),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic_cast.html">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(b * 255.0)).rgb()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setPixmap(<b><a href="CppThis.htm">this</a></b>-&gt;pixmap().fromImage(i));<br/>
<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>qtknokfightermaindialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="qtknokfightermaindialog.h" border = "1"><tr><td><code>
<a href="CppIfndef.html">#ifndef</a> QTKNOKFIGHTERMAINDIALOG_H<br/>
<a href="CppDefine.html">#define</a> QTKNOKFIGHTERMAINDIALOG_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppShared_ptr.html">shared_ptr</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQGraphicsView.html">QGraphicsView</a>&gt;<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppQGraphicsScene.html">QGraphicsScene</a>;<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppQKeyEvent.html">QKeyEvent</a>;<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppQt.htm">Qt</a>KnokfighterBackground;<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppQt.htm">Qt</a>KnokfighterPlayer;<br/>
<br/>
<b><a href="CppClass.html">class</a></b> <a href="CppQt.htm">Qt</a>KnokfighterMainDialog : <b><a href="CppPublic.html">public</a></b> <a href="CppQGraphicsView.html">QGraphicsView</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppQ_OBJECT.html">Q_OBJECT</a><br/>
&nbsp;&nbsp;<b><a href="CppPublic.html">public</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppExplicit.html">explicit</a></b> <a href="CppQt.htm">Qt</a>KnokfighterMainDialog(<a href="CppQWidget.html">QWidget</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppQtSignals.html">signals</a></b>:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
&nbsp;&nbsp;<b><a href="CppPublic.html">public</a></b> <b><a href="CppSlots.html">slots</a></b>:<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b> <b><a href="CppSlots.html">slots</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> do_main_<a href="CppTime.htm">time</a>r();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> keyPressEvent(<a href="CppQKeyEvent.html">QKeyEvent</a> *event);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>KnokfighterBackground * <b><a href="CppConst.html">const</a></b> m_background;<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppBoostShared_ptr.html">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>KnokfighterPlayer&gt; &gt; m_players;<br/>
&nbsp;&nbsp;<a href="CppQGraphicsScene.html">QGraphicsScene</a> * <b><a href="CppConst.html">const</a></b> m_scene;<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> QTKNOKFIGHTERMAINDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>qtknokfightermaindialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="qtknokfightermaindialog.cpp" border = "1"><tr><td><code>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQGraphicsScene.html">QGraphicsScene</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQKeyEvent.html">QKeyEvent</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQTimer.html">QTimer</a>&gt;<br/>
<a href="CppInclude.html">#include</a> "qtknokfighterbackground<a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "qtknokfightermaindialog<a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "qtknokfighterplayer<a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppTrace.html">trace</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>KnokfighterMainDialog::<a href="CppQt.htm">Qt</a>KnokfighterMainDialog(<a href="CppQWidget.html">QWidget</a> *parent) :<br/>
&nbsp;&nbsp;<a href="CppQGraphicsView.html">QGraphicsView</a>(parent),<br/>
&nbsp;&nbsp;m_background(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>KnokfighterBackground(800,600)),<br/>
&nbsp;&nbsp;m_players(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.html">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>KnokfighterPlayer&gt;(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>KnokfighterPlayer(<a href="CppQt.htm">Qt</a>KnokfighterPlayer::Name::richel)),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBoostShared_ptr.html">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>KnokfighterPlayer&gt;(<b><a href="CppNew.htm">new</a></b> <a href="CppQt.htm">Qt</a>KnokfighterPlayer(<a href="CppQt.htm">Qt</a>KnokfighterPlayer::Name::joost))<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;),<br/>
&nbsp;&nbsp;m_scene(<b><a href="CppNew.htm">new</a></b> <a href="CppQGraphicsScene.html">QGraphicsScene</a>(<b><a href="CppThis.htm">this</a></b>))<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setScene(m_scene);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> the background<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_scene-&gt;addItem(m_background);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setSceneRect(0,0,600,400);<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppAdd.htm">Add</a> our heroes<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_players[0]-&gt;setPos(400.0,200.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_players[1]-&gt;setPos(500.0,300.0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_scene-&gt;addItem(m_players[0].get());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_scene-&gt;addItem(m_players[1].get());<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Set the <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a> <a href="CppTime.htm">time</a>r<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQTimer.html">QTimer</a> * <b><a href="CppConst.html">const</a></b> <a href="CppTime.htm">time</a>r <a href="CppOperatorAssign.htm">=</a> <b><a href="CppNew.htm">new</a></b> <a href="CppQTimer.html">QTimer</a>(<b><a href="CppThis.htm">this</a></b>);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQObject.html">QObject</a>::connect(<a href="CppTime.htm">time</a>r,<a href="CppSignalMacro.html">SIGNAL</a>(<a href="CppTime.htm">time</a>out()),m_scene,<a href="CppSLOT.htm">SLOT</a>(advance()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQObject.html">QObject</a>::connect(<a href="CppTime.htm">time</a>r,<a href="CppSignalMacro.html">SIGNAL</a>(<a href="CppTime.htm">time</a>out()),<b><a href="CppThis.htm">this</a></b>,<a href="CppSLOT.htm">SLOT</a>(do_main_<a href="CppTime.htm">time</a>r()));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTime.htm">time</a>r-&gt;setInterval(20);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppTime.htm">time</a>r-&gt;start();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>KnokfighterMainDialog::do_main_<a href="CppTime.htm">time</a>r()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>v is the background moving speed. Setting <b><a href="CppThis.htm">this</a></b> to e.g. 0.1<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>causes the background to keep the player centered more gradually<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> v <a href="CppOperatorAssign.htm">=</a> 0.1;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.html">double</a></b> delta_x <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;<b><a href="CppDouble.html">double</a></b> delta_y <a href="CppOperatorAssign.htm">=</a> 0.0;<br/>
&nbsp;&nbsp;<a href="CppFor_each.html">std::for_each</a>(m_players.begin(),m_players.end(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;[&amp;delta_x,&amp;delta_y,v,<b><a href="CppThis.htm">this</a></b>](<b><a href="CppConst.html">const</a></b> <a href="CppBoostShared_ptr.html">boost::shared_ptr</a>&lt;<a href="CppQt.htm">Qt</a>KnokfighterPlayer&gt;&amp; player)<br/>
&nbsp;&nbsp;&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delta_x <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> v * (player-&gt;pos().x() <a href="CppOperatorPlus.htm">+</a> (player-&gt;pixmap().width() <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;sceneRect().center().x());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delta_y <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> v * (player-&gt;pos().y() <a href="CppOperatorPlus.htm">+</a> (player-&gt;pixmap()<a href="CppHeaderFile.htm">.h</a>eight() <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;sceneRect().center().y());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> delta_x <a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;v * (m_player-&gt;pos().x() <a href="CppOperatorPlus.htm">+</a> (m_player-&gt;pixmap().width() <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;sceneRect().center().x());<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppConst.html">const</a></b> <b><a href="CppDouble.html">double</a></b> delta_y <a href="CppOperatorAssign.htm">=</a>&nbsp;&nbsp;v * (m_player-&gt;pos().y() <a href="CppOperatorPlus.htm">+</a> (m_player-&gt;pixmap()<a href="CppHeaderFile.htm">.h</a>eight() <a href="CppOperatorDivide.htm">/</a> 2) <a href="CppOperatorMinus.htm">-</a> <b><a href="CppThis.htm">this</a></b>-&gt;sceneRect().center().y());<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setSceneRect(<b><a href="CppThis.htm">this</a></b>-&gt;sceneRect().translated(delta_x,delta_y));<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>Do not let the sceneRect go beyond the edges of the scene<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sceneRect().x() &lt; 0.0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setSceneRect(<b><a href="CppThis.htm">this</a></b>-&gt;sceneRect().translated( <a href="CppOperatorMinus.htm">-</a>sceneRect().x() , 0.0));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sceneRect().y() &lt; 0.0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setSceneRect(<b><a href="CppThis.htm">this</a></b>-&gt;sceneRect().translated(0.0, <a href="CppOperatorMinus.htm">-</a>sceneRect().y()));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sceneRect().right() &gt; m_background-&gt;pixmap().width())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setSceneRect(<b><a href="CppThis.htm">this</a></b>-&gt;sceneRect().translated(-sceneRect().right() <a href="CppOperatorPlus.htm">+</a> m_background-&gt;pixmap().width(), 0.0));<br/>
<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sceneRect().bottom() &gt; m_background-&gt;pixmap()<a href="CppHeaderFile.htm">.h</a>eight())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setSceneRect(<b><a href="CppThis.htm">this</a></b>-&gt;sceneRect().translated(0.0,-sceneRect().bottom() <a href="CppOperatorPlus.htm">+</a> m_background-&gt;pixmap()<a href="CppHeaderFile.htm">.h</a>eight()));<br/>
<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>KnokfighterMainDialog::keyPressEvent(<a href="CppQKeyEvent.html">QKeyEvent</a> *event)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.html">switch</a></b>(event-&gt;key())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Up&nbsp;&nbsp; : m_players[0]-&gt;setPos(m_players[0]-&gt;pos().x() <a href="CppOperatorPlus.htm">+</a>&nbsp;&nbsp;0, m_players[0]-&gt;pos().y() <a href="CppOperatorMinus.htm">-</a> 10); <b><a href="CppBreak.html">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Right: m_players[0]-&gt;setPos(m_players[0]-&gt;pos().x() <a href="CppOperatorPlus.htm">+</a> 10, m_players[0]-&gt;pos().y() <a href="CppOperatorPlus.htm">+</a>&nbsp;&nbsp;0); <b><a href="CppBreak.html">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Down : m_players[0]-&gt;setPos(m_players[0]-&gt;pos().x() <a href="CppOperatorPlus.htm">+</a>&nbsp;&nbsp;0, m_players[0]-&gt;pos().y() <a href="CppOperatorPlus.htm">+</a> 10); <b><a href="CppBreak.html">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_Left : m_players[0]-&gt;setPos(m_players[0]-&gt;pos().x() <a href="CppOperatorMinus.htm">-</a> 10, m_players[0]-&gt;pos().y() <a href="CppOperatorPlus.htm">+</a>&nbsp;&nbsp;0); <b><a href="CppBreak.html">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_W&nbsp;&nbsp;&nbsp;&nbsp;: m_players[1]-&gt;setPos(m_players[1]-&gt;pos().x() <a href="CppOperatorPlus.htm">+</a>&nbsp;&nbsp;0, m_players[1]-&gt;pos().y() <a href="CppOperatorMinus.htm">-</a> 10); <b><a href="CppBreak.html">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_D&nbsp;&nbsp;&nbsp;&nbsp;: m_players[1]-&gt;setPos(m_players[1]-&gt;pos().x() <a href="CppOperatorPlus.htm">+</a> 10, m_players[1]-&gt;pos().y() <a href="CppOperatorPlus.htm">+</a>&nbsp;&nbsp;0); <b><a href="CppBreak.html">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_S&nbsp;&nbsp;&nbsp;&nbsp;: m_players[1]-&gt;setPos(m_players[1]-&gt;pos().x() <a href="CppOperatorPlus.htm">+</a>&nbsp;&nbsp;0, m_players[1]-&gt;pos().y() <a href="CppOperatorPlus.htm">+</a> 10); <b><a href="CppBreak.html">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> <a href="CppQt.htm">Qt</a>::Key_A&nbsp;&nbsp;&nbsp;&nbsp;: m_players[1]-&gt;setPos(m_players[1]-&gt;pos().x() <a href="CppOperatorMinus.htm">-</a> 10, m_players[1]-&gt;pos().y() <a href="CppOperatorPlus.htm">+</a>&nbsp;&nbsp;0); <b><a href="CppBreak.html">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>qtknokfighterplayer.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="qtknokfighterplayer.h" border = "1"><tr><td><code>
<a href="CppIfndef.html">#ifndef</a> QTKNOKFIGHTERPLAYER_H<br/>
<a href="CppDefine.html">#define</a> QTKNOKFIGHTERPLAYER_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQGraphicsPixmapItem.html">QGraphicsPixmapItem</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppQt.htm">Qt</a>KnokfighterPlayer : <b><a href="CppPublic.html">public</a></b> <a href="CppQGraphicsPixmapItem.html">QGraphicsPixmapItem</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppEnumClass.html">enum class</a></b> Name { richel, joost };<br/>
<br/>
&nbsp;&nbsp;<a href="CppQt.htm">Qt</a>KnokfighterPlayer(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> Name name,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQGraphicsItem.html">QGraphicsItem</a> *parent <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> advance(<b><a href="CppInt.htm">int</a></b>);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The fighter his/her name<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> m_name;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The fighter his/her Z-order<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_z;<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DrawPixmap();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> QTKNOKFIGHTERPLAYER_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>qtknokfighterplayer.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="qtknokfighterplayer.cpp" border = "1"><tr><td><code>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCassertH.html">cassert</a>&gt;<br/>
<a href="CppInclude.html">#include</a> "qtknokfighterplayer<a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQBitmap.html">QBitmap</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQPixmap.html">QPixmap</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQGraphicsScene.html">QGraphicsScene</a>&gt;<br/>
<a href="CppInclude.html">#include</a> "qtknokfighterbackground<a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>KnokfighterPlayer::<a href="CppQt.htm">Qt</a>KnokfighterPlayer(<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> Name name,<br/>
&nbsp;&nbsp;<a href="CppQGraphicsItem.html">QGraphicsItem</a> *parent)<br/>
&nbsp;&nbsp;: <a href="CppQGraphicsPixmapItem.html">QGraphicsPixmapItem</a>(parent),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_name(name <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> Name::richel ? "Richel" : "Joost"),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_z(0)<br/>
{<br/>
&nbsp;&nbsp;DrawPixmap();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>KnokfighterPlayer::advance(<b><a href="CppInt.htm">int</a></b> i)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppComment.htm">//</a><b><a href="CppThis.htm">this</a></b>-&gt;setPos(<b><a href="CppThis.htm">this</a></b>-&gt;x() <a href="CppOperatorPlus.htm">+</a> 10,<b><a href="CppThis.htm">this</a></b>-&gt;y());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorPlus.htm">+</a>+m_z;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;DrawPixmap();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>KnokfighterPlayer::DrawPixmap()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppString.html">std::string</a> s;<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.html">switch</a></b> ((m_z <a href="CppOperatorDivide.htm">/</a> 50) <a href="CppOperatorModulus.htm">%</a> 2)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: s <a href="CppOperatorAssign.htm">=</a> ":/images/" <a href="CppOperatorPlus.htm">+</a> m_name <a href="CppOperatorPlus.htm">+</a> "LooptRechts1.png"; <b><a href="CppBreak.html">break</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1: s <a href="CppOperatorAssign.htm">=</a> ":/images/" <a href="CppOperatorPlus.htm">+</a> m_name <a href="CppOperatorPlus.htm">+</a> "LooptRechts2.png"; <b><a href="CppBreak.html">break</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppQPixmap.html">QPixmap</a> pixmap(s.c_str());<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppQBitmap.html">QBitmap</a> mask <a href="CppOperatorAssign.htm">=</a> pixmap.createMaskFromColor(<a href="CppQColor.html">QColor</a>(0,0,255));<br/>
&nbsp;&nbsp;&nbsp;&nbsp;pixmap.setMask(mask);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;setPixmap(pixmap);<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>qtmain.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="qtmain.cpp" border = "1"><tr><td><code>
<a href="CppInclude.html">#include</a> &lt;<a href="CppQApplication.html">QApplication</a>&gt;<br/>
<a href="CppInclude.html">#include</a> "qtknokfightermaindialog<a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppTrace.html">trace</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> *<a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<a href="CppQApplication.html">QApplication</a> a(<a href="CppArgc.htm">argc</a>, <a href="CppArgc.htm">argv</a>);<br/>
&nbsp;&nbsp;START_<a href="CppTRACE.html">TRACE</a>();<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::<a href="CppQt.htm">Qt</a>KnokfighterMainDialog w;<br/>
&nbsp;&nbsp;w.show();<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> a.exec();<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary=".sh" border = "1"><tr><td><code>
for x in *.bmp; do convert "$x" "`basename "$x" .bmp`.png"; done<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary=".sh" border = "1"><tr><td><code>
for x in *.wav; do avconv -i "$x" "`basename "$x" .wav`.ogg"; done<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>zip.sh</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="zip.sh" border = "1"><tr><td><code>
#!/bin/sh<br/>
#zip packs all the files to port into a single .zip file,<br/>
#minicking the same folder structure<br/>
#Folder structure<br/>
# *<br/>
#&nbsp;&nbsp;* Classes<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;* CppAbout<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;* CppConnectThree<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;* CppConnectThreeWidget<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;* CppQtAboutDialog<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;* CppQtConnectThreeWidget<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;* CppTrace<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;* CppWtAboutDialog<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;* CppWtAutoConfig<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;* CppWtConnectThreeWidget<br/>
#&nbsp;&nbsp;* Games<br/>
#&nbsp;&nbsp;&nbsp;&nbsp;* GameConnectThree<br/>
echo "Mimicking file structure"<br/>
mkdir temp_zip<br/>
mkdir temp_zip/Classes<br/>
mkdir temp_zip/Classes/CppAbout<br/>
mkdir temp_zip/Classes/CppConnectThree<br/>
mkdir temp_zip/Classes/CppConnectThreeWidget<br/>
mkdir temp_zip/Classes/CppQtAboutDialog<br/>
mkdir temp_zip/Classes/CppQtConnectThreeWidget<br/>
mkdir temp_zip/Classes/CppTrace<br/>
mkdir temp_zip/Classes/CppWtAboutDialog<br/>
mkdir temp_zip/Classes/CppWtAutoConfig<br/>
mkdir temp_zip/Classes/CppWtConnectThreeWidget<br/>
mkdir temp_zip/Games<br/>
mkdir temp_zip/Games/GameConnectThree<br/>
<br/>
echo "Copying files"<br/>
cp ../../Classes/CppAbout/*.* temp_zip/Classes/CppAbout<br/>
cp ../../Classes/CppConnectThree/*.* temp_zip/Classes/CppConnectThree<br/>
cp ../../Classes/CppConnectThreeWidget/*.* temp_zip/Classes/CppConnectThreeWidget<br/>
cp ../../Classes/CppQtAboutDialog/*.* temp_zip/Classes/CppQtAboutDialog<br/>
cp ../../Classes/CppQtConnectThreeWidget/*.* temp_zip/Classes/CppQtConnectThreeWidget<br/>
cp ../../Classes/CppTrace/*.* temp_zip/Classes/CppTrace<br/>
cp ../../Classes/CppWtAboutDialog/*.* temp_zip/Classes/CppWtAboutDialog<br/>
cp ../../Classes/CppWtAutoConfig/*.* temp_zip/Classes/CppWtAutoConfig<br/>
cp ../../Classes/CppWtConnectThreeWidget/*.* temp_zip/Classes/CppWtConnectThreeWidget<br/>
cp ../../Games/GameConnectThree/*.* temp_zip/Games/GameConnectThree<br/>
<br/>
echo "Compressing files"<br/>
cd temp_zip<br/>
#Zip the folders recursively in the zip file<br/>
zip -r GameConnectThreeSource_6_2 Classes<br/>
zip -r GameConnectThreeSource_6_2 Games<br/>
cd ..<br/>
cp temp_zip/GameConnectThreeSource_6_2.zip GameConnectThreeSource_6_2.zip<br/>
<br/>
echo "Cleaning up"<br/>
<br/>
echo "Cleaning up Classes"<br/>
rm temp_zip/Classes/CppAbout/*.*<br/>
rm temp_zip/Classes/CppConnectThree/*.*<br/>
rm temp_zip/Classes/CppConnectThreeWidget/*.*<br/>
rm temp_zip/Classes/CppQtAboutDialog/*.*<br/>
rm temp_zip/Classes/CppQtConnectThreeWidget/*.*<br/>
rm temp_zip/Classes/CppTrace/*.*<br/>
rm temp_zip/Classes/CppWtAboutDialog/*.*<br/>
rm temp_zip/Classes/CppWtAutoConfig/*.*<br/>
rm temp_zip/Classes/CppWtConnectThreeWidget/*.*<br/>
rmdir temp_zip/Classes/CppAbout<br/>
rmdir temp_zip/Classes/CppConnectThree<br/>
rmdir temp_zip/Classes/CppConnectThreeWidget<br/>
rmdir temp_zip/Classes/CppQtAboutDialog<br/>
rmdir temp_zip/Classes/CppQtConnectThreeWidget<br/>
rmdir temp_zip/Classes/CppTrace<br/>
rmdir temp_zip/Classes/CppWtAboutDialog<br/>
rmdir temp_zip/Classes/CppWtAutoConfig<br/>
rmdir temp_zip/Classes/CppWtConnectThreeWidget<br/>
rmdir temp_zip/Classes<br/>
<br/>
echo "Cleaning up Games"<br/>
rm temp_zip/Games/GameConnectThree/*.*<br/>
rmdir temp_zip/Games/GameConnectThree<br/>
rmdir temp_zip/Games<br/>
<br/>
rm temp_zip/*.*<br/>
rmdir temp_zip<br/>
echo "Done"<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
