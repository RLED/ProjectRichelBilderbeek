<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>WtMysteryMachineWidget</title>
  <meta name="description" content="C++ WtMysteryMachineWidget"/>
  <meta name="keywords" content="C++ WtMysteryMachineWidget code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppWtMysteryMachineWidget.htm">WtMysteryMachineWidget</a></h1>
<p>&nbsp;</p>
<!-- This text is generated by CodeToHtml -->
<p><img src="PicWt.png" alt="Wt"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppWtMysteryMachineWidget.htm">WtMysteryMachineWidget</a> is a <a href="CppWt.htm">Wt</a> 
<a href="CppWidget.htm">widget</a> <a href="CppClass.htm">class</a> to display an <a href="CppMysteryMachineWidget.htm">MysteryMachineWidget</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>wtmysterymachinewidget.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="wtmysterymachinewidget.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>, <a href="CppWt.htm">Wt</a> <a href="CppWidget.html">widget</a> <b><a href="CppFor.htm">for</a></b> displaying the <a href="CppMysteryMachine.html">MysteryMachine</a> <b><a href="CppClass.html">class</a></b><br/>
Copyright (C) 2011 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppWtMysteryMachineWidget.html">CppWtMysteryMachineWidget</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.html">#ifndef</a> WTMYSTERYMACHINEWIDGET_H<br/>
<a href="CppDefine.html">#define</a> WTMYSTERYMACHINEWIDGET_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppIostreamH.html">iostream</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppVectorH.html">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppSignals2.html">signals2</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPaintDevice.html">WPaintDevice</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPaintedWidget.html">WPaintedWidget</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> <a href="CppWt.htm">Wt</a> { <b><a href="CppStruct.html">struct</a></b> <a href="CppWMouseEvent.html">WMouseEvent</a>Event; }<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppMysteryMachineWidget.html">MysteryMachineWidget</a>;<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppWtToggleButton.html">WtToggleButton</a><a href="CppWidget.html">Widget</a>;<br/>
<br/>
<a href="CppComment.htm">///</a><a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a> displays a <a href="CppMysteryMachine.html">MysteryMachine</a><br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a> : <b><a href="CppPublic.html">public</a></b> <a href="CppWPaintedWidget.html">Wt::WPaintedWidget</a><br/>
{<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/A <a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a> is created by its width and height<br/>
&nbsp;&nbsp;<b><a href="CppExplicit.html">explicit</a></b> <a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>(<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> width, <b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> height);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a read-only <a href="CppPointer.html">pointer</a> to the <a href="CppMysteryMachine.html">MysteryMachine</a><br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppMysteryMachineWidget.html">MysteryMachineWidget</a> * Get<a href="CppWidget.html">Widget</a>() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_<a href="CppWidget.html">widget</a>.get(); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain a read-and-write <a href="CppPointer.html">pointer</a> to the <a href="CppMysteryMachine.html">MysteryMachine</a><br/>
&nbsp;&nbsp;<a href="CppMysteryMachineWidget.html">MysteryMachineWidget</a> * Get<a href="CppWidget.html">Widget</a>() { <b><a href="CppReturn.html">return</a></b> m_<a href="CppWidget.html">widget</a>.get(); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppSignal.html">Signal</a> that is <a href="CppEmit.html">emitted</a> when a <a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a> is toggled<br/>
&nbsp;&nbsp;<b><a href="CppMutable.html">mutable</a></b> <a href="CppBoostSignal.html">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_changed;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a> its <a href="CppVersion.html">version</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> Get<a href="CppVersion.html">Version</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain the <a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a> its <a href="CppVersion.html">version</a> history<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; Get<a href="CppVersion.html">Version</a>History();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppProtected.html">protected</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppPaint.html">Paint</a> the <a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> paintEvent(<a href="CppWPaintDevice.html">Wt::WPaintDevice</a> *paintDevice);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The <a href="CppMysteryMachine.html">MysteryMachine</a><br/>
&nbsp;&nbsp;<a href="CppScoped_ptr.html">boost::scoped_ptr</a>&lt;<a href="CppMysteryMachineWidget.html">MysteryMachineWidget</a>&gt; m_<a href="CppWidget.html">widget</a>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Repaint the <a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> DoRepaint();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Respond to mouse click<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnClicked(<b><a href="CppConst.html">const</a></b> <a href="CppWMouseEvent.html">Wt::WMouseEvent</a>&amp; e);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/OnResize is called when the <a href="CppGeometry.html">geometry</a> of the <a href="CppWidget.html">widget</a> is changed<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> OnResize();<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFriend.html">friend</a></b> <a href="CppOstream.html">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.html">operator&lt;&lt;</a></b>(<a href="CppOstream.html">std::ostream</a>&amp; os, <b><a href="CppConst.html">const</a></b> <a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>&amp; <a href="CppWidget.html">widget</a>);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppWt.htm">Wt</a> resize: hide it from sight<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> resize(<b><a href="CppConst.html">const</a></b> <a href="CppWLength.html">Wt::WLength</a>&amp; width, <b><a href="CppConst.html">const</a></b> <a href="CppWLength.html">Wt::WLength</a>&amp; height);<br/>
};<br/>
<br/>
<a href="CppOstream.html">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.html">operator&lt;&lt;</a></b>(<a href="CppOstream.html">std::ostream</a>&amp; os, <b><a href="CppConst.html">const</a></b> <a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>&amp; <a href="CppWidget.html">widget</a>);<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> WTMYSTERYMACHINEWIDGET_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>wtmysterymachinewidget.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="wtmysterymachinewidget.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>, <a href="CppWt.htm">Wt</a> <a href="CppWidget.html">widget</a> <b><a href="CppFor.htm">for</a></b> displaying the <a href="CppMysteryMachine.html">MysteryMachine</a> <b><a href="CppClass.html">class</a></b><br/>
Copyright (C) 2011 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppWtMysteryMachineWidget.html">CppWtMysteryMachineWidget</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "<a href="CppWeffcpp.html">-Weffc++</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppWtMysteryMachineWidget.html">wtmysterymachinewidget</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppIostreamH.html">iostream</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/bind<a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/numeric/con<a href="CppVersion.html">version</a>/cast<a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppWt.htm">Wt</a>/WBrush&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWEvent.html">WEvent</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppWt.htm">Wt</a>/<a href="CppWPainter.html">WPainter</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppWt.htm">Wt</a>/WPen&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> "<a href="CppDial<a href="CppHeaderFile.htm">.h</a>tm">dial</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppDialWidget.html">dialwidget</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppLed<a href="CppHeaderFile.htm">.h</a>tm">led</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppLedWidget.html">ledwidget</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppToggleButton.html">togglebutton</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppToggleButtonWidget.html">togglebuttonwidget</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.html">#include</a> "<a href="CppTrace.html">trace</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppMysteryMachine.html">mysterymachine</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppMysteryMachineWidget.html">mysterymachinewidget</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppWtDialWidget.html">wtdialwidget</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppWtLedWidget.html">wtledwidget</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="CppWtToggleButtonWidget.html">wttogglebuttonwidget</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic pop<br/>
<br/>
<a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>(<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> width, <b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> height)<br/>
&nbsp;&nbsp;: m_signal_changed{},<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_<a href="CppWidget.html">widget</a>(<b><a href="CppNew.htm">new</a></b> <a href="CppMysteryMachineWidget.html">MysteryMachineWidget</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rect(0,0,width-1,height-1)))<br/>
<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(m_<a href="CppWidget.html">widget</a>);<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.html">widget</a>-&gt;GetMachine()-&gt;GetDialBack()-&gt;GetDial()-&gt;m_signal_position_changed.connect(<a href="CppBind.html">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::DoRepaint,<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;m_<a href="CppWidget.html">widget</a>-&gt;GetMachine()-&gt;GetDialFront()-&gt;GetDial()-&gt;m_signal_position_changed.connect(<a href="CppBind.html">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::DoRepaint,<b><a href="CppThis.htm">this</a></b>));<br/>
&nbsp;&nbsp;m_<a href="CppWidget.html">widget</a>-&gt;GetMachine()-&gt;Get<a href="CppToggleButton.html">ToggleButton</a>()-&gt;Get<a href="CppToggleButton.html">ToggleButton</a>()-&gt;m_signal_toggled.connect(<a href="CppBind.html">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::DoRepaint,<b><a href="CppThis.htm">this</a></b>));<br/>
<br/>
&nbsp;&nbsp;m_<a href="CppWidget.html">widget</a>-&gt;m_signal_<a href="CppGeometry.html">geometry</a>_changed.connect(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppBind.html">boost::bind</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::OnResize,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>));<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;clicked().connect(<b><a href="CppThis.htm">this</a></b>,&amp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::OnClicked);<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;m_<a href="CppWidget.html">widget</a>-&gt;SetGeometry(Rect(0,0,width,height));<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::DoRepaint()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppThis.htm">this</a></b>-&gt;update();<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::OnResize()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::resize(m_<a href="CppWidget.html">widget</a>-&gt;GetGeometry().GetWidth(),m_<a href="CppWidget.html">widget</a>-&gt;GetGeometry().GetHeight());<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::Get<a href="CppVersion.html">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> "1.1";<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::Get<a href="CppVersion.html">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("YYYY-MM-DD: <a href="CppVersion.html">version</a> X.Y: [description]");<br/>
&nbsp;&nbsp;v.push_back("2011-06-16: <a href="CppVersion.html">version</a> 1.0: initial <a href="CppVersion.html">version</a>");<br/>
&nbsp;&nbsp;v.push_back("2011-08-20: <a href="CppVersion.html">Version</a> 1.1: added <b><a href="CppOperatorStreamOut.html">operator&lt;&lt;</a></b>");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::OnClicked(<b><a href="CppConst.html">const</a></b> <a href="CppWMouseEvent.html">Wt::WMouseEvent</a>&amp; e)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> x <a href="CppOperatorAssign.htm">=</a> e.<a href="CppWidget.html">widget</a>().x;<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> y <a href="CppOperatorAssign.htm">=</a> e.<a href="CppWidget.html">widget</a>().y;<br/>
&nbsp;&nbsp;m_<a href="CppWidget.html">widget</a>-&gt;Click(x,y);<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::paintEvent(<a href="CppWPaintDevice.html">Wt::WPaintDevice</a> *paintDevice)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppWPainter.html">Wt::WPainter</a> painter(paintDevice);<br/>
&nbsp;&nbsp;painter.drawRect(0,0,width().toPixels(),height().toPixels());<br/>
&nbsp;&nbsp;<a href="CppWtDialWidget.html">WtDialWidget</a>::DrawDial(painter,Get<a href="CppWidget.html">Widget</a>()-&gt;GetMachine()-&gt;GetDialBack());<br/>
&nbsp;&nbsp;<a href="CppWtDialWidget.html">WtDialWidget</a>::DrawDial(painter,Get<a href="CppWidget.html">Widget</a>()-&gt;GetMachine()-&gt;GetDialFront());<br/>
&nbsp;&nbsp;<a href="CppWtLedWidget.html">WtLedWidget</a>::Draw<a href="CppLed.htm">Led</a>(painter,Get<a href="CppWidget.html">Widget</a>()-&gt;GetMachine()-&gt;Get<a href="CppLed.htm">Led</a>Back1());<br/>
&nbsp;&nbsp;<a href="CppWtLedWidget.html">WtLedWidget</a>::Draw<a href="CppLed.htm">Led</a>(painter,Get<a href="CppWidget.html">Widget</a>()-&gt;GetMachine()-&gt;Get<a href="CppLed.htm">Led</a>Back2());<br/>
&nbsp;&nbsp;<a href="CppWtLedWidget.html">WtLedWidget</a>::Draw<a href="CppLed.htm">Led</a>(painter,Get<a href="CppWidget.html">Widget</a>()-&gt;GetMachine()-&gt;Get<a href="CppLed.htm">Led</a>Back3());<br/>
&nbsp;&nbsp;<a href="CppWtLedWidget.html">WtLedWidget</a>::Draw<a href="CppLed.htm">Led</a>(painter,Get<a href="CppWidget.html">Widget</a>()-&gt;GetMachine()-&gt;Get<a href="CppLed.htm">Led</a>Front1());<br/>
&nbsp;&nbsp;<a href="CppWtLedWidget.html">WtLedWidget</a>::Draw<a href="CppLed.htm">Led</a>(painter,Get<a href="CppWidget.html">Widget</a>()-&gt;GetMachine()-&gt;Get<a href="CppLed.htm">Led</a>Front2());<br/>
&nbsp;&nbsp;<a href="CppWtLedWidget.html">WtLedWidget</a>::Draw<a href="CppLed.htm">Led</a>(painter,Get<a href="CppWidget.html">Widget</a>()-&gt;GetMachine()-&gt;Get<a href="CppLed.htm">Led</a>Front3());<br/>
&nbsp;&nbsp;<a href="CppWtLedWidget.html">WtLedWidget</a>::Draw<a href="CppLed.htm">Led</a>(painter,Get<a href="CppWidget.html">Widget</a>()-&gt;GetMachine()-&gt;Get<a href="CppLed.htm">Led</a>TopBack());<br/>
&nbsp;&nbsp;<a href="CppWtLedWidget.html">WtLedWidget</a>::Draw<a href="CppLed.htm">Led</a>(painter,Get<a href="CppWidget.html">Widget</a>()-&gt;GetMachine()-&gt;Get<a href="CppLed.htm">Led</a>TopFront());<br/>
&nbsp;&nbsp;<a href="CppWtLedWidget.html">WtLedWidget</a>::Draw<a href="CppLed.htm">Led</a>(painter,Get<a href="CppWidget.html">Widget</a>()-&gt;GetMachine()-&gt;Get<a href="CppLed.htm">Led</a>TopMiddle());<br/>
&nbsp;&nbsp;<a href="CppWtToggleButton.html">WtToggleButton</a><a href="CppWidget.html">Widget</a>::Draw<a href="CppToggleButton.html">ToggleButton</a>(painter,Get<a href="CppWidget.html">Widget</a>()-&gt;GetMachine()-&gt;Get<a href="CppToggleButton.html">ToggleButton</a>());<br/>
}<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> <a href="CppRibi.htm">ribi</a>::<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>::resize(<b><a href="CppConst.html">const</a></b> <a href="CppWLength.html">Wt::WLength</a>&amp; width, <b><a href="CppConst.html">const</a></b> <a href="CppWLength.html">Wt::WLength</a>&amp; height)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppWPaintedWidget.html">Wt::WPaintedWidget</a>::resize(width,height);<br/>
}<br/>
<br/>
<a href="CppOstream.html">std::ostream</a>&amp; <a href="CppRibi.htm">ribi</a>::<b><a href="CppOperatorStreamOut.html">operator&lt;&lt;</a></b>(<a href="CppOstream.html">std::ostream</a>&amp; os, <b><a href="CppConst.html">const</a></b> <a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>&amp; <a href="CppWidget.html">widget</a>)<br/>
{<br/>
&nbsp;&nbsp;os<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "&lt;<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> *<a href="CppWidget.html">widget</a>.m_<a href="CppWidget.html">widget</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.html">&lt;&lt;</a> "&lt;/<a href="CppWtMysteryMachineWidget.html">WtMysteryMachineWidget</a>&gt;";<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> os;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
