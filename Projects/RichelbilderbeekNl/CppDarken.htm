 
<title>Darken</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>C++ Darken</o:Subject>
  <o:Author>Richel Bilderbeek</o:Author>
  <o:Keywords>C++ Richel Bilderbeek TImage Image VCL Builder Darken</o:Keywords>
  <o:Description>From http://www.richelbilderbeek.nl</o:Description>
  <o:LastAuthor>Richel Bilderbeek</o:LastAuthor>
 </o:DocumentProperties>
</xml><![endif]-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Darken</title>
  <meta name="description" content="C++ Darken"/>
  <meta name="keywords" content="C++ Darken"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppDarken.htm">Darken</a></h1>
<p>&nbsp;</p>
<p><a href="CppDarken.htm">Darken</a> is a <a href="CppVclGraphics.htm">Graphics</a> <a href="CppVclCodeSnippets.htm">code snippet</a> 
to darken a <a href="CppTImage.htm">Extctrls::TImage</a>. To bleach a <a href="CppTImage.htm">Extctrls::TImage</a> use <a href="CppBleach.htm">Bleach</a>.</p>
<p>&nbsp;</p>
<p>The <a href="Tools.htm">tool</a> <a href="ToolBarbaImage.htm">BarbaImage</a> uses <a href="CppDarken.htm">Darken</a> as one of its image operations.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="CppDarken.PNG">View an example of a composition image demonstrating 'Darken'</a></li>
  <li><a href="CppDarken.txt">View the code of 'Darken' in plain text</a></li>
</ul>
<p>&nbsp;</p>


<p><a
href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;</p>

<p><a
href="CppInclude.htm">#include</a> &lt;Extctrls.hpp&gt;</p>

<p>&nbsp;</p>

<p><a
href="CppComment.htm">//</a>Darken an image by fraction f</p>

<p><a
href="CppComment.htm">//</a> * f = 0.0 denotes no bleaching    (image untouched)</p>

<p><a
href="CppComment.htm">//</a> * f = 1.0 denotes max bleaching (image black)</p>

<p><a
href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/CppDarken.htm</p>

<p><b> <a
href="CppVoid.htm">void</a> </b>  <a href="CppBleach.htm"><span
style='mso-field-code:"HYPERLINK \0022CppDarken\.htm\0022"'>Darken</a>(</p>

<p>   <b><a href="CppConst.htm">const</a></b> <a
href="CppTImage.htm">Extctrls::TImage</a> * <b><a href="CppConst.htm">const</a></b>
source,</p>

<p>   <b><a href="CppConst.htm">const</a></b> <b><a
href="CppDouble.htm">double</a></b> f,                 </p>

<p>   <a href="CppTImage.htm">Extctrls::TImage</a>
* <b><a href="CppConst.htm">const</a></b> target)</p>

<p>{</p>

<p>   <a href="CppAssert.htm">assert</a>(f
&gt;=    0.0);</p>

<p>   <a href="CppAssert.htm">assert</a>(f
&lt;=    1.0);</p>

<p>   <a href="CppAssert.htm">assert</a>(source!=0
&amp;&amp; &quot;Image is NULL&quot;);</p>

<p>   <a href="CppAssert.htm">assert</a>(source-&gt;Picture-&gt;Bitmap!=0
&amp;&amp; &quot;Image bitmap is NULL&quot;);</p>

<p>   <a href="CppAssert.htm">assert</a>(source-&gt;Picture-&gt;Bitmap-&gt;PixelFormat
== pf24bit &amp;&amp; &quot;Image bitmap must be 24 bit&quot;);</p>

<p>   <a href="CppAssert.htm">assert</a>(target!=0
&amp;&amp; &quot;Image is NULL&quot;);</p>

<p>   <a href="CppAssert.htm">assert</a>(target-&gt;Picture-&gt;Bitmap!=0
&amp;&amp; &quot;Image bitmap is NULL&quot;);</p>

<p>   <a href="CppAssert.htm">assert</a>(target-&gt;Picture-&gt;Bitmap-&gt;PixelFormat
== pf24bit &amp;&amp; &quot;Image bitmap must be 24 bit&quot;);</p>

<p>   //Get the width and height from the source</p>

<p>   <b><a href="CppConst.htm">const</a></b> <b><a
href="CppInt.htm">int</a></b> width    =
source-&gt;Picture-&gt;Bitmap-&gt;Width;</p>

<p>   <b><a href="CppConst.htm">const</a></b> <b><a
href="CppInt.htm">int</a></b> height =
source-&gt;Picture-&gt;Bitmap-&gt;Height;</p>

<p>   //Set the target's width and height</p>

<p>   target-&gt;Picture-&gt;Bitmap-&gt;Width    = width;</p>

<p>   target-&gt;Picture-&gt;Bitmap-&gt;Height =
height;</p>

<p>&nbsp;</p>

<p>   <b><a href="CppFor.htm">for</a></b> (<b><a

href="CppInt.htm">int</a></b> y=0; y!=height; ++y)</p>

<p>   {</p>

<p>     <b><a href="CppConst.htm">const</a></b> <b><a
href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b> *
lineSource</p>

<p>       = <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppConst.htm">const</a></b> <b><a href="CppUnsigned.htm">unsigned</a></b>
<b><a href="CppChar.htm">char</a></b> *&gt;(</p>

<p>       
 source-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);</p>

<p>     <b><a href="CppUnsigned.htm">unsigned</a></b>
<b><a href="CppChar.htm">char</a></b> * lineTarget</p>

<p>       = <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>
*&gt;(</p>

<p>       
 target-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);</p>

<p>     <b><a href="CppFor.htm">for</a></b> (<b><a
href="CppInt.htm">int</a></b> x=0; x!=width; ++x)</p>

<p>     {</p>

<p>       <b><a href="CppConst.htm">const</a></b> <b><a
href="CppInt.htm">int</a></b> r = lineSource[x*3+2]; //Red;</p>

<p>       <b><a href="CppConst.htm">const</a></b> <b><a
href="CppInt.htm">int</a></b> g = lineSource[x*3+1]; //Green;</p>

<p>       <b><a href="CppConst.htm">const</a></b> <b><a
href="CppInt.htm">int</a></b> b = lineSource[x*3+0]; //Blue;</p>

<p>       <b><a href="CppConst.htm">const</a></b> <b><a
href="CppDouble.htm">double</a></b> dist_r = <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppDouble.htm">double</a></b>&gt;(r) * (1.0-f);</p>

<p>       <b><a href="CppConst.htm">const</a></b> <b><a
href="CppDouble.htm">double</a></b> dist_g = <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppDouble.htm">double</a></b>&gt;(g) * (1.0-f);</p>

<p>       <b><a href="CppConst.htm">const</a></b> <b><a
href="CppDouble.htm">double</a></b> dist_b = <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppDouble.htm">double</a></b>&gt;(b) * (1.0-f);</p>

<p>       <b><a href="CppConst.htm">const</a></b> <b><a
href="CppInt.htm">int</a></b> new_r = <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppInt.htm">int</a></b>&gt;(dist_r);</p>

<p>       <b><a href="CppConst.htm">const</a></b> <b><a
href="CppInt.htm">int</a></b> new_g = <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppInt.htm">int</a></b>&gt;(dist_g);</p>

<p>       <b><a href="CppConst.htm">const</a></b> <b><a
href="CppInt.htm">int</a></b> new_b = <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppInt.htm">int</a></b>&gt;(dist_b);</p>

<p>         <a
href="CppAssert.htm">assert</a>(new_r &gt;=   
 0);</p>

<p>       <a href="CppAssert.htm">assert</a>(new_r
&lt;    256);</p>

<p>       <a href="CppAssert.htm">assert</a>(new_g
&gt;=     0);</p>

<p>       <a href="CppAssert.htm">assert</a>(new_g
&lt;    256);</p>

<p>       <a href="CppAssert.htm">assert</a>(new_b
&gt;=     0);</p>

<p>       <a href="CppAssert.htm">assert</a>(new_b
&lt;    256);</p>

<p>       lineTarget[x*3+2] = new_r; //Red</p>

<p>       lineTarget[x*3+1] = new_g; //Green</p>

<p>       lineTarget[x*3+0] = new_b; //Blue</p>

<p>     }</p>

<p>   }</p>

<p>&nbsp;</p>

<p>}</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
</body>
</html>




