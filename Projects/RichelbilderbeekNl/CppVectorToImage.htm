 
<title>VectorToImage</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>C++ VectorToImage</o:Subject>
  <o:Author>Richel Bilderbeek</o:Author>
  <o:Keywords>C++ Richel Bilderbeek VectorToImage std::vector vector to 2 image TImage VCL Builder</o:Keywords>
  <o:Description>From http://www.richelbilderbeek.nl</o:Description>
  <o:LastAuthor>Richel Bilderbeek</o:LastAuthor>
  <o:Revision>9</o:Revision>
  <o:TotalTime>128</o:TotalTime>
  <o:Created>2008-07-17T15:45:00Z</o:Created>
  <o:LastSaved>2008-07-17T15:55:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>462</o:Words>
  <o:Characters>2639</o:Characters>
  <o:Category>C++ Richel Bilderbeek VectorToImage</o:Category>
  <o:Manager>Richel Bilderbeek</o:Manager>
  <o:Company>Richel Bilderbeek</o:Company>
  <o:Lines>21</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>3240</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
 
</head>

 

 

<p><a
href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>

<p><a
href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h1>(<a href="Cpp.htm">C++</a>)
<a href="CppVectorToImage.htm">VectorToImage</a></h1>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><a
href="CppGraphics.htm">Graphics</a> <a
href="CppCodeSnippets.htm"> code
snippet</a> to let a 2D <a href="CppVector.htm">std::vector</a> be drawn
on a <a href="CppVcl.htm">VCL</a> <a href="CppTImage.htm">TImage</a>. To do the
opposite, use   <a
href="CppImageToVector.htm">ImageToVector</a>.</p>

<p>&nbsp;</p>

<p>* <a
href="CppVectorToImage.txt">View the code of 'VectorToImage' in plain text</a>.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;<a href="CppCassertH.htm">cassert</a>&gt;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;<a href="CppVectorH.htm">vector</a>&gt;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;vcl.h&gt;</p>

<p>&nbsp;</p>

<p>//Draws a (grey) TImage from a
2D-std::vector (y-x-ordered)</p>

<p>//From
http://www.richelbilderbeek.nl/CppVectorToImage.htm</p>

<p><b> <a href="CppVoid.htm">void</a> </b>  <a
href="CppVectorToImage.htm">VectorToImage</a>(<b><a href="CppConst.htm">const</a></b>
  <a href="CppVector.htm">std::vector</a> &lt;  <a
href="CppVector.htm">std::vector</a> &lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt;&amp; v, <b><a
href="CppConst.htm">const</a></b> <a href="CppTImage.htm">TImage</a> * <b><a
href="CppConst.htm">const</a></b> image)</p>

<p>{</p>

<p>
 <a href="CppAssert.htm">assert</a>(image!=0 &amp;&amp; &quot;Image must
not be NULL&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap!=0
&amp;&amp; &quot;Bitmap must not be NULL&quot;);</p>

<p>
 <a href="CppAssert.htm">assert</a>(image-&gt;Picture-&gt;Bitmap-&gt;PixelFormat
== pf24bit &amp;&amp; &quot;Bitmap must be 24 bit&quot;);</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>
height = v.size();</p>

<p>
 <b><a href="CppConst.htm">const</a></b> <b><a href="CppInt.htm">int</a></b>
width    = v[0].size();</p>

<p>&nbsp;</p>

<p>
 image-&gt;Picture-&gt;Bitmap-&gt;Height = height;</p>

<p>
 image-&gt;Picture-&gt;Bitmap-&gt;Width  
 = width;</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b>
y=0; y!=height; ++y)</p>

<p>
 {</p>

<p> 
 <a href="CppAssert.htm">assert</a>(y &gt;= 0);</p>

<p>
    <a href="CppAssert.htm">assert</a>(y
&lt; <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppInt.htm">int</a></b>&gt;(v.size()));</p>

<p> 
 <b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<b><a
href="CppInt.htm">int</a></b>&gt;&amp; vLine = v[y];</p>

<p> 
 <b><a href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>
* <b><a href="CppConst.htm">const</a></b> line</p>

<p>     = <b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a
href="CppUnsigned.htm">unsigned</a></b> <b><a href="CppChar.htm">char</a></b>
*&gt;(image-&gt;Picture-&gt;Bitmap-&gt;ScanLine[y]);</p>

<p> 
 <b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b>
x=0; x!=width; ++x)</p>

<p> 
 {</p>

<p>     <a href="CppAssert.htm">assert</a>(x &gt;= 0);</p>

<p>     <a href="CppAssert.htm">assert</a>(x &lt; <b><a
href="CppStatic_cast.htm">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(vLine.size()));</p>

<p>     <b><a href="CppConst.htm">const</a></b> <b><a
href="CppInt.htm">int</a></b> grey = vLine[x];</p>

<p>     line[x*3+2] = grey; //Red</p>

<p>     line[x*3+1] = grey; //Green</p>

<p>     line[x*3+0] = grey; //Blue</p>

<p> 
 }</p>

<p>
 }</p>

<p>}</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><a
href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>

<p><a
href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>

<p>&nbsp;</p>

</div>

</body>

</html>
