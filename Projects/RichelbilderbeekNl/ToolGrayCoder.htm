<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>GrayCoder</title>
  <meta name="description" content="C++ GrayCoder"/>
  <meta name="keywords" content="C++ GrayCoder code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="ToolGrayCoder.htm">GrayCoder</a></h1>
<p>&nbsp;</p>
<!-- This text is generated by CodeToHtml -->
<p><a href="ToolGrayCoder.htm">GrayCoder</a> is a <a href="Tools.htm">tool</a> to convert integer values to Gray codes and
vice versa.</p>
<p>&nbsp;</p>
<ul>
  <li><a href="ToolGrayCoder_1_0.png"> View a screenshot of 'GrayCoder' (version 1.0)</a></li>
  <li><a href="ToolGrayCoderExe_1_0.zip">Download the 'GrayCoder' Windows executable (version 1.0)(zip)</a></li>
  <li><a href="ToolGrayCoderSource_1_0.zip"> Download the 'GrayCoder' source code (version 1.0)(zip)</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>External links</h2>
<p>&nbsp;</p>
<ul>
  <li><a href="http://en.wikipedia.org/wiki/Gray_code">Wikipedia s page about Gray Codes</a></li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicLubuntu.png" alt="Lubuntu"/> <a href="CppLubuntu.htm">Lubuntu</a> 13.04 (raring)</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicQtCreator.png" alt="Qt Creator"/> <a href="CppQtCreator.htm">Qt Creator</a> unknown</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicConsole.png" alt="console"/> <a href="CppConsoleApplication.htm">Console application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp11.png" alt="C++11"/> <a href="Cpp11.htm">C++11</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li><a href="CppGpp.htm">G++</a> 4.7.3</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicQt.png" alt="Qt"/> <a href="CppQt.htm">Qt</a>: version 5.1.1 (32 bit)</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.7.3</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2><a href="CppQtProjectFile.htm">Qt project file</a>: ToolGrayCoderConsole.pro</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="ToolGrayCoderConsole.pro" border = "1"><tr><td><code>
QT += core<br/>
QT -= gui<br/>
<a href="CppQmakeTemplate.htm">TEMPLATE</a> = app<br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp11.htm">c++11</a> <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a> <a href="CppWerror.htm">-Werror</a><br/>
<br/>
<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a> \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a><br/>
<br/>
<a href="CppQmakeSources.htm">SOURCES</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">about</a>.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;toolgraycodermenudialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;toolgraycoder<a href="CppMain.htm">main</a>dialog.cpp \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppMain.htm">main</a>.cpp<br/>
<br/>
<a href="CppQmakeHeaders.htm">HEADERS</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/<a href="CppAbout.htm">about</a>.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;toolgraycodermenudialog.h \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;toolgraycoder<a href="CppMain.htm">main</a>dialog.h<br/>
<br/>
OTHER_FILES += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppAbout.htm">CppAbout</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;../../<a href="CppClass.htm">Classes</a>/<a href="CppTrace.htm">CppTrace</a>/Licence.txt \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Licence.txt<br/>
<br/>
#<br/>
#<br/>
# Type of compile<br/>
#<br/>
#<br/>
<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>(debug, debug|release) {<br/>
&nbsp;&nbsp;message(Debug mode)<br/>
}<br/>
<br/>
<a href="CppQmakeConfig.htm">CONFIG</a>(release, debug|release) {<br/>
&nbsp;&nbsp;message(Release mode)<br/>
<br/>
&nbsp;&nbsp;#Remove all <a href="CppAssert.htm">assert</a>s and <a href="CppTRACE.htm">TRACE</a><br/>
&nbsp;&nbsp;<a href="CppQmakeDefines.htm">DEFINES</a> += NDEBUG N<a href="CppTRACE.htm">TRACE</a>_BILDERBIKKEL<br/>
}<br/>
<br/>
#<br/>
#<br/>
# Platform specific<br/>
#<br/>
#<br/>
<br/>
#<br/>
#<br/>
# Compiler flags<br/>
#<br/>
#<br/>
<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += -std=<a href="Cpp11.htm">c++11</a> <a href="CppWall.htm">-Wall</a> <a href="CppWextra.htm">-Wextra</a><br/>
<br/>
<br/>
unix {<br/>
&nbsp;&nbsp;message(Unix)<br/>
&nbsp;&nbsp;#Strict error handling<br/>
&nbsp;&nbsp;<a href="CppQmakeQmake_cxxflags.htm">QMAKE_CXXFLAGS</a> += <a href="CppWerror.htm">-Werror</a><br/>
}<br/>
<br/>
#<br/>
#<br/>
# Boost<br/>
#<br/>
#<br/>
<br/>
unix {<br/>
&nbsp;&nbsp;message(Unix: Boost already in include path)<br/>
}<br/>
<br/>
win32 {<br/>
&nbsp;&nbsp;message(Windows: add Boost to include path)<br/>
&nbsp;&nbsp;<a href="CppQmakeIncludepath.htm">INCLUDEPATH</a> += \<br/>
&nbsp;&nbsp;&nbsp;&nbsp;E:/<a href="Projects.htm">Projects</a>/<a href="CppLibrary.htm">Libraries</a>/boost_1_54_0<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>main.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="main.cpp" border = "1"><tr><td><code>
<a href="CppPragma.html">#pragma</a> GCC diagnostic push<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic ignored "-Wunused-local-<b><a href="CppTypedef.html">typedef</a></b>s"<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppBoost.html">boost</a>/<a href="CppLexical_cast.html">lexical_cast</a><a href="CppHeaderFile.htm">.h</a>pp&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> "<a href="Tools.htm">tool</a>graycodermenudialog<a href="CppHeaderFile.htm">.h</a>"<br/>
<a href="CppInclude.html">#include</a> "<a href="Tools.htm">tool</a>graycodermaindialog<a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppPragma.html">#pragma</a> GCC diagnostic pop<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b> * <a href="CppArgc.htm">argv</a>[])<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppTry.htm">try</a></b><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;GrayCoderMainDialog d;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (<a href="CppArgc.htm">argc</a> <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> 1) <b><a href="CppThrow.html">throw</a></b> <a href="CppStdException.html">std::exception</a>();<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> i <a href="CppOperatorAssign.htm">=</a> <a href="CppLexical_cast.html">boost::lexical_cast</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(<a href="CppArgc.htm">argv</a>[1]);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.SetNormalInt(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.html">std::cout</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> d.GetNormalInt() <a href="CppOperatorStreamOut.html">&lt;&lt;</a> " (normal) <a href="CppOperatorMinus.htm">-</a>&gt; " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> d.GetGrayInt() <a href="CppOperatorStreamOut.html">&lt;&lt;</a> " (Gray code)\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.html">std::cout</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> d.GetNormalIntAsBitStr() <a href="CppOperatorStreamOut.html">&lt;&lt;</a> " (normal) <a href="CppOperatorMinus.htm">-</a>&gt; " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> d.GetGrayIntAsBitStr() <a href="CppOperatorStreamOut.html">&lt;&lt;</a> " (Gray code)\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.html">std::cout</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;&nbsp;&nbsp;d.SetGrayInt(i);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.html">std::cout</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> d.GetGrayInt() <a href="CppOperatorStreamOut.html">&lt;&lt;</a> " (Gray code) <a href="CppOperatorMinus.htm">-</a>&gt; " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> d.GetNormalInt() <a href="CppOperatorStreamOut.html">&lt;&lt;</a> " (normal)\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.html">std::cout</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> d.GetGrayIntAsBitStr() <a href="CppOperatorStreamOut.html">&lt;&lt;</a> " (Gray code) <a href="CppOperatorMinus.htm">-</a>&gt; " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> d.GetNormalIntAsBitStr() <a href="CppOperatorStreamOut.html">&lt;&lt;</a> " (normal)\n";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.html">std::cout</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppCatch.html">catch</a></b> (...)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.html">std::cout</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Usage: " <a href="CppOperatorStreamOut.html">&lt;&lt;</a> <a href="CppArgc.htm">argv</a>[0] <a href="CppOperatorStreamOut.html">&lt;&lt;</a> " [value],\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"where [value] is an <a href="CppInt.html">integer</a> value\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"For example:"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;" <a href="CppOperatorStreamOut.html">&lt;&lt;</a> <a href="CppArgc.htm">argv</a>[0] <a href="CppOperatorStreamOut.html">&lt;&lt;</a> " 123\n"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"\n";<br/>
&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp;s : GrayCoderMenuDialog().GetAbout().Create<a href="CppAbout.html">About</a>Text())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.html">std::cout</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> s <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppCout.html">std::cout</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a>&amp;s : GrayCoderMenuDialog().GetAbout().CreateLicenceText())<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppCout.html">std::cout</a> <a href="CppOperatorStreamOut.html">&lt;&lt;</a> s <a href="CppOperatorStreamOut.html">&lt;&lt;</a> '\n';<br/>
&nbsp;&nbsp;}<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>toolgraycodermaindialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="toolgraycodermaindialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
GrayCoder, <a href="Tools.htm">tool</a> to <a href="CppConvert.html">convert</a> <a href="CppInt.html">integer</a>s to and from Gray code<br/>
Copyright (C) 2009-2013 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl/<a href="Tools.htm">Tool</a>GrayCoder.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.html">#ifndef</a> GRAYCODERMAINDIALOG_H<br/>
<a href="CppDefine.html">#define</a> GRAYCODERMAINDIALOG_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppVectorH.html">vector</a>&gt;<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> GrayCoderMainDialog<br/>
{<br/>
&nbsp;&nbsp;GrayCoderMainDialog(<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> normal_int <a href="CppOperatorAssign.htm">=</a> 0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Gray code <a href="CppInt.html">integer</a><br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetGrayInt() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> IntToGray(m_i); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the Gray code <a href="CppInt.html">integer</a> as a <a href="CppString.html">std::string</a> of zeroes and ones<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> GetGrayIntAsBitStr() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> <a href="CppIntToBitString.html">IntToBitString</a>(IntToGray(m_i)); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the normal <a href="CppInt.html">integer</a><br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> GetNormalInt() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> m_i; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the normal <a href="CppInt.html">integer</a> as a <a href="CppString.html">std::string</a> of zeroes and ones<br/>
&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> GetNormalIntAsBitStr() <b><a href="CppConst.html">const</a></b> { <b><a href="CppReturn.html">return</a></b> <a href="CppIntToBitString.html">IntToBitString</a>(m_i); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the Gray code <a href="CppInt.html">integer</a>, creates the normal <a href="CppInt.html">integer</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetGrayInt(<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> i) { m_i <a href="CppOperatorAssign.htm">=</a> <a href="CppGrayToInt.html">GrayToInt</a>(i); }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the normal <a href="CppInt.html">integer</a>, creates the Gray code <a href="CppInt.html">integer</a><br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetNormalInt(<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> i) { m_i <a href="CppOperatorAssign.htm">=</a> i; }<br/>
<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Store a normal <a href="CppInt.html">integer</a> only<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> m_i;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.html">Convert</a> a Gray coded <a href="CppInt.html">integer</a> to a normal <a href="CppInt.html">integer</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/From http://www.richelbilderbeek.nl/Cpp<a href="CppGrayToInt.html">GrayToInt</a>.html<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Modified from Press et al., 2002, Numerical Recipies in <a href="Cpp.htm">C++</a>,<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/ISBN 0 521 75033 4<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppInt.htm">int</a></b> <a href="CppGrayToInt.html">GrayToInt</a>(<b><a href="CppInt.htm">int</a></b> i);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/From http://www.richelbilderbeek.nl/Cpp<a href="CppIntToBitString.html">IntToBitString</a>.html<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppIntToBitString.html">IntToBitString</a>(<b><a href="CppInt.htm">int</a></b> i);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppConvert.html">Convert</a> a normal <a href="CppInt.html">integer</a> to a Gray coded <a href="CppInt.html">integer</a><br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/From http://www.richelbilderbeek.nl/CppIntToGray.html<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppInt.htm">int</a></b> IntToGray(<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> i);<br/>
<br/>
&nbsp;&nbsp;<a href="CppIfndef.html">#ifndef</a> <a href="CppNDEBUG.html">NDEBUG</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppVoid.htm">void</a></b> Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.html">#endif</a><br/>
};<br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> GRAYCODERMAINDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>toolgraycodermaindialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="toolgraycodermaindialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
GrayCoder, <a href="Tools.htm">tool</a> to <a href="CppConvert.html">convert</a> <a href="CppInt.html">integer</a>s to and from Gray code<br/>
Copyright (C) 2009-2013 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl/<a href="Tools.htm">Tool</a>GrayCoder.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.html">#include</a> own <a href="CppHeaderFile.html">header file</a> as first substantive line of code, from:<br/>
<a href="CppComment.htm">//</a> * John Lakos. Large-Scale <a href="Cpp.htm">C++</a> Software Design. 1996. ISBN: 0-201-63362-0. Section 3.2, page 110<br/>
<a href="CppInclude.html">#include</a> "<a href="Tools.htm">tool</a>graycodermaindialog<a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCassertH.html">cassert</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCmathH.html">cmath</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> "<a href="CppTrace.html">trace</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
GrayCoderMainDialog::GrayCoderMainDialog(<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> normal_int)<br/>
&nbsp;&nbsp;: m_i(normal_int)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppIfndef.html">#ifndef</a> <a href="CppNDEBUG.html">NDEBUG</a><br/>
&nbsp;&nbsp;Test();<br/>
&nbsp;&nbsp;<a href="CppEndif.html">#endif</a><br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> GrayCoderMainDialog::<a href="CppGrayToInt.html">GrayToInt</a>(<b><a href="CppInt.htm">int</a></b> i)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppInt.htm">int</a></b> power <a href="CppOperatorAssign.htm">=</a> 1;<br/>
&nbsp;&nbsp;<b><a href="CppWhile.html">while</a></b> (1)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> j <a href="CppOperatorAssign.htm">=</a> i <a href="CppOperatorStreamIn.html">&gt;&gt;</a> power;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i ^<a href="CppOperatorAssign.htm">=</a> j;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (j <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> 0 <a href="CppOperatorLogicalOr.htm">||</a> power <a href="CppOperatorAssign.htm">=</a><a href="CppOperatorAssign.htm">=</a> 16) <b><a href="CppReturn.html">return</a></b> i;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;power <a href="CppOperatorBitShiftLeftAssign.html">&lt;&lt;=</a> 1;<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> GrayCoderMainDialog::<a href="CppIntToBitString.html">IntToBitString</a>(<b><a href="CppInt.htm">int</a></b> i)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAssert.html">assert</a>( i <a href="CppOperatorGreaterEqual.html">&gt;=</a> 0 <a href="CppOperatorLogicalAnd.html">&amp;&amp;</a> "Did not bother to supply <b><a href="CppThis.htm">this</a></b> yet");<br/>
&nbsp;&nbsp;<a href="CppString.html">std::string</a> s <a href="CppOperatorAssign.htm">=</a>(i%2 ? "1" : "0" );<br/>
&nbsp;&nbsp;i<a href="CppOperatorBitShiftRightAssign.html">&gt;&gt;=</a>1;<br/>
&nbsp;&nbsp;<b><a href="CppWhile.html">while</a></b> (i &gt; 0)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s <a href="CppOperatorAssign.htm">=</a> (i%2 ? "1" : "0") <a href="CppOperatorPlus.htm">+</a> s;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;i<a href="CppOperatorBitShiftRightAssign.html">&gt;&gt;=</a>1;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> s;<br/>
}<br/>
<br/>
<b><a href="CppInt.htm">int</a></b> GrayCoderMainDialog::IntToGray(<b><a href="CppConst.html">const</a></b> <b><a href="CppInt.htm">int</a></b> i)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> (i ^ (i<a href="CppOperatorStreamIn.html">&gt;&gt;</a>1));<br/>
}<br/>
<br/>
<br/>
<b><a href="CppVoid.htm">void</a></b> GrayCoderMainDialog::Test()<br/>
{<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppBool.htm">bool</a></b> is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppFalse.html">false</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (is_tested) <b><a href="CppReturn.html">return</a></b>;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;is_tested <a href="CppOperatorAssign.htm">=</a> <b><a href="CppTrue.htm">true</a></b>;<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.html">TRACE</a>("Starting GrayCoderMainDialog::Test");<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>IntToGray<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray( 0)=<a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray( 1)=<a href="CppOperatorAssign.htm">=</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray( 2)=<a href="CppOperatorAssign.htm">=</a> 3);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray( 3)=<a href="CppOperatorAssign.htm">=</a> 2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray( 4)=<a href="CppOperatorAssign.htm">=</a> 6);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray( 5)=<a href="CppOperatorAssign.htm">=</a> 7);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray( 6)=<a href="CppOperatorAssign.htm">=</a> 5);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray( 7)=<a href="CppOperatorAssign.htm">=</a> 4);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray( 8)<a href="CppOperatorEqual.htm">==</a>12);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray( 9)<a href="CppOperatorEqual.htm">==</a>13);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray(10)<a href="CppOperatorEqual.htm">==</a>15);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray(11)<a href="CppOperatorEqual.htm">==</a>14);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray(12)<a href="CppOperatorEqual.htm">==</a>10);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray(13)<a href="CppOperatorEqual.htm">==</a>11);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray(14)=<a href="CppOperatorAssign.htm">=</a> 9);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(IntToGray(15)=<a href="CppOperatorAssign.htm">=</a> 8);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppGrayToInt.html">GrayToInt</a><br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>( 0)=<a href="CppOperatorAssign.htm">=</a> 0);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>( 1)=<a href="CppOperatorAssign.htm">=</a> 1);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>( 3)=<a href="CppOperatorAssign.htm">=</a> 2);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>( 2)=<a href="CppOperatorAssign.htm">=</a> 3);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>( 6)=<a href="CppOperatorAssign.htm">=</a> 4);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>( 7)=<a href="CppOperatorAssign.htm">=</a> 5);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>( 5)=<a href="CppOperatorAssign.htm">=</a> 6);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>( 4)=<a href="CppOperatorAssign.htm">=</a> 7);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>(12)=<a href="CppOperatorAssign.htm">=</a> 8);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>(13)=<a href="CppOperatorAssign.htm">=</a> 9);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>(15)<a href="CppOperatorEqual.htm">==</a>10);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>(14)<a href="CppOperatorEqual.htm">==</a>11);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>(10)<a href="CppOperatorEqual.htm">==</a>12);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>(11)<a href="CppOperatorEqual.htm">==</a>13);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>( 9)<a href="CppOperatorEqual.htm">==</a>14);<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppAssert.html">assert</a>(<a href="CppGrayToInt.html">GrayToInt</a>( 8)<a href="CppOperatorEqual.htm">==</a>15);<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<a href="CppTRACE.html">TRACE</a>("Finished GrayCoderMainDialog::Test successfully");<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>toolgraycodermenudialog.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="toolgraycodermenudialog.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
GrayCoder, <a href="Tools.htm">tool</a> to <a href="CppConvert.html">convert</a> <a href="CppInt.html">integer</a>s to and from Gray code<br/>
Copyright (C) 2009-2013 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl/<a href="Tools.htm">Tool</a>GrayCoder.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.html">#ifndef</a> GRAYCODERMENUDIALOG_H<br/>
<a href="CppDefine.html">#define</a> GRAYCODERMENUDIALOG_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppVectorH.html">vector</a>&gt;<br/>
<br/>
<a href="CppInclude.html">#include</a> "<a href="CppAbout.html">about</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppComment.htm">///</a>GUI independent GrayCoder menu dialog<br/>
<b><a href="CppStruct.html">struct</a></b> GrayCoderMenuDialog<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppAbout.html">About</a> GetAbout();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> Get<a href="CppVersion.html">Version</a>();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; Get<a href="CppVersion.html">Version</a>History();<br/>
};<br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> GRAYCODERMENUDIALOG_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>toolgraycodermenudialog.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="toolgraycodermenudialog.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
GrayCoder, <a href="Tools.htm">tool</a> to <a href="CppConvert.html">convert</a> <a href="CppInt.html">integer</a>s to and from Gray code<br/>
Copyright (C) 2009-2013 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a> From http://www.richelbilderbeek.nl/<a href="Tools.htm">Tool</a>GrayCoder.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.html">#include</a> own <a href="CppHeaderFile.html">header file</a> as first substantive line of code, from:<br/>
<a href="CppComment.htm">//</a> * John Lakos. Large-Scale <a href="Cpp.htm">C++</a> Software Design. 1996. ISBN: 0-201-63362-0. Section 3.2, page 110<br/>
<a href="CppInclude.html">#include</a> "<a href="Tools.htm">tool</a>graycodermenudialog<a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppInclude.html">#include</a> "<a href="CppTrace.html">trace</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppAbout.html">About</a> GrayCoderMenuDialog::GetAbout()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppAbout.html">About</a> a(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"Richel Bilderbeek",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"GrayCoder",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"<a href="Tools.htm">tool</a> to <a href="CppConvert.html">convert</a> <a href="CppInt.html">integer</a>s to and from Gray code",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"the 26th of August 2013",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"2009-2013",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;"http://www.richelbilderbeek.nl/<a href="Tools.htm">Tool</a>GrayCoder.html",<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.html">Version</a>(),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;Get<a href="CppVersion.html">Version</a>History());<br/>
&nbsp;&nbsp;a.<a href="CppAdd.htm">Add</a><a href="CppLibrary.html">Library</a>("<a href="CppTrace.html">Trace</a> <a href="CppVersion.html">version</a>: " <a href="CppOperatorPlus.htm">+</a> <a href="CppTrace.html">Trace</a>::Get<a href="CppVersion.html">Version</a>());<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> a;<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> GrayCoderMenuDialog::Get<a href="CppVersion.html">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> "2.0";<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; GrayCoderMenuDialog::Get<a href="CppVersion.html">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("2009-05-02: <a href="CppVersion.html">version</a> 1.0: initial <a href="CppVersion.html">version</a> in <a href="CppBuilder.html">C++ Builder</a>");<br/>
&nbsp;&nbsp;v.push_back("2013-08-26: <a href="CppVersion.html">version</a> 2.0: port to <a href="CppQtCreator.html">Qt Creator</a> console <a href="CppApplication.html">application</a>");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
