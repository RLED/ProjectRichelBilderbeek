<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>GaborFilter</title>
  <meta name="description" content="C++ GaborFilter"/>
  <meta name="keywords" content="C++ GaborFilter code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppGaborFilter.htm">GaborFilter</a></h1>
<p>&nbsp;</p>
<!-- No CodeToHtmlInfo about this class with page name CppGaborFilter-->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p><a href="CppApplication.htm">Application type(s)</a></p>
<ul>
  <li><img src="PicDesktop.png" alt="Desktop"/> <a href="CppDesktopApplication.htm">Desktop application</a></li>
</ul>
<p><a href="CppOs.htm">Operating system(s) or programming environment(s)</a></p>
<ul>
  <li><img src="PicCygwin.png" alt="Cygwin"/> <a href="CppCygwin.htm">Cygwin</a> 1.7.7</li>
  <li><img src="PicWindows.png" alt="Windows"/> <a href="CppWindows.htm">Windows</a> XP</li>
  <li><img src="PicWine.png" alt="Wine"/> <a href="CppWine.htm">Wine</a> 1.4.1</li>
</ul>
<p><a href="CppIde.htm">IDE(s)</a>:</p>
<ul>
  <li><img src="PicCppBuilder.png" alt="C++ Builder"/> <a href="CppBuilder.htm">C++ Builder</a> 6.0 Enterprise edition</li>
</ul>
<p><a href="CppQtProjectType.htm">Project type</a>:</p>
<ul>
  <li><img src="PicGui.png" alt="GUI"/> <a href="CppGuiApplication.htm">GUI application</a></li>
</ul>
<p><a href="CppStandard.htm">C++ standard</a>:</p>
<ul>
  <li><img src="PicCpp98.png" alt="C++98"/> <a href="Cpp98.htm">C++98</a></li>
</ul>
<p><a href="CppCompiler.htm">Compiler(s)</a>:</p>
<ul>
  <li>Borland <a href="CppBcc32Exe.htm">BCC32.EXE</a> version 6.0.10.157</li>
</ul>
<p><a href="CppLibrary.htm">Libraries</a> used:</p>
<ul>
  <li><img src="PicBigInt.png" alt="BigInt"/> <a href="CppBigInt.htm">BigInteger</a>: version 2010.04.30</li>
  <li><img src="PicBoost.png" alt="Boost"/> <a href="CppBoost.htm">Boost</a>: version 1.49</li>
  <li><img src="PicStl.png" alt="STL"/> <a href="CppStl.htm">STL</a>: GNU ISO C++ Library, version 4.7.2</li>
  <li><img src="PicVcl.png" alt="VCL"/> <a href="CppVcl.htm">VCL</a>: supplied with <a href="CppBuilder.htm">C++ Builder</a> 6.0 Enterprise edition
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>gaborfilter.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="gaborfilter.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
GaborFilter, GABORFILTER <b><a href="CppClass.htm">class</a></b><br/>
Copyright (C) 2011 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppGaborFilter.htm">CppGaborFilter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.htm">#ifndef</a> GABORFILTER_H<br/>
<a href="CppDefine.htm">#define</a> GABORFILTER_H<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppStringH.htm">string</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppVectorH.htm">vector</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/checked_delete.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppNoncopyable.htm">noncopyable</a>.hpp&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppSignals2.htm">signals2</a>.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">///</a>GaborFilter manages a Gabor filter<br/>
<b><a href="CppStruct.htm">struct</a></b> GaborFilter : <b><a href="CppPublic.htm">public</a></b> <a href="CppNoncopyable.htm">boost::noncopyable</a><br/>
{<br/>
&nbsp;&nbsp;GaborFilter(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorAssign.htm">=</a> 0.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> frequency <a href="CppOperatorAssign.htm">=</a> 1.0,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> sigma&nbsp;&nbsp;&nbsp;&nbsp; <a href="CppOperatorAssign.htm">=</a> 1.0);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/<a href="CppSignal.htm">Signal</a> <a href="CppEmit.htm">emitted</a> when a value of the Gabor filter changes<br/>
&nbsp;&nbsp;<b><a href="CppMutable.htm">mutable</a></b> <a href="CppBoostSignal.htm">boost::signals2::signal</a>&lt;<b><a href="CppVoid.htm">void</a></b> ()&gt; m_signal_changed;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the GaborFilter its angle<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> <a href="CppGetAngle.htm">GetAngle</a>()&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_angle;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the GaborFilter its frequency<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetFrequency()&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_frequency;&nbsp;&nbsp;}<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetMax() <b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> 1.0; }<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Get the GaborFilter its sigma<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> GetSigma()&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> { <b><a href="CppReturn.htm">return</a></b> m_sigma;&nbsp;&nbsp;}<br/>
<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The Gabor funtion<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppDouble.htm">double</a></b> Gabor<a href="CppFunction.htm">Function</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> frequency,<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> sigma);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The Gabor funtion<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> Gabor<a href="CppFunction.htm">Function</a>(<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the GaborFilter its angle<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetAngle(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the GaborFilter its frequency<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetFrequency(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> frequency);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the GaborFilter its sigma<br/>
&nbsp;&nbsp;<b><a href="CppVoid.htm">void</a></b> SetSigma(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> sigma);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Set the GaborFilter its sigma to<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> SuggestSigma(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height) <b><a href="CppConst.htm">const</a></b>;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.htm">private</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/GaborFilter can only be deleted by <a href="CppBoost.htm">Boost</a> <a href="CppSmartPointer.htm">smart pointer</a>s<br/>
&nbsp;&nbsp;<b><a href="CppVirtual.htm">virtual</a></b> ~GaborFilter() {}<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/GaborFilter can only be deleted by <a href="CppBoost.htm">Boost</a> <a href="CppSmartPointer.htm">smart pointer</a>s<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a><a href="CppHerbSutter.htm">Herb Sutter</a>. Exceptional <a href="Cpp.htm">C++</a> style. 2005. ISBN: 0-201-76042-8. Item 8: '<a href="CppFriend.htm">Befriending</a> <a href="CppTemplate.htm">templates</a>'.<br/>
&nbsp;&nbsp;<b><a href="CppFriend.htm">friend</a></b> <b><a href="CppVoid.htm">void</a></b> <a href="CppChecked_delete.htm">boost::checked_delete</a>&lt;&gt;(GaborFilter*);<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Angle of the filter in radians<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> m_angle;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The GaborFilter its frequency<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> m_frequency;<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/The GaborFilter its sigma<br/>
&nbsp;&nbsp;<b><a href="CppDouble.htm">double</a></b> m_sigma;<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppPublic.htm">public</a></b>:<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b> its <a href="CppVersion.htm">version</a><br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> Get<a href="CppVersion.htm">Version</a>();<br/>
<br/>
&nbsp;&nbsp;<a href="CppComment.htm">//</a>/Obtain <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b> its <a href="CppVersion.htm">version</a> history<br/>
&nbsp;&nbsp;<b><a href="CppStatic.htm">static</a></b> <b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; Get<a href="CppVersion.htm">Version</a>History();<br/>
};<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> GaborFilter&amp; g);<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppEndif.htm">#endif</a> <a href="CppComment.htm">//</a> GABORFILTER_H<br/>
<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>gaborfilter.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="gaborfilter.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
GaborFilter, <a href="CppLed.htm">LED</a> <b><a href="CppClass.htm">class</a></b><br/>
Copyright (C) 2011 Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the<br/>
GNU General Public License for more details.<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppGaborFilter.htm">CppGaborFilter</a>.htm<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfdef.htm">#ifdef</a> _WIN32<br/>
<a href="CppComment.htm">//</a>See http://www.richelbilderbeek.nl/Cpp<a href="CppCompile.htm">Compile</a>ErrorSwprintfHasNotBeenDeclared.htm<br/>
<a href="CppUndef.htm">#undef</a> __STRICT_ANSI__<br/>
<a href="CppEndif.htm">#endif</a><br/>
<br/>
<a href="CppComment.htm">//</a><a href="CppInclude.htm">#include</a> own <a href="CppHeaderFile.htm">header file</a> as first substantive line of code, from:<br/>
<a href="CppComment.htm">//</a> * John Lakos. Large-Scale <a href="Cpp.htm">C++</a> Software Design. 1996. ISBN: 0-201-63362-0. Section 3.2, page 110<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppGaborFilter.htm">gaborfilter</a>.h"<br/>
<br/>
<a href="CppInclude.htm">#include</a> "<a href="CppExercise.htm">exercise</a>.h"<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppCassertH.htm">cassert</a>&gt;<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppIostreamH.htm">iostream</a>&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppInclude.htm">#include</a> &lt;<a href="CppBoost.htm">boost</a>/<a href="CppLexical_cast.htm">lexical_cast</a>.hpp&gt;<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
GaborFilter::GaborFilter(<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> frequency,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> sigma)<br/>
&nbsp;&nbsp;: m_angle(angle),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_frequency(frequency),<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_sigma(sigma)<br/>
{<br/>
<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppDouble.htm">double</a></b> GaborFilter::Gabor<a href="CppFunction.htm">Function</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y,<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> frequency, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> sigma)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dx <a href="CppOperatorAssign.htm">=</a> x;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> dy <a href="CppOperatorAssign.htm">=</a> y;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> distance <a href="CppOperatorAssign.htm">=</a> <a href="CppSqrt.htm">std::sqrt</a>((dx * dx) <a href="CppOperatorPlus.htm">+</a> (dy * dy));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> fx <a href="CppOperatorAssign.htm">=</a> <a href="CppCos.htm">std::cos</a>(angle) * frequency;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> fy <a href="CppOperatorAssign.htm">=</a> <a href="CppSin.htm">std::sin</a>(angle) * frequency;<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> cosine <a href="CppOperatorAssign.htm">=</a> <a href="CppCos.htm">std::cos</a>((dx * fx) <a href="CppOperatorPlus.htm">+</a> (dy * fy));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> gauss <a href="CppOperatorAssign.htm">=</a> <a href="CppExp.htm">std::exp</a>( <a href="CppOperatorMinus.htm">-</a>(distance * distance) <a href="CppOperatorDivide.htm">/</a> (2.0 * sigma * sigma));<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> z <a href="CppOperatorAssign.htm">=</a> cosine * gauss;<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> z;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppDouble.htm">double</a></b> GaborFilter::Gabor<a href="CppFunction.htm">Function</a>(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> x, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> y) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> Gabor<a href="CppFunction.htm">Function</a>(x,y,m_angle,m_frequency,m_sigma);<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppString.htm">std::string</a> GaborFilter::Get<a href="CppVersion.htm">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> "1.0";<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppConst.htm">const</a></b> <a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; GaborFilter::Get<a href="CppVersion.htm">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.htm">std::vector</a>&lt;<a href="CppString.htm">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("2012-07-08: <a href="CppVersion.htm">version</a> 1.0: initial <a href="CppVersion.htm">version</a>");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> v;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> GaborFilter::SetAngle(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> angle)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (angle <a href="CppOperatorNotEqual.htm">!=</a> m_angle)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_angle <a href="CppOperatorAssign.htm">=</a> angle;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> GaborFilter::SetFrequency(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> frequency)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (frequency <a href="CppOperatorNotEqual.htm">!=</a> m_frequency)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_frequency <a href="CppOperatorAssign.htm">=</a> frequency;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppVoid.htm">void</a></b> GaborFilter::SetSigma(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> sigma)<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppIf.htm">if</a></b> (sigma <a href="CppOperatorNotEqual.htm">!=</a> m_sigma)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_sigma <a href="CppOperatorAssign.htm">=</a> sigma;<br/>
&nbsp;&nbsp;&nbsp;&nbsp;m_signal_changed();<br/>
&nbsp;&nbsp;}<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<b><a href="CppDouble.htm">double</a></b> GaborFilter::SuggestSigma(<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> width, <b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> height) <b><a href="CppConst.htm">const</a></b><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppConst.htm">const</a></b> <b><a href="CppDouble.htm">double</a></b> s <a href="CppOperatorAssign.htm">=</a> <a href="CppSqrt.htm">std::sqrt</a>( ((width*0.5)*(width*0.5)) <a href="CppOperatorPlus.htm">+</a> ((height*0.5)*(height*0.5)));<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> <a href="CppSqrt.htm">std::sqrt</a>(-(s * s) <a href="CppOperatorDivide.htm">/</a> (2.0*<a href="CppLog.htm">std::log</a>(1.0/510.0)));<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppOstream.htm">std::ostream</a>&amp; <b><a href="CppOperatorStreamOut.htm">operator&lt;&lt;</a></b>(<a href="CppOstream.htm">std::ostream</a>&amp; os, <b><a href="CppConst.htm">const</a></b> GaborFilter&amp; g)<br/>
{<br/>
&nbsp;&nbsp;os<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;GaborFilter&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;angle&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> g.<a href="CppGetAngle.htm">GetAngle</a>()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/angle&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;frequency&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> g.GetFrequency()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/frequency&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;sigma&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> g.GetSigma()<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/sigma&gt;"<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="CppOperatorStreamOut.htm">&lt;&lt;</a> "&lt;/GaborFilter&gt;";<br/>
&nbsp;&nbsp;<b><a href="CppReturn.htm">return</a></b> os;<br/>
}<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
