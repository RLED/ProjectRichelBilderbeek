<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>RandomCode</title>
  <meta name="description" content="C++ RandomCode"/>
  <meta name="keywords" content="C++ RandomCode code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="CppRandomCode.htm">RandomCode</a></h1>
<p>&nbsp;</p>
<!-- This text is generated by CodeToHtml -->
<p><img src="PicStl.png" alt="Stl"/><img src="PicQtCreator.png" alt="Qt Creator"/><img src="PicLubuntu.png" alt="Lubuntu"/></p>
<p>&nbsp;</p>
<p><a href="CppRandomCode.htm">RandomCode</a> is a <a href="CppClass.htm">class</a>
to generate random <a href="Cpp.htm">C++</a> code.</p>
<p>&nbsp;</p>
<p><a href="CppRandomCode.htm">RandomCode</a> is used by the <a href="Tools.htm">tool</a>
<a href="ToolRandomCode.htm">RandomCode</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>randomcode.h</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="randomcode.h" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppRandomCode.html">RandomCode</a>, <b><a href="CppClass.html">class</a></b> to generate random <a href="Cpp.htm">C++</a> code<br/>
Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppRandomCode.html">CppRandomCode</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppIfndef.html">#ifndef</a> RANDOMCODE_H<br/>
<a href="CppDefine.html">#define</a> RANDOMCODE_H<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppVectorH.html">vector</a>&gt;<br/>
<br/>
<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a> {<br/>
<br/>
<b><a href="CppStruct.html">struct</a></b> <a href="CppRandomCode.html">RandomCode</a><br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; Create<a href="CppRandomCode.html">RandomCode</a>();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; GetAbout();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; GetLicence();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> Get<a href="CppVersion.html">Version</a>();<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; Get<a href="CppVersion.html">Version</a>History();<br/>
&nbsp;&nbsp;<b><a href="CppPrivate.html">private</a></b>:<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> CreateRandomLine(<b><a href="CppConst.html">const</a></b> <b><a href="CppUnsigned.html">unsigned</a></b> <b><a href="CppInt.htm">int</a></b> length);<br/>
&nbsp;&nbsp;<b><a href="CppStatic.html">static</a></b> <b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> CreateRandomString();<br/>
};<br/>
<br/>
} <a href="CppComment.htm">//</a>~<b><a href="CppNamespace.html">namespace</a></b> <a href="CppRibi.htm">ribi</a><br/>
<br/>
<a href="CppEndif.html">#endif</a> <a href="CppComment.htm">//</a> RANDOMCODE_H<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>randomcode.cpp</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="randomcode.cpp" border = "1"><tr><td><code>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">/*</a><br/>
<a href="CppRandomCode.html">RandomCode</a>, <b><a href="CppClass.html">class</a></b> to generate random <a href="Cpp.htm">C++</a> code<br/>
Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek<br/>
<br/>
This program is free software: you can redistribute it and/or modify<br/>
it under the terms of the GNU General Public License as published by<br/>
the Free Software Foundation, either version 3 of the License, or<br/>
(at your option) any later version.<br/>
<br/>
This program is distributed in the hope that it will be useful,<br/>
but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the<br/>
GNU General Public License for more details.<br/>
<br/>
You should have received a copy of the GNU General Public License<br/>
along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.<br/>
<a href="CppComment.htm">*/</a><br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<a href="CppComment.htm">//</a>From http://www.richelbilderbeek.nl/<a href="CppRandomCode.html">CppRandomCode</a>.html<br/>
<a href="CppComment.htm">//</a>---------------------------------------------------------------------------<br/>
<br/>
<br/>
<a href="CppInclude.html">#include</a> "<a href="CppRandomCode.html">randomcode</a><a href="CppHeaderFile.htm">.h</a>"<br/>
<br/>
<a href="CppInclude.html">#include</a> &lt;<a href="CppCstdlibH.html">cstdlib</a>&gt;<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppRandomCode.html">RandomCode</a>::Create<a href="CppRandomCode.html">RandomCode</a>()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("<a href="CppInclude.html">#include</a> &lt;<a href="CppIostreamH.html">iostream</a>&gt;");<br/>
&nbsp;&nbsp;v.push_back("<a href="CppInclude.html">#include</a> &lt;<a href="CppStringH.html">string</a>&gt;");<br/>
&nbsp;&nbsp;v.push_back("<a href="CppInclude.html">#include</a> &lt;<a href="CppVectorH.html">vector</a>&gt;");<br/>
&nbsp;&nbsp;v.push_back("");<br/>
&nbsp;&nbsp;v.push_back("<b><a href="CppInt.htm">int</a></b> <a href="CppMain<a href="CppHeaderFile.htm">.h</a>tm">main</a>(<b><a href="CppInt.htm">int</a></b> <a href="CppArgc.htm">argc</a>, <b><a href="CppChar.htm">char</a></b>* <a href="CppArgc.htm">argv</a>[])");<br/>
&nbsp;&nbsp;v.push_back("{");<br/>
<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>50; <a href="CppOperatorPlus.htm">+</a>+i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;v.push_back(CreateRandomLine(3+<a href="CppRand.html">std::rand</a>()%10));<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;v.push_back("&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> 0;");<br/>
&nbsp;&nbsp;v.push_back("}");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppRandomCode.html">RandomCode</a>::CreateRandomLine(<b><a href="CppConst.html">const</a></b> <b><a href="CppUnsigned.html">unsigned</a></b> <b><a href="CppInt.htm">int</a></b> length)<br/>
{<br/>
&nbsp;&nbsp;<a href="CppString.html">std::string</a> s <a href="CppOperatorAssign.htm">=</a> "&nbsp;&nbsp;";<br/>
&nbsp;&nbsp;<b><a href="CppFor.htm">for</a></b> (<b><a href="CppUnsigned.html">unsigned</a></b> <b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>length; <a href="CppOperatorPlus.htm">+</a>+i)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a>CreateRandomString();<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;s<a href="CppOperatorPlusAssign.htm">+=</a>";";<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> s;<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppRandomCode.html">RandomCode</a>::CreateRandomString()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppSwitch.html">switch</a></b> (<a href="CppRand.html">std::rand</a>()%70)<br/>
&nbsp;&nbsp;{<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 0: <b><a href="CppReturn.html">return</a></b> "a <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 1: <b><a href="CppReturn.html">return</a></b> "b <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 2: <b><a href="CppReturn.html">return</a></b> "c <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 3: <b><a href="CppReturn.html">return</a></b> "d <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 4: <b><a href="CppReturn.html">return</a></b> "e <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 5: <b><a href="CppReturn.html">return</a></b> "f <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 6: <b><a href="CppReturn.html">return</a></b> "g <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 7: <b><a href="CppReturn.html">return</a></b> "h <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 8: <b><a href="CppReturn.html">return</a></b> "i <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 9: <b><a href="CppReturn.html">return</a></b> "j <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 10: <b><a href="CppReturn.html">return</a></b> "k <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 11: <b><a href="CppReturn.html">return</a></b> "l <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 12: <b><a href="CppReturn.html">return</a></b> "m <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 13: <b><a href="CppReturn.html">return</a></b> "n <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 14: <b><a href="CppReturn.html">return</a></b> "o <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 15: <b><a href="CppReturn.html">return</a></b> "p <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 16: <b><a href="CppReturn.html">return</a></b> "q <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 17: <b><a href="CppReturn.html">return</a></b> "r <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 18: <b><a href="CppReturn.html">return</a></b> "s <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 19: <b><a href="CppReturn.html">return</a></b> "t <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 20: <b><a href="CppReturn.html">return</a></b> "u <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 21: <b><a href="CppReturn.html">return</a></b> "v <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 22: <b><a href="CppReturn.html">return</a></b> "w <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 23: <b><a href="CppReturn.html">return</a></b> "x <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 24: <b><a href="CppReturn.html">return</a></b> "y <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 25: <b><a href="CppReturn.html">return</a></b> "z <a href="CppOperatorAssign.htm">=</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 26: <b><a href="CppReturn.html">return</a></b> "{";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 27: <b><a href="CppReturn.html">return</a></b> "}";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 28: <b><a href="CppReturn.html">return</a></b> "(";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 29: <b><a href="CppReturn.html">return</a></b> ")";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 30: <b><a href="CppReturn.html">return</a></b> "*";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 31: <b><a href="CppReturn.html">return</a></b> "&amp;";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 32: <b><a href="CppReturn.html">return</a></b> "<b><a href="CppInt.htm">int</a></b> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 33: <b><a href="CppReturn.html">return</a></b> "<b><a href="CppConst.html">const</a></b> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 34: <b><a href="CppReturn.html">return</a></b> "<b><a href="CppDouble.html">double</a></b> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 35: <b><a href="CppReturn.html">return</a></b> "<a href="CppString.html">std::string</a> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 36: <b><a href="CppReturn.html">return</a></b> "<a href="CppOperatorIncrement.htm">++</a>";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 37: <b><a href="CppReturn.html">return</a></b> "<a href="CppOperatorDecrement.htm">--</a>";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 38: <b><a href="CppReturn.html">return</a></b> "+";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 39: <b><a href="CppReturn.html">return</a></b> "-";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 40: <b><a href="CppReturn.html">return</a></b> "/";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 41: <b><a href="CppReturn.html">return</a></b> "*";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 42: <b><a href="CppReturn.html">return</a></b> "<b><a href="CppStatic_cast.html">static_cast</a></b>&lt;<b><a href="CppInt.htm">int</a></b>&gt;(";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 43: <b><a href="CppReturn.html">return</a></b> "<b><a href="CppStatic_cast.html">static_cast</a></b>&lt;<b><a href="CppDouble.html">double</a></b>&gt;(";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 44: <b><a href="CppReturn.html">return</a></b> "<b><a href="CppClass.html">class</a></b> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 45: <b><a href="CppReturn.html">return</a></b> "<b><a href="CppStruct.html">struct</a></b> ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 46: <b><a href="CppReturn.html">return</a></b> "<a href="CppVector.html">std::vector</a>&lt;<b><a href="CppDouble.html">double</a></b>&gt; ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 47: <b><a href="CppReturn.html">return</a></b> "<a href="CppVector.html">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 48: <b><a href="CppReturn.html">return</a></b> "<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 49: <b><a href="CppReturn.html">return</a></b> "<a href="CppVector.html">std::vector</a>&lt;<a href="CppVector.html">std::vector</a>&lt;<b><a href="CppDouble.html">double</a></b>&gt; &gt;";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 50: <b><a href="CppReturn.html">return</a></b> "<a href="CppVector.html">std::vector</a>&lt;<a href="CppVector.html">std::vector</a>&lt;<b><a href="CppInt.htm">int</a></b>&gt; &gt;";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 51: <b><a href="CppReturn.html">return</a></b> "<a href="CppVector.html">std::vector</a>&lt;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; &gt;";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 52: <b><a href="CppReturn.html">return</a></b> "<b><a href="CppFor.htm">for</a></b>(<b><a href="CppInt.htm">int</a></b> i=0; i<a href="CppOperatorNotEqual.htm">!=</a>j; <a href="CppOperatorPlus.htm">+</a>+i) { ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 53: <b><a href="CppReturn.html">return</a></b> "<b><a href="CppWhile.html">while</a></b>(1) { ";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 55: <b><a href="CppReturn.html">return</a></b> ")";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 56: <b><a href="CppReturn.html">return</a></b> ")";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 57: <b><a href="CppReturn.html">return</a></b> ")";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 58: <b><a href="CppReturn.html">return</a></b> "}";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 59: <b><a href="CppReturn.html">return</a></b> "}";<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="CppCase.htm">case</a></b> 60: <b><a href="CppReturn.html">return</a></b> "}";<br/>
&nbsp;&nbsp;}<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> " ";<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppRandomCode.html">RandomCode</a>::GetAbout()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("Random Code, generates random <a href="Cpp.htm">C++</a> code");<br/>
&nbsp;&nbsp;v.push_back("<a href="CppVersion.html">Version</a> " <a href="CppOperatorPlus.htm">+</a> Get<a href="CppVersion.html">Version</a>());<br/>
&nbsp;&nbsp;v.push_back("Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek");<br/>
&nbsp;&nbsp;v.push_back("");<br/>
&nbsp;&nbsp;v.push_back("Programmed by Richel Bilderbeek");<br/>
&nbsp;&nbsp;v.push_back("on the 23rd of December 2010");<br/>
&nbsp;&nbsp;v.push_back("");<br/>
&nbsp;&nbsp;v.push_back("From http://www.richelbilderbeek.nl/<a href="ToolRandomCode.html">ToolRandomCode</a>.html");<br/>
&nbsp;&nbsp;v.push_back("Licenced under GPL 3.0");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppRandomCode.html">RandomCode</a>::GetLicence()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("Random Code, generates random <a href="Cpp.htm">C++</a> code");<br/>
&nbsp;&nbsp;v.push_back("Copyright (C) 2007&nbsp;&nbsp;Richel Bilderbeek");<br/>
&nbsp;&nbsp;v.push_back("");<br/>
&nbsp;&nbsp;v.push_back("This program is free software: you can redistribute it and/or modify");<br/>
&nbsp;&nbsp;v.push_back("it under the terms of the GNU General Public License as published by");<br/>
&nbsp;&nbsp;v.push_back("the Free Software Foundation, either version 3 of the License, or");<br/>
&nbsp;&nbsp;v.push_back("(at your option) any later version.");<br/>
&nbsp;&nbsp;v.push_back("");<br/>
&nbsp;&nbsp;v.push_back("This program is distributed in the hope that it will be useful,");<br/>
&nbsp;&nbsp;v.push_back("but WITHOUT ANY WARRANTY; without even the implied warranty of");<br/>
&nbsp;&nbsp;v.push_back("MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp;&nbsp;See the");<br/>
&nbsp;&nbsp;v.push_back("GNU General Public License for more details.");<br/>
&nbsp;&nbsp;v.push_back("\n");<br/>
&nbsp;&nbsp;v.push_back("You should have received a copy of the GNU General Public License");<br/>
&nbsp;&nbsp;v.push_back("along with this program.&nbsp;&nbsp;If not, see &lt;http://www.gnu.org/licenses/&gt;.");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppString.html">std::string</a> <a href="CppRibi.htm">ribi</a>::<a href="CppRandomCode.html">RandomCode</a>::Get<a href="CppVersion.html">Version</a>()<br/>
{<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> "3.0";<br/>
}<br/>
<br/>
<b><a href="CppConst.html">const</a></b> <a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; <a href="CppRibi.htm">ribi</a>::<a href="CppRandomCode.html">RandomCode</a>::Get<a href="CppVersion.html">Version</a>History()<br/>
{<br/>
&nbsp;&nbsp;<a href="CppVector.html">std::vector</a>&lt;<a href="CppString.html">std::string</a>&gt; v;<br/>
&nbsp;&nbsp;v.push_back("YYYY-MM-DD: <a href="CppVersion.html">Version</a> X.Y: [description]");<br/>
&nbsp;&nbsp;v.push_back("2007-10-19: <a href="CppVersion.html">Version</a> 1.0: initial <a href="CppVersion.html">version</a>");<br/>
&nbsp;&nbsp;v.push_back("2010-12-23: <a href="CppVersion.html">Version</a> 2.0: seperated code generation from user <a href="CppInterface.html">interface</a>");<br/>
&nbsp;&nbsp;v.push_back("2011-01-07: <a href="CppVersion.html">Version</a> 3.0: <a href="CppRandomCode.html">RandomCode</a> can be used as desktop and <a href="CppWebApplication.html">web application</a>");<br/>
&nbsp;&nbsp;<b><a href="CppReturn.html">return</a></b> v;<br/>
}<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
