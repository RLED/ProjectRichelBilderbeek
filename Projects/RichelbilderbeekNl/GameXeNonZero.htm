<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>GameXeNonZero</title>
  <meta name="description" content="C++ GameXeNonZero"/>
  <meta name="keywords" content="C++ GameXeNonZero code snippet"/>
  <link rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/>
</head>
<!-- End of head, start of body -->
<body>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<!-- Page header -->
<h1>(<a href="Cpp.htm">C++</a>) <a href="GameXeNonZero.htm">GameXeNonZero</a></h1>
<p>&nbsp;</p>
<!-- No CodeToHtmlInfo about this class with page name GameXeNonZero-->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Technical facts</h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>GameXeNonZero.htm</h2>
<p>&nbsp;</p>
<!-- start of code -->
<table summary="GameXeNonZero.htm" border = "1"><tr><td><code>
&lt;!DOCTYPE html PUBLIC "-<a href="CppComment.htm">//</a>W3C<a href="CppComment.htm">//</a>DTD XHTML 1.0 Strict<a href="CppComment.htm">//</a>EN"<br/>
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;<br/>
&lt;html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"&gt;<br/>
&lt;head&gt;<br/>
&nbsp;&nbsp;&lt;meta http-equiv="Content-Type" content="text/html;<b><a href="CppChar.htm">char</a></b>set=utf-8"/&gt;<br/>
&nbsp;&nbsp;&lt;title&gt;GameXeNonZero&lt;/title&gt;<br/>
&nbsp;&nbsp;&lt;meta name="description" content="<a href="Cpp.htm">C++</a> GameXeNonZero"/&gt;<br/>
&nbsp;&nbsp;&lt;meta name="keywords" content="<a href="Cpp.htm">C++</a> GameXeNonZero <a href="CppCodeSnippets.htm">code snippet</a>"/&gt;<br/>
&nbsp;&nbsp;&lt;<a href="CppLink.htm">link</a> rel="stylesheet" href="Richelbilderbeek.css" type="text/css"/&gt;<br/>
&lt;/head&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> End of head, start of body <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;body&gt;<br/>
&lt;p&gt;&lt;a href="index.htm"&gt;Go back to Richel Bilderbeek's homepage&lt;/a&gt;.&lt;/p&gt;<br/>
&lt;p&gt;&lt;a href="Cpp.htm"&gt;Go back to Richel Bilderbeek's <a href="Cpp.htm">C++</a> page&lt;/a&gt;.&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> Page header <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;h1&gt;(&lt;a href="Cpp.htm"&gt;<a href="Cpp.htm">C++</a>&lt;/a&gt;) &lt;a href="GameXeNonZero.htm"&gt;GameXeNonZero&lt;/a&gt;&lt;/h1&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> No <a href="ToolCodeToHtml.htm">CodeToHtml</a>Info <a href="CppAbout.htm">about</a> <b><a href="CppThis.htm">this</a></b> <b><a href="CppClass.htm">class</a></b> with page name GameXeNonZero<a href="CppOperatorDecrement.htm">--</a>&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;Technical facts&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&lt;a href="Cpp<a href="CppApplication.htm">Application</a>.htm"&gt;<a href="CppApplication.htm">Application</a> type(s)&lt;/a&gt;&lt;/p&gt;<br/>
&lt;ul&gt;<br/>
&nbsp;&nbsp;&lt;li&gt;&lt;img src="PicDesktop.png" alt="Desktop"/&gt; &lt;a href="CppDesktop<a href="CppApplication.htm">Application</a>.htm"&gt;Desktop <a href="CppApplication.htm">application</a>&lt;/a&gt;&lt;/li&gt;<br/>
&lt;/ul&gt;<br/>
&lt;p&gt;&lt;a href="CppOs.htm"&gt;Operating system(s) or programming environment(s)&lt;/a&gt;&lt;/p&gt;<br/>
&lt;ul&gt;<br/>
&nbsp;&nbsp;&lt;li&gt;&lt;img src="PicLubuntu.png" alt="Lubuntu"/&gt; &lt;a href="CppLubuntu.htm"&gt;Lubuntu&lt;/a&gt; 13.04 (raring)&lt;/li&gt;<br/>
&lt;/ul&gt;<br/>
&lt;p&gt;&lt;a href="CppIde.htm"&gt;IDE(s)&lt;/a&gt;:&lt;/p&gt;<br/>
&lt;ul&gt;<br/>
&nbsp;&nbsp;&lt;li&gt;&lt;img src="Pic<a href="CppQtCreator.htm">QtCreator</a>.png" alt="<a href="CppQtCreator.htm">Qt Creator</a>"/&gt; &lt;a href="Cpp<a href="CppQtCreator.htm">QtCreator</a>.htm"&gt;<a href="CppQtCreator.htm">Qt Creator</a>&lt;/a&gt; 2.7.0&lt;/li&gt;<br/>
&lt;/ul&gt;<br/>
&lt;p&gt;&lt;a href="Cpp<a href="CppQt.htm">Qt</a>ProjectType.htm"&gt;Project type&lt;/a&gt;:&lt;/p&gt;<br/>
&lt;ul&gt;<br/>
&nbsp;&nbsp;&lt;li&gt;&lt;img src="PicConsole.png" alt="console"/&gt; &lt;a href="CppConsole<a href="CppApplication.htm">Application</a>.htm"&gt;Console <a href="CppApplication.htm">application</a>&lt;/a&gt;&lt;/li&gt;<br/>
&nbsp;&nbsp;&lt;li&gt;&lt;img src="PicGui.png" alt="GUI"/&gt; &lt;a href="CppGui<a href="CppApplication.htm">Application</a>.htm"&gt;GUI <a href="CppApplication.htm">application</a>&lt;/a&gt;&lt;/li&gt;<br/>
&lt;/ul&gt;<br/>
&lt;p&gt;&lt;a href="CppStandard.htm"&gt;<a href="Cpp.htm">C++</a> standard&lt;/a&gt;:&lt;/p&gt;<br/>
&lt;ul&gt;<br/>
&nbsp;&nbsp;&lt;li&gt;&lt;img src="PicCpp11.png" alt="<a href="Cpp11.htm">C++11</a>"/&gt; &lt;a href="Cpp11.htm"&gt;<a href="Cpp11.htm">C++11</a>&lt;/a&gt;&lt;/li&gt;<br/>
&lt;/ul&gt;<br/>
&lt;p&gt;&lt;a href="Cpp<a href="CppCompiler.htm">Compiler</a>.htm"&gt;<a href="CppCompiler.htm">Compiler</a>(s)&lt;/a&gt;:&lt;/p&gt;<br/>
&lt;ul&gt;<br/>
&nbsp;&nbsp;&lt;li&gt;&lt;a href="CppGpp.htm"&gt;G<a href="CppOperatorIncrement.htm">++</a>&lt;/a&gt; 4.7.3&lt;/li&gt;<br/>
&lt;/ul&gt;<br/>
&lt;p&gt;&lt;a href="Cpp<a href="CppLibrary.htm">Library</a>.htm"&gt;<a href="CppLibrary.htm">Libraries</a>&lt;/a&gt; used:&lt;/p&gt;<br/>
&lt;ul&gt;<br/>
&nbsp;&nbsp;&lt;li&gt;&lt;img src="Pic<a href="CppQt.htm">Qt</a>.png" alt="<a href="CppQt.htm">Qt</a>"/&gt; &lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;: <a href="CppVersion.htm">version</a> 5.0.1 (32 bit)&lt;/li&gt;<br/>
&nbsp;&nbsp;&lt;li&gt;&lt;img src="PicStl.png" alt="<a href="CppStl.htm">STL</a>"/&gt; &lt;a href="CppStl.htm"&gt;<a href="CppStl.htm">STL</a>&lt;/a&gt;: GNU ISO <a href="Cpp.htm">C++</a> <a href="CppLibrary.htm">Library</a>, <a href="CppVersion.htm">version</a> 4.7.3&lt;/li&gt;<br/>
&lt;/ul&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;&lt;a href="Cpp<a href="CppQt.htm">Qt</a>ProjectFile.htm"&gt;<a href="CppQt.htm">Qt</a> project file&lt;/a&gt;: GameXeNonZeroConsole.pro&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> start of code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;table summary="GameXeNonZeroConsole.pro" border <a href="CppOperatorAssign.htm">=</a> "1"&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;<br/>
QT <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> core&lt;br/&gt;<br/>
QT <a href="CppOperatorMinus.htm">-</a><a href="CppOperatorAssign.htm">=</a> gui&lt;br/&gt;<br/>
TEMPLATE <a href="CppOperatorAssign.htm">=</a> app&lt;br/&gt;<br/>
&lt;a href="Cpp<a href="CppQMAKE_CXXFLAGS.htm">QMAKE_CXXFLAGS</a>.htm"&gt;<a href="CppQMAKE_CXXFLAGS.htm">QMAKE_CXXFLAGS</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a><a href="CppStd.htm">std</a>=&lt;a href="Cpp11.htm"&gt;<a href="Cpp11.htm">c++11</a>&lt;/a&gt; &lt;a href="CppWall.htm"&gt;<a href="CppWall.htm">-Wall</a>&lt;/a&gt; &lt;a href="CppWextra.htm"&gt;<a href="CppWextra.htm">-Wextra</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
unix {&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppQMAKE_CXXFLAGS.htm">QMAKE_CXXFLAGS</a>.htm"&gt;<a href="CppQMAKE_CXXFLAGS.htm">QMAKE_CXXFLAGS</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> &lt;a href="CppWerror.htm"&gt;<a href="CppWerror.htm">-Werror</a>&lt;/a&gt;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="Cpp<a href="CppINCLUDEPATH.htm">INCLUDEPATH</a>.htm"&gt;<a href="CppINCLUDEPATH.htm">INCLUDEPATH</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppAbout.htm">CppAbout</a>.htm"&gt;<a href="CppAbout.htm">CppAbout</a>&lt;/a&gt; \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppTrace.htm">CppTrace</a>.htm"&gt;<a href="CppTrace.htm">CppTrace</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="Cpp<a href="CppSOURCES.htm">SOURCES</a>.htm"&gt;<a href="CppSOURCES.htm">SOURCES</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppAbout.htm">CppAbout</a>.htm"&gt;<a href="CppAbout.htm">CppAbout</a>&lt;/a&gt;/&lt;a href="<a href="CppAbout.htm">CppAbout</a>.htm"&gt;<a href="CppAbout.htm">about</a>&lt;/a&gt;.cpp \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppMain.htm"&gt;<a href="CppMain.htm">main</a>&lt;/a&gt;.cpp \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gamexenonzerosprite.cpp \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gamexenonzerodialog.cpp \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gamexenonzeroarea.cpp&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="Cpp<a href="CppHEADERS.htm">HEADERS</a>.htm"&gt;<a href="CppHEADERS.htm">HEADERS</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppAbout.htm">CppAbout</a>.htm"&gt;<a href="CppAbout.htm">CppAbout</a>&lt;/a&gt;/&lt;a href="<a href="CppAbout.htm">CppAbout</a>.htm"&gt;<a href="CppAbout.htm">about</a>&lt;/a&gt;.h \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gamexenonzerosprite.h \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gamexenonzerodialog.h \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gamexenonzeroarea.h&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
# Type of <a href="CppCompile.htm">compile</a>&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
CONFIG(<a href="CppDebug.htm">debug</a>, <a href="CppDebug.htm">debug</a>|release) {&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;message(<a href="CppDebug.htm">Debug</a> mode)&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
CONFIG(release, <a href="CppDebug.htm">debug</a>|release) {&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;message(Release mode)&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;#Remove all &lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;s and &lt;a href="Cpp<a href="CppTRACE.htm">TRACE</a>.htm"&gt;<a href="CppTRACE.htm">TRACE</a>&lt;/a&gt;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;DEFINES <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> <a href="CppNDEBUG.htm">NDEBUG</a> N&lt;a href="Cpp<a href="CppTRACE.htm">TRACE</a>.htm"&gt;<a href="CppTRACE.htm">TRACE</a>&lt;/a&gt;_BILDERBIKKEL&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
# Platform specific&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
# <a href="CppCompiler.htm">Compiler</a> flags&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
&lt;a href="Cpp<a href="CppQMAKE_CXXFLAGS.htm">QMAKE_CXXFLAGS</a>.htm"&gt;<a href="CppQMAKE_CXXFLAGS.htm">QMAKE_CXXFLAGS</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a><a href="CppStd.htm">std</a>=&lt;a href="Cpp11.htm"&gt;<a href="Cpp11.htm">c++11</a>&lt;/a&gt; &lt;a href="CppWall.htm"&gt;<a href="CppWall.htm">-Wall</a>&lt;/a&gt; &lt;a href="CppWextra.htm"&gt;<a href="CppWextra.htm">-Wextra</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
unix {&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;message(Unix)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;#Strict error handling&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppQMAKE_CXXFLAGS.htm">QMAKE_CXXFLAGS</a>.htm"&gt;<a href="CppQMAKE_CXXFLAGS.htm">QMAKE_CXXFLAGS</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> &lt;a href="CppWerror.htm"&gt;<a href="CppWerror.htm">-Werror</a>&lt;/a&gt;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
# <a href="CppBoost.htm">Boost</a>&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
unix {&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;message(Unix: <a href="CppBoost.htm">Boost</a> already in &lt;a href="Cpp<a href="CppINCLUDEPATH.htm">INCLUDEPATH</a>.htm"&gt;<a href="CppINCLUDEPATH.htm">INCLUDEPATH</a>&lt;/a&gt;)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;#Don't <a href="CppLink.htm">link</a> to <a href="CppBoost.htm">Boost</a> when crosscompiling is desired&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
win32 {&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;message(<a href="CppWindows.htm">Windows</a>: add <a href="CppBoost.htm">Boost</a> to &lt;a href="Cpp<a href="CppINCLUDEPATH.htm">INCLUDEPATH</a>.htm"&gt;<a href="CppINCLUDEPATH.htm">INCLUDEPATH</a>&lt;/a&gt;)&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppINCLUDEPATH.htm">INCLUDEPATH</a>.htm"&gt;<a href="CppINCLUDEPATH.htm">INCLUDEPATH</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="Cpp<a href="CppLibrary.htm">Library</a>.htm"&gt;<a href="CppLibrary.htm">Libraries</a>&lt;/a&gt;/<a href="CppBoost.htm">boost</a>_1_54_0&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;#Don't <a href="CppLink.htm">link</a> to <a href="CppBoost.htm">Boost</a> when crosscompiling is desired&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
OTHER_FILES <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GameXeNonZero.txt&lt;br/&gt;<br/>
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> end of the code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;&lt;a href="Cpp<a href="CppQt.htm">Qt</a>ProjectFile.htm"&gt;<a href="CppQt.htm">Qt</a> project file&lt;/a&gt;: GameXeNonZeroDesktop.pro&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> start of code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;table summary="GameXeNonZeroDesktop.pro" border <a href="CppOperatorAssign.htm">=</a> "1"&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;<br/>
QT&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> core gui&lt;br/&gt;<br/>
greaterThan(QT_MAJOR_VERSION, 4): QT <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> &lt;a href="<a href="CppWidget.htm">CppWidget</a>.htm"&gt;<a href="CppWidget.htm">widget</a>&lt;/a&gt;s&lt;br/&gt;<br/>
TEMPLATE <a href="CppOperatorAssign.htm">=</a> app&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="Cpp<a href="CppINCLUDEPATH.htm">INCLUDEPATH</a>.htm"&gt;<a href="CppINCLUDEPATH.htm">INCLUDEPATH</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppAbout.htm">CppAbout</a>.htm"&gt;<a href="CppAbout.htm">CppAbout</a>&lt;/a&gt; \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>.htm"&gt;<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>&lt;/a&gt; \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppTrace.htm">CppTrace</a>.htm"&gt;<a href="CppTrace.htm">CppTrace</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="Cpp<a href="CppSOURCES.htm">SOURCES</a>.htm"&gt;<a href="CppSOURCES.htm">SOURCES</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppAbout.htm">CppAbout</a>.htm"&gt;<a href="CppAbout.htm">CppAbout</a>&lt;/a&gt;/&lt;a href="<a href="CppAbout.htm">CppAbout</a>.htm"&gt;<a href="CppAbout.htm">about</a>&lt;/a&gt;.cpp \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>.htm"&gt;<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>&lt;/a&gt;/&lt;a href="<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>.htm"&gt;<a href="CppQtAboutDialog.htm">qtaboutdialog</a>&lt;/a&gt;.cpp \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>.htm"&gt;<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>&lt;/a&gt;/&lt;a href="<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>.htm"&gt;<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>&lt;/a&gt;.cpp \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gamexenonzeroarea.cpp \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gamexenonzerodialog.cpp \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gamexenonzerosprite.cpp \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;qt&lt;a href="CppMain.htm"&gt;<a href="CppMain.htm">main</a>&lt;/a&gt;.cpp \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;qtxenonzero&lt;a href="CppMain.htm"&gt;<a href="CppMain.htm">main</a>&lt;/a&gt;dialog.cpp&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="Cpp<a href="CppHEADERS.htm">HEADERS</a>.htm"&gt;<a href="CppHEADERS.htm">HEADERS</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppAbout.htm">CppAbout</a>.htm"&gt;<a href="CppAbout.htm">CppAbout</a>&lt;/a&gt;/&lt;a href="<a href="CppAbout.htm">CppAbout</a>.htm"&gt;<a href="CppAbout.htm">about</a>&lt;/a&gt;.h \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>.htm"&gt;<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>&lt;/a&gt;/&lt;a href="<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>.htm"&gt;<a href="CppQtAboutDialog.htm">qtaboutdialog</a>&lt;/a&gt;.h \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>.htm"&gt;<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>&lt;/a&gt;/&lt;a href="<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>.htm"&gt;<a href="CppQtHideAndShowDialog.htm">qthideandshowdialog</a>&lt;/a&gt;.h \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppTrace.htm">CppTrace</a>.htm"&gt;<a href="CppTrace.htm">CppTrace</a>&lt;/a&gt;/&lt;a href="<a href="CppTrace.htm">CppTrace</a>.htm"&gt;<a href="CppTrace.htm">trace</a>&lt;/a&gt;.h \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gamexenonzeroarea.h \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gamexenonzerodialog.h \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gamexenonzerosprite.h \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;qtxenonzero&lt;a href="CppMain.htm"&gt;<a href="CppMain.htm">main</a>&lt;/a&gt;dialog.h \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gamexenonzerofwd.h&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
OTHER_FILES <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>.htm"&gt;<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>&lt;/a&gt;/Licence.txt \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>.htm"&gt;<a href="CppQtHideAndShowDialog.htm">CppQtHideAndShowDialog</a>&lt;/a&gt;/Licence.txt \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppTrace.htm">CppTrace</a>.htm"&gt;<a href="CppTrace.htm">CppTrace</a>&lt;/a&gt;/Licence.txt \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GameXeNonZero.txt&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="Cpp<a href="CppFORMS.htm">FORMS</a>.htm"&gt;<a href="CppFORMS.htm">FORMS</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="CppClass.htm"&gt;<a href="CppClass.htm">Classes</a>&lt;/a&gt;/&lt;a href="<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>.htm"&gt;<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>&lt;/a&gt;/&lt;a href="<a href="CppQtAboutDialog.htm">CppQtAboutDialog</a>.htm"&gt;<a href="CppQtAboutDialog.htm">qtaboutdialog</a>&lt;/a&gt;.ui \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;qtxenonzero&lt;a href="CppMain.htm"&gt;<a href="CppMain.htm">main</a>&lt;/a&gt;dialog.ui&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="Cpp<a href="CppRESOURCES.htm">RESOURCES</a>.htm"&gt;<a href="CppRESOURCES.htm">RESOURCES</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> \&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
# Type of <a href="CppCompile.htm">compile</a>&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
CONFIG(<a href="CppDebug.htm">debug</a>, <a href="CppDebug.htm">debug</a>|release) {&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;message(<a href="CppDebug.htm">Debug</a> mode)&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
CONFIG(release, <a href="CppDebug.htm">debug</a>|release) {&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;message(Release mode)&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;#Remove all &lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;s and &lt;a href="Cpp<a href="CppTRACE.htm">TRACE</a>.htm"&gt;<a href="CppTRACE.htm">TRACE</a>&lt;/a&gt;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;DEFINES <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> <a href="CppNDEBUG.htm">NDEBUG</a> N&lt;a href="Cpp<a href="CppTRACE.htm">TRACE</a>.htm"&gt;<a href="CppTRACE.htm">TRACE</a>&lt;/a&gt;_BILDERBIKKEL&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
# Platform specific&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
# <a href="CppCompiler.htm">Compiler</a> flags&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
&lt;a href="Cpp<a href="CppQMAKE_CXXFLAGS.htm">QMAKE_CXXFLAGS</a>.htm"&gt;<a href="CppQMAKE_CXXFLAGS.htm">QMAKE_CXXFLAGS</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> <a href="CppOperatorMinus.htm">-</a><a href="CppStd.htm">std</a>=&lt;a href="Cpp11.htm"&gt;<a href="Cpp11.htm">c++11</a>&lt;/a&gt; &lt;a href="CppWall.htm"&gt;<a href="CppWall.htm">-Wall</a>&lt;/a&gt; &lt;a href="CppWextra.htm"&gt;<a href="CppWextra.htm">-Wextra</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
unix {&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppQMAKE_CXXFLAGS.htm">QMAKE_CXXFLAGS</a>.htm"&gt;<a href="CppQMAKE_CXXFLAGS.htm">QMAKE_CXXFLAGS</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> &lt;a href="CppWerror.htm"&gt;<a href="CppWerror.htm">-Werror</a>&lt;/a&gt;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
# <a href="CppBoost.htm">Boost</a>&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
#&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
unix {&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;message(Unix: <a href="CppBoost.htm">Boost</a> already in include path)&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
win32 {&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;message(<a href="CppWindows.htm">Windows</a>: add <a href="CppBoost.htm">Boost</a> to include path)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppINCLUDEPATH.htm">INCLUDEPATH</a>.htm"&gt;<a href="CppINCLUDEPATH.htm">INCLUDEPATH</a>&lt;/a&gt; <a href="CppOperatorPlus.htm">+</a><a href="CppOperatorAssign.htm">=</a> \&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;../../&lt;a href="Cpp<a href="CppLibrary.htm">Library</a>.htm"&gt;<a href="CppLibrary.htm">Libraries</a>&lt;/a&gt;/<a href="CppBoost.htm">boost</a>_1_54_0&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> end of the code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;gamexenonzeroarea.h&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> start of code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;table summary="gamexenonzeroarea.h" border <a href="CppOperatorAssign.htm">=</a> "1"&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;<br/>
&lt;a href="CppIfndef.htm"&gt;<a href="CppIfndef.htm">#ifndef</a>&lt;/a&gt; GAMEXENONZEROAREA_H&lt;br/&gt;<br/>
&lt;a href="CppDefine.htm"&gt;<a href="CppDefine.htm">#define</a>&lt;/a&gt; GAMEXENONZEROAREA_H&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppStringH.htm"&gt;string&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppVectorH.htm"&gt;vector&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>.htm"&gt;<a href="CppBoost.htm">boost</a>&lt;/a&gt;/checked_delete.hpp&amp;gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; xnz {&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; Area&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppTypedef.htm"&gt;<b><a href="CppTypedef.htm">typedef</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt;&amp;gt; &lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppTypedef.htm"&gt;<b><a href="CppTypedef.htm">typedef</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt; Graphic;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppTypedef.htm"&gt;<b><a href="CppTypedef.htm">typedef</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt;::const_iterator Const&lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>.htm"&gt;<a href="CppIterator.htm">Iterator</a>&lt;/a&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppTypedef.htm"&gt;<b><a href="CppTypedef.htm">typedef</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt;::&lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>.htm"&gt;<a href="CppIterator.htm">iterator</a>&lt;/a&gt; &lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>.htm"&gt;<a href="CppIterator.htm">Iterator</a>&lt;/a&gt;;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Area(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; width,&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; height);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; DrawEdge();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; DrawLife(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="Cpp<a href="CppDouble.htm">Double</a>.htm"&gt;<b><a href="CppDouble.htm">double</a></b>&lt;/a&gt;&lt;/b&gt; fraction);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Draw(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt;&amp;amp; graphic);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;/Get the area&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt;&amp;amp; GetArea() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; mArea; }&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;/Get the area's height in &lt;a href="CppChar.htm"&gt;<a href="CppChar.htm">character</a>&lt;/a&gt;s&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; GetHeight() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppStatic_cast.htm"&gt;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;/a&gt;&lt;/b&gt;&amp;lt;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt;(mArea.size()); }&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;/Get the area's width in &lt;a href="CppChar.htm"&gt;<a href="CppChar.htm">character</a>&lt;/a&gt;s&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; GetWidth() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; mArea.empty() ? 0 : &lt;b&gt;&lt;a href="CppStatic_cast.htm"&gt;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;/a&gt;&lt;/b&gt;&amp;lt;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt;(mArea[0].size()); }&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppPrivate.htm"&gt;<b><a href="CppPrivate.htm">private</a></b>&lt;/a&gt;&lt;/b&gt;:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;~Area() {}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFriend.htm"&gt;<b><a href="CppFriend.htm">friend</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppChecked_delete.htm"&gt;<a href="CppChecked_delete.htm">boost::checked_delete</a>&lt;/a&gt;&amp;lt;&amp;gt;(Area* x);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt;&amp;gt; mArea;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppStatic.htm"&gt;<b><a href="CppStatic.htm">static</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; GetInRange(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; min, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; max);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
};&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppOstream.htm"&gt;<a href="CppOstream.htm">std::ostream</a>&lt;/a&gt;&amp;amp; &lt;b&gt;&lt;a href="CppOperatorStreamOut.htm"&gt;<b><a href="CppOperator.htm">operator</a></b>&amp;lt;&amp;lt;&lt;/a&gt;&lt;/b&gt;(&lt;a href="CppOstream.htm"&gt;<a href="CppOstream.htm">std::ostream</a>&lt;/a&gt;&amp;amp; os, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Area&amp;amp; a);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
} &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;~&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; xnz&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppEndif.htm"&gt;<a href="CppEndif.htm">#endif</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> end of the code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;gamexenonzeroarea.cpp&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> start of code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;table summary="gamexenonzeroarea.cpp" border <a href="CppOperatorAssign.htm">=</a> "1"&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; "gamexenonzeroarea.h"&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppC<a href="CppAssert.htm">assert</a>H.htm"&gt;c<a href="CppAssert.htm">assert</a>&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppIostreamH.htm"&gt;iostream&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>H.htm"&gt;<a href="CppIterator.htm">iterator</a>&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; "gamexenonzerosprite.h"&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; xnz {&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
Area::Area(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; width,&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; height)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;: mArea(height,&lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt;(width,' '))&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(width &amp;gt; 0);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(height &amp;gt; 0);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;DrawEdge();&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Area::DrawEdge()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;Create an initial edged screen&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Sprite::mMaxx &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetWidth() &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt; 1;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Sprite::mMaxy &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetHeight() &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt; 1;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt; edge &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; &lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt;(GetWidth(),'*');&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt; nonEdge &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "*" &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; &lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt;(GetWidth()-2,' ') &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; "*";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mArea[0] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; edge;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFor.htm"&gt;<b><a href="CppFor.htm">for</a></b>&lt;/a&gt;&lt;/b&gt; (&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; i=0; i&lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt;GetHeight()-2; &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;+i) mArea[1+i] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; nonEdge;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mArea[GetHeight() &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt; 1] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; edge;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Area::DrawLife(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="Cpp<a href="CppDouble.htm">Double</a>.htm"&gt;<b><a href="CppDouble.htm">double</a></b>&lt;/a&gt;&lt;/b&gt; fraction)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetWidth() &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt; 2 &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt; 3;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 2;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; height &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetHeight() &lt;a href="CppOperatorDivide.htm"&gt;/&lt;/a&gt; 2;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;The edges&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt; s &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "[-]";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppCopy.htm"&gt;<a href="CppCopy.htm">std::copy</a>&lt;/a&gt;( s.begin(), s.end(), mArea[y].begin() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; x);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppCopy.htm"&gt;<a href="CppCopy.htm">std::copy</a>&lt;/a&gt;( s.begin(), s.end(), mArea[y+height].begin() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; x);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFor.htm"&gt;<b><a href="CppFor.htm">for</a></b>&lt;/a&gt;&lt;/b&gt; (&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; i=1; i&lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt;height; &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;+i) &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;Not the edges&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="Cpp<a href="CppDouble.htm">Double</a>.htm"&gt;<b><a href="CppDouble.htm">double</a></b>&lt;/a&gt;&lt;/b&gt; f&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 1.0 &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt; &lt;b&gt;&lt;a href="CppStatic_cast.htm"&gt;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;/a&gt;&lt;/b&gt;&amp;lt;&lt;b&gt;&lt;a href="Cpp<a href="CppDouble.htm">Double</a>.htm"&gt;<b><a href="CppDouble.htm">double</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt;(i)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorDivide.htm"&gt;/&lt;/a&gt; &lt;b&gt;&lt;a href="CppStatic_cast.htm"&gt;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;/a&gt;&lt;/b&gt;&amp;lt;&lt;b&gt;&lt;a href="Cpp<a href="CppDouble.htm">Double</a>.htm"&gt;<b><a href="CppDouble.htm">double</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt;(height);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt; s &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; (f &amp;gt; fraction ? "[ ]" : "[*]");&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppCopy.htm"&gt;<a href="CppCopy.htm">std::copy</a>&lt;/a&gt;( s.begin(), s.end(), mArea[y+i].begin() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; x);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Area::Draw(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt;&amp;amp; g)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; graphicHeight &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; g.size();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (graphicHeight &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 0) &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; graphicWidth &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; g[0].size();&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; areaWidth &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetWidth();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; areaHeight &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetHeight();&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFor.htm"&gt;<b><a href="CppFor.htm">for</a></b>&lt;/a&gt;&lt;/b&gt; (&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; j=0; j&lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt;graphicHeight; &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;+j)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (y+j&amp;lt;0 &lt;a href="CppOperatorLogicalOr.htm"&gt;<a href="CppOperatorLogicalOr.htm">||</a>&lt;/a&gt; y+j&lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt;areaHeight) &lt;b&gt;&lt;a href="CppContinue.htm"&gt;<b><a href="CppContinue.htm">continue</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFor.htm"&gt;<b><a href="CppFor.htm">for</a></b>&lt;/a&gt;&lt;/b&gt; (&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; i=0; i&lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt;graphicWidth; &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;+i)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (x+i &amp;lt; 0 &lt;a href="CppOperatorLogicalOr.htm"&gt;<a href="CppOperatorLogicalOr.htm">||</a>&lt;/a&gt; x+i&lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt;areaWidth) &lt;b&gt;&lt;a href="CppContinue.htm"&gt;<b><a href="CppContinue.htm">continue</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(y+j&lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt;0);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(y+j &amp;lt; &lt;b&gt;&lt;a href="CppStatic_cast.htm"&gt;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;/a&gt;&lt;/b&gt;&amp;lt;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt;(mArea.size() ) );&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(x+i&lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt;0);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(x+i &amp;lt; &lt;b&gt;&lt;a href="CppStatic_cast.htm"&gt;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;/a&gt;&lt;/b&gt;&amp;lt;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt;(mArea[0].size() ) );&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mArea[y+j][x+i] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; g[j][i];&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorDivide.htm"&gt;/&lt;/a&gt;*&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>.htm"&gt;<a href="CppIterator.htm">Iterator</a>&lt;/a&gt; begin &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; &amp;amp;mArea[ GetInRange(x,0,mArea.size()) ];&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>.htm"&gt;<a href="CppIterator.htm">Iterator</a>&lt;/a&gt; end&amp;nbsp;&amp;nbsp; &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; &amp;amp;mArea[ GetInRange(x,0,mArea.size()) ];&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(begin &lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt; mArea.begin() );&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(begin &lt;a href="CppOperatorLessEqual.htm"&gt;&amp;lt;=&lt;/a&gt; mArea.end() );&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(end &lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt; mArea.begin() );&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(end &lt;a href="CppOperatorLessEqual.htm"&gt;&amp;lt;=&lt;/a&gt; mArea.end() );&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppFor_each.htm"&gt;<a href="CppFor_each.htm">std::for_each</a>&lt;/a&gt;(&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">*/</a>&lt;/a&gt;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppOstream.htm"&gt;<a href="CppOstream.htm">std::ostream</a>&lt;/a&gt;&amp;amp; &lt;b&gt;&lt;a href="CppOperatorStreamOut.htm"&gt;<b><a href="CppOperator.htm">operator</a></b>&amp;lt;&amp;lt;&lt;/a&gt;&lt;/b&gt;(&lt;a href="CppOstream.htm"&gt;<a href="CppOstream.htm">std::ostream</a>&lt;/a&gt;&amp;amp; os, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Area&amp;amp; a)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Area::&lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt;&amp;amp; v &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; a.GetArea();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppCopy.htm"&gt;<a href="CppCopy.htm">std::copy</a>&lt;/a&gt;(&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v.begin(),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v.end(),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppOstream_<a href="CppIterator.htm">iterator</a>.htm"&gt;<a href="CppOstream_iterator.htm">std::ostream_iterator</a>&lt;/a&gt;&amp;lt;&lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt;&amp;gt;(os,"\n"));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; os;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; Area::GetInRange(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; min, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; max)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (x &amp;lt; min) &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; min;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (x &amp;gt; max) &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; max;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; x;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
} &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;~&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; xnz&lt;br/&gt;<br/>
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> end of the code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;gamexenonzerodialog.h&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> start of code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;table summary="gamexenonzerodialog.h" border <a href="CppOperatorAssign.htm">=</a> "1"&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;<br/>
&lt;a href="CppIfndef.htm"&gt;<a href="CppIfndef.htm">#ifndef</a>&lt;/a&gt; GAMEXENONZERODIALOG_H&lt;br/&gt;<br/>
&lt;a href="CppDefine.htm"&gt;<a href="CppDefine.htm">#define</a>&lt;/a&gt; GAMEXENONZERODIALOG_H&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppIosfwdH.htm"&gt;iosfwd&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppVectorH.htm"&gt;vector&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppStringH.htm"&gt;string&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>.htm"&gt;<a href="CppBoost.htm">boost</a>&lt;/a&gt;/&lt;a href="CppShared_ptr.htm"&gt;<a href="CppShared_ptr.htm">shared_ptr</a>&lt;/a&gt;.hpp&amp;gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; "gamexenonzerofwd.h"&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; "gamexenonzeroarea.h"&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; xnz {&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; Dialog&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppEnumClass.htm"&gt;<b><a href="CppEnumClass.htm">enum class</a></b>&lt;/a&gt;&lt;/b&gt; Input { up, right, down, left, space, shoot };&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppTypedef.htm"&gt;<b><a href="CppTypedef.htm">typedef</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; SpritePtr;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppTypedef.htm"&gt;<b><a href="CppTypedef.htm">typedef</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; &amp;gt; Sprite&lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppTypedef.htm"&gt;<b><a href="CppTypedef.htm">typedef</a></b>&lt;/a&gt;&lt;/b&gt; Sprite&lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt;::&lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>.htm"&gt;<a href="CppIterator.htm">iterator</a>&lt;/a&gt; &lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>.htm"&gt;<a href="CppIterator.htm">Iterator</a>&lt;/a&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppTypedef.htm"&gt;<b><a href="CppTypedef.htm">typedef</a></b>&lt;/a&gt;&lt;/b&gt; Sprite&lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt;::const_iterator Const&lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>.htm"&gt;<a href="CppIterator.htm">Iterator</a>&lt;/a&gt;;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Dialog();&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Area&amp;gt; ProcessInput(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Input input);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppBool.htm"&gt;<b><a href="CppBool.htm">bool</a></b>&lt;/a&gt;&lt;/b&gt; IsGameOver() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppPrivate.htm"&gt;<b><a href="CppPrivate.htm">private</a></b>&lt;/a&gt;&lt;/b&gt;:&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; DrawSprites();&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; xnz::Area&amp;gt; GetArea() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; mArea; }&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; MoveSprites();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; LetSpritesInteract();&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;xnz::Area&amp;gt; mArea;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Sprite&lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt; mSprites;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;SpritePlayer&amp;gt; mSpritePlayer;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFriend.htm"&gt;<b><a href="CppFriend.htm">friend</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppOstream.htm"&gt;<a href="CppOstream.htm">std::ostream</a>&lt;/a&gt;&amp;amp; &lt;b&gt;&lt;a href="CppOperatorStreamOut.htm"&gt;<b><a href="CppOperator.htm">operator</a></b>&amp;lt;&amp;lt;&lt;/a&gt;&lt;/b&gt;(&lt;a href="CppOstream.htm"&gt;<a href="CppOstream.htm">std::ostream</a>&lt;/a&gt;&amp;amp; os, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Dialog&amp;amp; s);&lt;br/&gt;<br/>
};&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppOstream.htm"&gt;<a href="CppOstream.htm">std::ostream</a>&lt;/a&gt;&amp;amp; &lt;b&gt;&lt;a href="CppOperatorStreamOut.htm"&gt;<b><a href="CppOperator.htm">operator</a></b>&amp;lt;&amp;lt;&lt;/a&gt;&lt;/b&gt;(&lt;a href="CppOstream.htm"&gt;<a href="CppOstream.htm">std::ostream</a>&lt;/a&gt;&amp;amp; os, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Dialog&amp;amp; s);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt; AskUserInput();&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; SpriteMover : &lt;b&gt;&lt;a href="CppPublic.htm"&gt;<b><a href="CppPublic.htm">public</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppUnary_function.htm"&gt;<a href="CppUnary_function.htm">std::unary_function</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt;,Sprite&amp;gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppOperator<a href="CppFunction.htm">Function</a>Call.htm"&gt;<b><a href="CppOperatorFunctionCall.htm">operator()</a></b>&lt;/a&gt;&lt;/b&gt;(&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;&amp;amp; s) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
};&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">/*</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; SpriteDrawer : &lt;b&gt;&lt;a href="CppPublic.htm"&gt;<b><a href="CppPublic.htm">public</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppUnary_function.htm"&gt;<a href="CppUnary_function.htm">std::unary_function</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt;,Sprite&amp;gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;SpriteDrawer(Area&amp;amp; area) : mArea(area) {}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppOperator<a href="CppFunction.htm">Function</a>Call.htm"&gt;<b><a href="CppOperatorFunctionCall.htm">operator()</a></b>&lt;/a&gt;&lt;/b&gt;(&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;&amp;amp; s) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Area&amp;amp; mArea;&lt;br/&gt;<br/>
};&lt;br/&gt;<br/>
&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">*/</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; SpriteIsDead : &lt;b&gt;&lt;a href="CppPublic.htm"&gt;<b><a href="CppPublic.htm">public</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppUnary_function.htm"&gt;<a href="CppUnary_function.htm">std::unary_function</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppBool.htm"&gt;<b><a href="CppBool.htm">bool</a></b>&lt;/a&gt;&lt;/b&gt;,Sprite&amp;gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppBool.htm"&gt;<b><a href="CppBool.htm">bool</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppOperator<a href="CppFunction.htm">Function</a>Call.htm"&gt;<b><a href="CppOperatorFunctionCall.htm">operator()</a></b>&lt;/a&gt;&lt;/b&gt;(&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;&amp;amp; s) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
};&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; SpriteShoot : &lt;b&gt;&lt;a href="CppPublic.htm"&gt;<b><a href="CppPublic.htm">public</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppUnary_function.htm"&gt;<a href="CppUnary_function.htm">std::unary_function</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt;,Sprite&amp;gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;SpriteShoot(Dialog::Sprite&lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt;&amp;amp; tempSprites) : mTempSprites(tempSprites) {}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppOperator<a href="CppFunction.htm">Function</a>Call.htm"&gt;<b><a href="CppOperatorFunctionCall.htm">operator()</a></b>&lt;/a&gt;&lt;/b&gt;(&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;&amp;amp; s) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Dialog::Sprite&lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt;&amp;amp; mTempSprites;&lt;br/&gt;<br/>
};&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
} &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;~&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; xnz&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppEndif.htm"&gt;<a href="CppEndif.htm">#endif</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> end of the code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;gamexenonzerodialog.cpp&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> start of code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;table summary="gamexenonzerodialog.cpp" border <a href="CppOperatorAssign.htm">=</a> "1"&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; "gamexenonzerodialog.h"&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppStringH.htm"&gt;string&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppIostreamH.htm"&gt;iostream&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>H.htm"&gt;<a href="CppIterator.htm">iterator</a>&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="Cpp<a href="CppAlgorithm.htm">Algorithm</a>H.htm"&gt;<a href="CppAlgorithm.htm">algorithm</a>&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppNumericH.htm"&gt;numeric&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="Cpp<a href="CppFunction.htm">Function</a>alH.htm"&gt;<a href="CppFunction.htm">function</a>al&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppC<a href="CppAssert.htm">assert</a>H.htm"&gt;c<a href="CppAssert.htm">assert</a>&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; "gamexenonzerosprite.h"&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; xnz {&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
Dialog::Dialog()&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;: mArea(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; Area(78,23)),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mSpritePlayer(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; SpritePlayer(78/2-2,23-1-4))&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mSprites.push_back( &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; SpriteEnemyMedium(35, 1)));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mSprites.push_back( &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; SpriteEnemySmall(20, 6)));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mSprites.push_back( &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; SpriteEnemySmall(30, 8)));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mSprites.push_back( &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; SpriteEnemySmall(40,10)));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mSprites.push_back( &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; SpriteEnemySmall(50,12)));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mSprites.push_back( &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; SpriteEnemySmall(60,14)));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mSprites.push_back( &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; SpriteEnemySmall(70,16)));&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;DrawSprites();&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppBool.htm"&gt;<b><a href="CppBool.htm">bool</a></b>&lt;/a&gt;&lt;/b&gt; Dialog::IsGameOver() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; (mSpritePlayer-&amp;gt;GetHealth() &lt;a href="CppOperatorLessEqual.htm"&gt;&amp;lt;=&lt;/a&gt; 0);&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">/*</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; xnzDialog::AskUserInputAndProcess()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt; userInput &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; AskUserInput();&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(userInput &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "a") { mSpritePlayer-&amp;gt;Move(-1, 0); }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppElse.htm"&gt;<b><a href="CppElse.htm">else</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (userInput &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "d") { mSpritePlayer-&amp;gt;Move( 1, 0); }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppElse.htm"&gt;<b><a href="CppElse.htm">else</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (userInput &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "w") { mSpritePlayer-&amp;gt;Move( 0,-1); }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppElse.htm"&gt;<b><a href="CppElse.htm">else</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (userInput &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "s") { mSpritePlayer-&amp;gt;Move( 0, 1); }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppElse.htm"&gt;<b><a href="CppElse.htm">else</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (userInput &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "x")&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Sprite&lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt; tempSprites;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mSpritePlayer-&amp;gt;Shoot(tempSprites);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppCopy.htm"&gt;<a href="CppCopy.htm">std::copy</a>&lt;/a&gt;(tempSprites.begin(),tempSprites.end(),&lt;a href="CppBack_inserter.htm"&gt;<a href="CppBack_inserter.htm">std::back_inserter</a>&lt;/a&gt;(mSprites));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppElse.htm"&gt;<b><a href="CppElse.htm">else</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (userInput &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "q")&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;Kill player to be game over&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mSpritePlayer-&amp;gt;ChangeHealth( &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt;mSpritePlayer-&amp;gt;GetHealth() &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt; 1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;MoveSprites();&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;LetSpritesInteract();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;DrawSprites();&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">*/</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Area&amp;gt; Dialog::ProcessInput(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Dialog::Input input)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppSwitch.htm"&gt;<b><a href="CppSwitch.htm">switch</a></b>&lt;/a&gt;&lt;/b&gt; (input)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppCase.htm"&gt;<b><a href="CppCase.htm">case</a></b>&lt;/a&gt;&lt;/b&gt; Input::up:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mSpritePlayer-&amp;gt;Move( 0,-1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppBreak.htm"&gt;<b><a href="CppBreak.htm">break</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppCase.htm"&gt;<b><a href="CppCase.htm">case</a></b>&lt;/a&gt;&lt;/b&gt; Input::right:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mSpritePlayer-&amp;gt;Move( 1, 0);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppBreak.htm"&gt;<b><a href="CppBreak.htm">break</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppCase.htm"&gt;<b><a href="CppCase.htm">case</a></b>&lt;/a&gt;&lt;/b&gt; Input::down:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mSpritePlayer-&amp;gt;Move( 0,-1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppBreak.htm"&gt;<b><a href="CppBreak.htm">break</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppCase.htm"&gt;<b><a href="CppCase.htm">case</a></b>&lt;/a&gt;&lt;/b&gt; Input::left:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mSpritePlayer-&amp;gt;Move(-1, 0);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppBreak.htm"&gt;<b><a href="CppBreak.htm">break</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppCase.htm"&gt;<b><a href="CppCase.htm">case</a></b>&lt;/a&gt;&lt;/b&gt; Input::shoot:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Sprite&lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt; tempSprites;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mSpritePlayer-&amp;gt;Shoot(tempSprites);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppCopy.htm"&gt;<a href="CppCopy.htm">std::copy</a>&lt;/a&gt;(tempSprites.begin(),tempSprites.end(),&lt;a href="CppBack_inserter.htm"&gt;<a href="CppBack_inserter.htm">std::back_inserter</a>&lt;/a&gt;(mSprites));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppCase.htm"&gt;<b><a href="CppCase.htm">case</a></b>&lt;/a&gt;&lt;/b&gt; Input::space:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppBreak.htm"&gt;<b><a href="CppBreak.htm">break</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;MoveSprites();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;LetSpritesInteract();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;DrawSprites();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; GetArea();&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Dialog::MoveSprites()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppFor_each.htm"&gt;<a href="CppFor_each.htm">std::for_each</a>&lt;/a&gt;(mSprites.begin(),mSprites.end(),SpriteMover());&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Dialog::LetSpritesInteract()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;Let player interact with all non-player sprites&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>.htm"&gt;<a href="CppIterator.htm">Iterator</a>&lt;/a&gt; j &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; mSprites.end();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFor.htm"&gt;<b><a href="CppFor.htm">for</a></b>&lt;/a&gt;&lt;/b&gt;(&lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>.htm"&gt;<a href="CppIterator.htm">Iterator</a>&lt;/a&gt; i &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; mSprites.begin(); i&lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt;j; &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;+i)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (IsCollision(mSpritePlayer,*i)&lt;a href="CppOperatorEqual.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>=&lt;/a&gt;&lt;b&gt;&lt;a href="CppTrue.htm"&gt;<b><a href="CppTrue.htm">true</a></b>&lt;/a&gt;&lt;/b&gt;)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mSpritePlayer-&amp;gt;ChangeHealth(-1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(*i)-&amp;gt;ChangeHealth(-1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;Let all non-player sprites interact with all non-player sprites&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>.htm"&gt;<a href="CppIterator.htm">Iterator</a>&lt;/a&gt; end &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; mSprites.end();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFor.htm"&gt;<b><a href="CppFor.htm">for</a></b>&lt;/a&gt;&lt;/b&gt;(&lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>.htm"&gt;<a href="CppIterator.htm">Iterator</a>&lt;/a&gt; i &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; mSprites.begin(); i&lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt;end; &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;+i)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFor.htm"&gt;<b><a href="CppFor.htm">for</a></b>&lt;/a&gt;&lt;/b&gt;(&lt;a href="Cpp<a href="CppIterator.htm">Iterator</a>.htm"&gt;<a href="CppIterator.htm">Iterator</a>&lt;/a&gt; j &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; i &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; 1 ; j&lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt;end; &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;+j)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(i&lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt;j);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (IsCollision(*i,*j)&lt;a href="CppOperatorEqual.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>=&lt;/a&gt;&lt;b&gt;&lt;a href="CppTrue.htm"&gt;<b><a href="CppTrue.htm">true</a></b>&lt;/a&gt;&lt;/b&gt;)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(*i)-&amp;gt;ChangeHealth(-1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(*j)-&amp;gt;ChangeHealth(-1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;Check &lt;b&gt;&lt;a href="CppFor.htm"&gt;<b><a href="CppFor.htm">for</a></b>&lt;/a&gt;&lt;/b&gt; health of sprites and remove them&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;Erase-remove from Meyers, Effective &lt;a href="CppStl.htm"&gt;<a href="CppStl.htm">STL</a>&lt;/a&gt;, Item 32&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mSprites.erase(&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppRemove_if.htm"&gt;<a href="CppRemove_if.htm">std::remove_if</a>&lt;/a&gt;( mSprites.begin(),mSprites.end(), SpriteIsDead()),mSprites.end());&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;Let the enemies shoot&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Sprite&lt;a href="Cpp<a href="CppContainer.htm">Container</a>.htm"&gt;<a href="CppContainer.htm">Container</a>&lt;/a&gt; tempSprites;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppFor_each.htm"&gt;<a href="CppFor_each.htm">std::for_each</a>&lt;/a&gt;(mSprites.begin(),mSprites.end(), SpriteShoot(tempSprites));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppCopy.htm"&gt;<a href="CppCopy.htm">std::copy</a>&lt;/a&gt;(tempSprites.begin(),tempSprites.end(),&lt;a href="CppBack_inserter.htm"&gt;<a href="CppBack_inserter.htm">std::back_inserter</a>&lt;/a&gt;(mSprites));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Dialog::DrawSprites()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mArea-&amp;gt;DrawEdge();&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mArea-&amp;gt;Draw(&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mSpritePlayer-&amp;gt;GetX(),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mSpritePlayer-&amp;gt;GetY(),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mSpritePlayer-&amp;gt;GetGraphic());&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFor.htm"&gt;<b><a href="CppFor.htm">for</a></b>&lt;/a&gt;&lt;/b&gt;(&lt;b&gt;&lt;a href="CppAuto.htm"&gt;<b><a href="CppAuto.htm">auto</a></b>&lt;/a&gt;&lt;/b&gt; s: mSprites)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mArea-&amp;gt;Draw(s-&amp;gt;GetX(), s-&amp;gt;GetY(), s-&amp;gt;GetGraphic());&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mArea-&amp;gt;DrawLife(&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppStatic_cast.htm"&gt;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;/a&gt;&lt;/b&gt;&amp;lt;&lt;b&gt;&lt;a href="Cpp<a href="CppDouble.htm">Double</a>.htm"&gt;<b><a href="CppDouble.htm">double</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt;(mSpritePlayer-&amp;gt;GetHealth())&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorDivide.htm"&gt;/&lt;/a&gt; &lt;b&gt;&lt;a href="CppStatic_cast.htm"&gt;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;/a&gt;&lt;/b&gt;&amp;lt;&lt;b&gt;&lt;a href="Cpp<a href="CppDouble.htm">Double</a>.htm"&gt;<b><a href="CppDouble.htm">double</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt;(mSpritePlayer-&amp;gt;GetMaxHealth() ) );&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">/*</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; SpriteDrawer::&lt;b&gt;&lt;a href="CppOperator<a href="CppFunction.htm">Function</a>Call.htm"&gt;<b><a href="CppOperatorFunctionCall.htm">operator()</a></b>&lt;/a&gt;&lt;/b&gt;(&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;&amp;amp; s) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mArea-&amp;gt;Draw(s-&amp;gt;GetX(), s-&amp;gt;GetY(), s-&amp;gt;GetGraphic());&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">*/</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">/*</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt; AskUserInput()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt; s;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppGetline.htm"&gt;<a href="CppGetline.htm">std::getline</a>&lt;/a&gt;(&lt;a href="CppCin.htm"&gt;<a href="CppCin.htm">std::cin</a>&lt;/a&gt;,s);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; s;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">*/</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppOstream.htm"&gt;<a href="CppOstream.htm">std::ostream</a>&lt;/a&gt;&amp;amp; &lt;b&gt;&lt;a href="CppOperatorStreamOut.htm"&gt;<b><a href="CppOperator.htm">operator</a></b>&amp;lt;&amp;lt;&lt;/a&gt;&lt;/b&gt;(&lt;a href="CppOstream.htm"&gt;<a href="CppOstream.htm">std::ostream</a>&lt;/a&gt;&amp;amp; os, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Dialog&amp;amp; s)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;os &lt;a href="CppOperatorStreamOut.htm"&gt;&amp;lt;&amp;lt;&lt;/a&gt; s.GetArea();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; os;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; SpriteMover::&lt;b&gt;&lt;a href="CppOperator<a href="CppFunction.htm">Function</a>Call.htm"&gt;<b><a href="CppOperatorFunctionCall.htm">operator()</a></b>&lt;/a&gt;&lt;/b&gt;(&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;&amp;amp; s) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;s-&amp;gt;Move();&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppBool.htm"&gt;<b><a href="CppBool.htm">bool</a></b>&lt;/a&gt;&lt;/b&gt; SpriteIsDead::&lt;b&gt;&lt;a href="CppOperator<a href="CppFunction.htm">Function</a>Call.htm"&gt;<b><a href="CppOperatorFunctionCall.htm">operator()</a></b>&lt;/a&gt;&lt;/b&gt;(&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;&amp;amp; s) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; s-&amp;gt;IsDead();&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; SpriteShoot::&lt;b&gt;&lt;a href="CppOperator<a href="CppFunction.htm">Function</a>Call.htm"&gt;<b><a href="CppOperatorFunctionCall.htm">operator()</a></b>&lt;/a&gt;&lt;/b&gt;(&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;&amp;amp; s) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;s-&amp;gt;Shoot(mTempSprites);&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
} &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;~&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; xnz&lt;br/&gt;<br/>
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> end of the code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;gamexenonzerofwd.h&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> start of code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;table summary="gamexenonzerofwd.h" border <a href="CppOperatorAssign.htm">=</a> "1"&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;<br/>
&lt;a href="CppIfndef.htm"&gt;<a href="CppIfndef.htm">#ifndef</a>&lt;/a&gt; GAMEXENONZEROFWD_H&lt;br/&gt;<br/>
&lt;a href="CppDefine.htm"&gt;<a href="CppDefine.htm">#define</a>&lt;/a&gt; GAMEXENONZEROFWD_H&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; xnz&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; Area;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; Dialog;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; Sprite;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; SpritePlayer;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppEndif.htm"&gt;<a href="CppEndif.htm">#endif</a>&lt;/a&gt; &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt; GAMEXENONZEROFWD_H&lt;br/&gt;<br/>
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> end of the code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;gamexenonzerosprite.h&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> start of code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;table summary="gamexenonzerosprite.h" border <a href="CppOperatorAssign.htm">=</a> "1"&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;<br/>
&lt;a href="CppIfndef.htm"&gt;<a href="CppIfndef.htm">#ifndef</a>&lt;/a&gt; GAMEXENONZEROSPRITE_H&lt;br/&gt;<br/>
&lt;a href="CppDefine.htm"&gt;<a href="CppDefine.htm">#define</a>&lt;/a&gt; GAMEXENONZEROSPRITE_H&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppVectorH.htm"&gt;vector&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppStringH.htm"&gt;string&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>.htm"&gt;<a href="CppBoost.htm">boost</a>&lt;/a&gt;/&lt;a href="CppShared_ptr.htm"&gt;<a href="CppShared_ptr.htm">shared_ptr</a>&lt;/a&gt;.hpp&amp;gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppEnumClass.htm"&gt;<b><a href="CppEnumClass.htm">enum class</a></b>&lt;/a&gt;&lt;/b&gt; EnumSprite&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;spritePlayer,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;spriteMissile,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;spriteEnemySmall,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;spriteEnemyMedium&lt;br/&gt;<br/>
};&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; xnz {&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; Sprite&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppTypedef.htm"&gt;<b><a href="CppTypedef.htm">typedef</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt;&amp;gt; Graphic;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Sprite(&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Graphic&amp;amp; graphic,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; health);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVirtual.htm"&gt;<b><a href="CppVirtual.htm">virtual</a></b>&lt;/a&gt;&lt;/b&gt; ~Sprite() {}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Graphic&amp;amp; GetGraphic() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; mGraphic; }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; GetX() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; mX; }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; GetY() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; mY; }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; GetHealth() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; mHealth; }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppBool.htm"&gt;<b><a href="CppBool.htm">bool</a></b>&lt;/a&gt;&lt;/b&gt; IsSpriteBodyRel(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppBool.htm"&gt;<b><a href="CppBool.htm">bool</a></b>&lt;/a&gt;&lt;/b&gt; IsSpriteBodyAbs(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="CppPair.htm"&gt;<a href="CppPair.htm">std::pair</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;,&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt; &amp;gt; GetSpriteBodyAbs() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; ChangeHealth(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; delta) { mHealth&lt;a href="CppOperatorPlusAssign.htm"&gt;<a href="CppOperatorPlusAssign.htm">+=</a>&lt;/a&gt;delta; }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppBool.htm"&gt;<b><a href="CppBool.htm">bool</a></b>&lt;/a&gt;&lt;/b&gt; IsDead() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; mHealth &lt;a href="CppOperatorLessEqual.htm"&gt;&amp;lt;=&lt;/a&gt; 0; }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; ChangeX(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dx);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; ChangeY(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dy);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; GetWidth() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; GetHeight() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; SetGraphic(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Graphic&amp;amp; g) { mGraphic &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; g; }&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVirtual.htm"&gt;<b><a href="CppVirtual.htm">virtual</a></b>&lt;/a&gt;&lt;/b&gt; EnumSprite GetSprite() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 0;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVirtual.htm"&gt;<b><a href="CppVirtual.htm">virtual</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Move() &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 0;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVirtual.htm"&gt;<b><a href="CppVirtual.htm">virtual</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Shoot(&lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; &amp;gt;&amp;amp; &lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt;Sprites)&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 0;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppStatic.htm"&gt;<b><a href="CppStatic.htm">static</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; mMinx;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppStatic.htm"&gt;<b><a href="CppStatic.htm">static</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; mMiny;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppStatic.htm"&gt;<b><a href="CppStatic.htm">static</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; mMaxx;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppStatic.htm"&gt;<b><a href="CppStatic.htm">static</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; mMaxy;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppPrivate.htm"&gt;<b><a href="CppPrivate.htm">private</a></b>&lt;/a&gt;&lt;/b&gt;:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; mX;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; mY;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Graphic mGraphic;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; mHealth;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
};&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; SpritePlayer : &lt;b&gt;&lt;a href="CppPublic.htm"&gt;<b><a href="CppPublic.htm">public</a></b>&lt;/a&gt;&lt;/b&gt; Sprite&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;SpritePlayer(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;EnumSprite GetSprite() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; EnumSprite::spritePlayer; }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Move() {}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Move(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dx, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dy);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Shoot(&lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; &amp;gt;&amp;amp; &lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt;Sprites);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; GetMaxHealth() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; 100; }&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppPrivate.htm"&gt;<b><a href="CppPrivate.htm">private</a></b>&lt;/a&gt;&lt;/b&gt;:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Graphic GetPlayerGraphic() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
};&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; SpriteMissile : &lt;b&gt;&lt;a href="CppPublic.htm"&gt;<b><a href="CppPublic.htm">public</a></b>&lt;/a&gt;&lt;/b&gt; Sprite&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;SpriteMissile(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dx, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dy, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; size &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 1);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;EnumSprite GetSprite() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; EnumSprite::spriteMissile; }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Move();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Shoot(&lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; &amp;gt;&amp;amp; &lt;a href="CppOperatorDivide.htm"&gt;/&lt;/a&gt;* &lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt;Sprites &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">*/</a>&lt;/a&gt;) { &lt;a href="CppOperatorDivide.htm"&gt;/&lt;/a&gt;* A rocket cannot shoot&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">*/</a>&lt;/a&gt; }&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppPrivate.htm"&gt;<b><a href="CppPrivate.htm">private</a></b>&lt;/a&gt;&lt;/b&gt;:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Graphic GetMissileGraphic(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; size) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; mDx;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; mDy;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
};&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; SpriteEnemySmall : &lt;b&gt;&lt;a href="CppPublic.htm"&gt;<b><a href="CppPublic.htm">public</a></b>&lt;/a&gt;&lt;/b&gt; Sprite&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;SpriteEnemySmall(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;EnumSprite GetSprite() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; EnumSprite::spriteEnemySmall; }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Move();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Shoot(&lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; &amp;gt;&amp;amp; &lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt;Sprites);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppPrivate.htm"&gt;<b><a href="CppPrivate.htm">private</a></b>&lt;/a&gt;&lt;/b&gt;:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::Graphic GetSpriteEnemySmallGraphic() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; mDx;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; m&lt;a href="Cpp<a href="CppTime.htm">Time</a>.htm"&gt;<a href="CppTime.htm">Time</a>&lt;/a&gt;r;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; m&lt;a href="Cpp<a href="CppTime.htm">Time</a>.htm"&gt;<a href="CppTime.htm">Time</a>&lt;/a&gt;Shoot;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
};&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppStruct.htm"&gt;<b><a href="CppStruct.htm">struct</a></b>&lt;/a&gt;&lt;/b&gt; SpriteEnemyMedium : &lt;b&gt;&lt;a href="CppPublic.htm"&gt;<b><a href="CppPublic.htm">public</a></b>&lt;/a&gt;&lt;/b&gt; Sprite&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppEnum.htm"&gt;<b><a href="CppEnum.htm">enum</a></b>&lt;/a&gt;&lt;/b&gt; EnumTurretDirection { turretDownLeft, turretDown, turretDownRight };&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;SpriteEnemyMedium(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;EnumSprite GetSprite() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; { &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; EnumSprite::spriteEnemyMedium; }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Move();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Shoot(&lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; &amp;gt;&amp;amp; &lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt;Sprites);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppPrivate.htm"&gt;<b><a href="CppPrivate.htm">private</a></b>&lt;/a&gt;&lt;/b&gt;:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::Graphic GetSpriteShootDown() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::Graphic GetSpriteShootDownLeft() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::Graphic GetSpriteShootDownRight() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; m&lt;a href="Cpp<a href="CppTime.htm">Time</a>.htm"&gt;<a href="CppTime.htm">Time</a>&lt;/a&gt;r;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; mDx;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; m&lt;a href="Cpp<a href="CppTime.htm">Time</a>.htm"&gt;<a href="CppTime.htm">Time</a>&lt;/a&gt;Shoot;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;EnumTurretDirection mTurretDirection;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
};&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppBool.htm"&gt;<b><a href="CppBool.htm">bool</a></b>&lt;/a&gt;&lt;/b&gt; IsCollision(&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;&amp;amp; s1,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;&amp;amp; s2);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
} &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;~&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; xnz&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppEndif.htm"&gt;<a href="CppEndif.htm">#endif</a>&lt;/a&gt;&lt;br/&gt;<br/>
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> end of the code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;gamexenonzerosprite.cpp&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> start of code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;table summary="gamexenonzerosprite.cpp" border <a href="CppOperatorAssign.htm">=</a> "1"&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; "gamexenonzerosprite.h"&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppC<a href="CppAssert.htm">assert</a>H.htm"&gt;c<a href="CppAssert.htm">assert</a>&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; xnz {&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::mMinx &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 1;&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::mMiny &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 1;&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::mMaxx &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 0;&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::mMaxy &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 0;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
Sprite::Sprite(&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Graphic&amp;amp; graphic,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; health)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;: mX(x),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mY(y),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mGraphic(graphic),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mHealth(health)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;( x &lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt; mMinx);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;( x &amp;lt;&amp;nbsp;&amp;nbsp;mMaxx);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;( y &lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt; mMiny);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;( y &amp;lt;&amp;nbsp;&amp;nbsp;mMaxy);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(mGraphic.size() &amp;gt; 0);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(mHealth &amp;gt; 0);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::ChangeX(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dx)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;( x &lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt; mMinx);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;( x &amp;lt;&amp;nbsp;&amp;nbsp;mMaxx);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mX &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; dx;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::ChangeY(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dy)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;( y &lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt; mMiny);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;( y &amp;lt;&amp;nbsp;&amp;nbsp;mMaxy);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;mY &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; dy;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; SpritePlayer::Move(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dx, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dy)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(mMaxx &lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt; 0);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(mMaxy &lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt; 0);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;Move in x direction&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;ChangeX(dx);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppWhile.htm"&gt;<b><a href="CppWhile.htm">while</a></b>&lt;/a&gt;&lt;/b&gt; ( &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetX() &amp;lt; mMinx)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;ChangeX(1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;ChangeHealth(-1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppWhile.htm"&gt;<b><a href="CppWhile.htm">while</a></b>&lt;/a&gt;&lt;/b&gt; ( &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetX() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetWidth() &amp;gt; mMaxx)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;ChangeX(-1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;ChangeHealth(-1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;ChangeY(dy);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppWhile.htm"&gt;<b><a href="CppWhile.htm">while</a></b>&lt;/a&gt;&lt;/b&gt; ( &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetY() &amp;lt; mMiny)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;ChangeY(1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;ChangeHealth(-1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppWhile.htm"&gt;<b><a href="CppWhile.htm">while</a></b>&lt;/a&gt;&lt;/b&gt; ( &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetY() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetHeight() &amp;gt; mMaxy)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;ChangeY(-1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;ChangeHealth(-1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::GetWidth() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(mGraphic.size() &amp;gt; 0);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; mGraphic[0].size();&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::GetHeight() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; mGraphic.size();&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppBool.htm"&gt;<b><a href="CppBool.htm">bool</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::IsSpriteBodyAbs(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;IsSpriteBodyRel(x &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt; GetX(), y &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt; GetY() );&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppBool.htm"&gt;<b><a href="CppBool.htm">bool</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::IsSpriteBodyRel(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; ( x &amp;lt; 0&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorLogicalOr.htm"&gt;<a href="CppOperatorLogicalOr.htm">||</a>&lt;/a&gt; y &amp;lt; 0&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorLogicalOr.htm"&gt;<a href="CppOperatorLogicalOr.htm">||</a>&lt;/a&gt; x &lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt; &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetWidth()&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorLogicalOr.htm"&gt;<a href="CppOperatorLogicalOr.htm">||</a>&lt;/a&gt; y &lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt; &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetHeight()&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorLogicalOr.htm"&gt;<a href="CppOperatorLogicalOr.htm">||</a>&lt;/a&gt; mGraphic[y][x] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; ' '&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppFalse.htm"&gt;<b><a href="CppFalse.htm">false</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppTrue.htm"&gt;<b><a href="CppTrue.htm">true</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="CppPair.htm"&gt;<a href="CppPair.htm">std::pair</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;,&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt; &amp;gt; Sprite::GetSpriteBodyAbs() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="CppPair.htm"&gt;<a href="CppPair.htm">std::pair</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;,&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt; &amp;gt; v;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; maxx &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetX() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; GetWidth();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; maxy &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetY() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; GetHeight();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFor.htm"&gt;<b><a href="CppFor.htm">for</a></b>&lt;/a&gt;&lt;/b&gt; (&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y=GetY(); y&lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt;maxy; &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;+y)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFor.htm"&gt;<b><a href="CppFor.htm">for</a></b>&lt;/a&gt;&lt;/b&gt; (&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x=GetX(); x&lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt;maxx; &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;+x)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (IsSpriteBodyAbs(x,y)&lt;a href="CppOperatorEqual.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>=&lt;/a&gt;&lt;b&gt;&lt;a href="CppTrue.htm"&gt;<b><a href="CppTrue.htm">true</a></b>&lt;/a&gt;&lt;/b&gt;)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v.push_back(&lt;a href="CppMake_pair.htm"&gt;<a href="CppMake_pair.htm">std::make_pair</a>&lt;/a&gt;(x,y) );&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; v;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
SpritePlayer::SpritePlayer(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;: Sprite(&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;y,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetPlayerGraphic(),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetMaxHealth())&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::Graphic SpritePlayer::GetPlayerGraphic() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Sprite::Graphic g(4);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[0] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; " |&amp;nbsp;&amp;nbsp;| ";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[1] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; " |/\\| ";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[2] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; " &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;\\\\ ";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[3] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "/_\\/_\\";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; g;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; SpritePlayer::Shoot(&lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; &amp;gt;&amp;amp; &lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt;Sprites)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; missileY&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetY();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; missileX1 &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetX() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; 1;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; missileX2 &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetX() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; 4;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dx &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 0;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dy &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt;1;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; missile1(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; SpriteMissile(missileX1,missileY,dx,dy));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; missile2(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; SpriteMissile(missileX2,missileY,dx,dy));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt;Sprites.push_back(missile1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt;Sprites.push_back(missile2);&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
SpriteMissile::SpriteMissile(&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dx,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dy,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; size)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;: Sprite(x,y,GetMissileGraphic(size),size*size),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mDx(dx),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mDy(dy)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::Graphic SpriteMissile::GetMissileGraphic(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; size) &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Sprite::Graphic g(size,&lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt;(size,'*'));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; g;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; SpriteMissile::Move()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;ChangeX(mDx);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;ChangeY(mDy);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetX();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetY();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; ( x &amp;lt; mMinx &lt;a href="CppOperatorLogicalOr.htm"&gt;<a href="CppOperatorLogicalOr.htm">||</a>&lt;/a&gt; x &amp;gt; mMaxx &lt;a href="CppOperatorLogicalOr.htm"&gt;<a href="CppOperatorLogicalOr.htm">||</a>&lt;/a&gt; y &amp;lt; mMiny &lt;a href="CppOperatorLogicalOr.htm"&gt;<a href="CppOperatorLogicalOr.htm">||</a>&lt;/a&gt; y &amp;gt; mMaxy)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ChangeHealth( &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt;GetHealth() &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt; 1 );&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
SpriteEnemySmall::SpriteEnemySmall(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;: Sprite(x,y,GetSpriteEnemySmallGraphic(),1),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mDx(1),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m&lt;a href="Cpp<a href="CppTime.htm">Time</a>.htm"&gt;<a href="CppTime.htm">Time</a>&lt;/a&gt;r(0),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m&lt;a href="Cpp<a href="CppTime.htm">Time</a>.htm"&gt;<a href="CppTime.htm">Time</a>&lt;/a&gt;Shoot(10)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::Graphic SpriteEnemySmall::GetSpriteEnemySmallGraphic() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Sprite::Graphic g(2);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[0] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">/*</a>&lt;/a&gt;\\&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">/*</a>&lt;/a&gt;\\";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[1] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "[]&amp;nbsp;&amp;nbsp;[]";&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; g;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; SpriteEnemySmall::Move()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;ChangeX(mDx);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetX() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetWidth() &lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt; &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;mMaxx)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mDx &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt;mDx;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;ChangeX(mDx);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(! (&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetX() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetWidth() &lt;a href="CppOperatorGreaterEqual.htm"&gt;&amp;gt;=&lt;/a&gt; &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;mMaxx) );&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppElse.htm"&gt;<b><a href="CppElse.htm">else</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetX() &lt;a href="CppOperatorLessEqual.htm"&gt;&amp;lt;=&lt;/a&gt; &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;mMinx)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mDx &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt;mDx;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;ChangeX(mDx);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(!(&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;GetX() &lt;a href="CppOperatorLessEqual.htm"&gt;&amp;lt;=&lt;/a&gt; &lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;-&amp;gt;mMinx));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; SpriteEnemySmall::Shoot(&lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; &amp;gt;&amp;amp; &lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt;Sprites)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;+m&lt;a href="Cpp<a href="CppTime.htm">Time</a>.htm"&gt;<a href="CppTime.htm">Time</a>&lt;/a&gt;r;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (m&lt;a href="Cpp<a href="CppTime.htm">Time</a>.htm"&gt;<a href="CppTime.htm">Time</a>&lt;/a&gt;r &lt;a href="CppOperatorModulus.htm"&gt;%&lt;/a&gt; m&lt;a href="Cpp<a href="CppTime.htm">Time</a>.htm"&gt;<a href="CppTime.htm">Time</a>&lt;/a&gt;Shoot &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 0)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; missileY&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetY() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; 2;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; missileX1 &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetX() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; 0;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; missileX2 &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetX() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; 5;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dx &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 0;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dy &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 1;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; missile1(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; SpriteMissile(missileX1,missileY,dx,dy));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; missile2(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; SpriteMissile(missileX2,missileY,dx,dy));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt;Sprites.push_back(missile1);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt;Sprites.push_back(missile2);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
SpriteEnemyMedium::SpriteEnemyMedium(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; x, &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; y)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;: Sprite(x,y,GetSpriteShootDown(),10),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m&lt;a href="Cpp<a href="CppTime.htm">Time</a>.htm"&gt;<a href="CppTime.htm">Time</a>&lt;/a&gt;Shoot(2)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::Graphic SpriteEnemyMedium::GetSpriteShootDownLeft() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Sprite::Graphic g(7);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[0] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorDivide.htm"&gt;/&lt;/a&gt;----\\&amp;nbsp;&amp;nbsp;";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[1] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; " &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;xxxx\\\\ ";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[2] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;xx/\\xx\\\\";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[3] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "\\\\xx\\/xx&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[4] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&amp;nbsp;&amp;nbsp;x[[]]x&amp;nbsp;&amp;nbsp;";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[5] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&amp;nbsp;&amp;nbsp;[[]]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[6] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; " [[]]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; g;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::Graphic SpriteEnemyMedium::GetSpriteShootDown() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Sprite::Graphic g(7);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[0] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorDivide.htm"&gt;/&lt;/a&gt;----\\&amp;nbsp;&amp;nbsp;";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[1] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; " &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;xxxx\\\\ ";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[2] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;xx/\\xx\\\\";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[3] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "\\\\xx\\/xx&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[4] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&amp;nbsp;&amp;nbsp;x[[]]x&amp;nbsp;&amp;nbsp;";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[5] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&amp;nbsp;&amp;nbsp; [[]]&amp;nbsp;&amp;nbsp; ";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[6] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&amp;nbsp;&amp;nbsp; [[]]&amp;nbsp;&amp;nbsp; ";&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; g;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; Sprite::Graphic SpriteEnemyMedium::GetSpriteShootDownRight() &lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Sprite::Graphic g(7);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[0] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorDivide.htm"&gt;/&lt;/a&gt;----\\&amp;nbsp;&amp;nbsp;";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[1] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; " &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;xxxx\\\\ ";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[2] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;xx/\\xx\\\\";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[3] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "\\\\xx\\/xx&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[4] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&amp;nbsp;&amp;nbsp;x[[]]x&amp;nbsp;&amp;nbsp;";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[5] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[[]]&amp;nbsp;&amp;nbsp;";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;g[6] &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; "&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; [[]] ";&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; g;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; SpriteEnemyMedium::Move()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; SpriteEnemyMedium::Shoot(&lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; &amp;gt;&amp;amp; &lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt;Sprites)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;+m&lt;a href="Cpp<a href="CppTime.htm">Time</a>.htm"&gt;<a href="CppTime.htm">Time</a>&lt;/a&gt;r;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; (m&lt;a href="Cpp<a href="CppTime.htm">Time</a>.htm"&gt;<a href="CppTime.htm">Time</a>&lt;/a&gt;r &lt;a href="CppOperatorModulus.htm"&gt;%&lt;/a&gt; m&lt;a href="Cpp<a href="CppTime.htm">Time</a>.htm"&gt;<a href="CppTime.htm">Time</a>&lt;/a&gt;Shoot &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 0)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; missileY &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetY() &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; GetHeight();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; missileX &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; GetX()&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; (GetWidth() &lt;a href="CppOperatorDivide.htm"&gt;/&lt;/a&gt; 2)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; (mTurretDirection &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; turretDownLeft&amp;nbsp;&amp;nbsp;? &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt;2 : 0)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; (mTurretDirection &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; turretDownRight ?&amp;nbsp;&amp;nbsp;2 : 0);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dx &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 0&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; (mTurretDirection &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; turretDownLeft&amp;nbsp;&amp;nbsp;? &lt;a href="CppOperatorMinus.htm"&gt;-&lt;/a&gt;1 : 0)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; (mTurretDirection &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; turretDownRight ?&amp;nbsp;&amp;nbsp;1 : 0);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; dy &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 1;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt; missile(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; SpriteMissile(missileX,missileY,dx,dy,2));&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt;Sprites.push_back(missile);&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppElse.htm"&gt;<b><a href="CppElse.htm">else</a></b>&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mTurretDirection &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; &lt;b&gt;&lt;a href="CppStatic_cast.htm"&gt;<b><a href="CppStatic_cast.htm">static_cast</a></b>&lt;/a&gt;&lt;/b&gt;&amp;lt;EnumTurretDirection&amp;gt;(&lt;a href="CppRand.htm"&gt;<a href="CppRand.htm">std::rand</a>&lt;/a&gt;() &lt;a href="CppOperatorModulus.htm"&gt;%&lt;/a&gt; 3);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppSwitch.htm"&gt;<b><a href="CppSwitch.htm">switch</a></b>&lt;/a&gt;&lt;/b&gt;(mTurretDirection)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppCase.htm"&gt;<b><a href="CppCase.htm">case</a></b>&lt;/a&gt;&lt;/b&gt; turretDownLeft:&amp;nbsp;&amp;nbsp;SetGraphic(GetSpriteShootDownLeft()); &lt;b&gt;&lt;a href="CppBreak.htm"&gt;<b><a href="CppBreak.htm">break</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppCase.htm"&gt;<b><a href="CppCase.htm">case</a></b>&lt;/a&gt;&lt;/b&gt; turretDown:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SetGraphic(GetSpriteShootDown()); &lt;b&gt;&lt;a href="CppBreak.htm"&gt;<b><a href="CppBreak.htm">break</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppCase.htm"&gt;<b><a href="CppCase.htm">case</a></b>&lt;/a&gt;&lt;/b&gt; turretDownRight: SetGraphic(GetSpriteShootDownRight()); &lt;b&gt;&lt;a href="CppBreak.htm"&gt;<b><a href="CppBreak.htm">break</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppDefault.htm"&gt;<b><a href="CppDefault.htm">default</a></b>&lt;/a&gt;&lt;/b&gt;: &lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(!"Should not get here");&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppBool.htm"&gt;<b><a href="CppBool.htm">bool</a></b>&lt;/a&gt;&lt;/b&gt; IsCollision(&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;&amp;amp; s1,&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;Sprite&amp;gt;&amp;amp; s2)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="CppPair.htm"&gt;<a href="CppPair.htm">std::pair</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;,&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt; &amp;gt; body1 &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; s1-&amp;gt;GetSpriteBodyAbs();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="CppPair.htm"&gt;<a href="CppPair.htm">std::pair</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;,&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt; &amp;gt; body2 &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; s2-&amp;gt;GetSpriteBodyAbs();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="CppPair.htm"&gt;<a href="CppPair.htm">std::pair</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;,&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt; &amp;gt;::const_iterator j &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; body1.end();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFor.htm"&gt;<b><a href="CppFor.htm">for</a></b>&lt;/a&gt;&lt;/b&gt; (&lt;a href="CppVector.htm"&gt;<a href="CppVector.htm">std::vector</a>&lt;/a&gt;&amp;lt;&lt;a href="CppPair.htm"&gt;<a href="CppPair.htm">std::pair</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;,&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt;&amp;gt; &amp;gt;::const_iterator i &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; body1.begin(); i&lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt;j; &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;+i)&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppIf.htm"&gt;<b><a href="CppIf.htm">if</a></b>&lt;/a&gt;&lt;/b&gt; ( &lt;a href="CppFind.htm"&gt;<a href="CppFind.htm">std::find</a>&lt;/a&gt;(body2.begin(),body2.end(), *i) &lt;a href="CppOperatorNotEqual.htm"&gt;<a href="CppOperatorNotEqual.htm">!=</a>&lt;/a&gt; body2.end() ) &lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppTrue.htm"&gt;<b><a href="CppTrue.htm">true</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppFalse.htm"&gt;<b><a href="CppFalse.htm">false</a></b>&lt;/a&gt;&lt;/b&gt;;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
} &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;~&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; xnz&lt;br/&gt;<br/>
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> end of the code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;<a href="CppMain.htm">main</a>.cpp&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> start of code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;table summary="<a href="CppMain.htm">main</a>.cpp" border <a href="CppOperatorAssign.htm">=</a> "1"&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppStringH.htm"&gt;string&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppIostreamH.htm"&gt;iostream&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppC<a href="CppAssert.htm">assert</a>H.htm"&gt;c<a href="CppAssert.htm">assert</a>&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; "gamexenonzerodialog.h"&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppMain.htm"&gt;<a href="CppMain.htm">main</a>&lt;/a&gt;()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;xenon_zero::XeNonZero s;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppWhile.htm"&gt;<b><a href="CppWhile.htm">while</a></b>&lt;/a&gt;&lt;/b&gt;(!s.IsGameOver())&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="CppCout.htm"&gt;<a href="CppCout.htm">std::cout</a>&lt;/a&gt; &lt;a href="CppOperatorStreamOut.htm"&gt;&amp;lt;&amp;lt;&lt;/a&gt; s &lt;a href="CppOperatorStreamOut.htm"&gt;&amp;lt;&amp;lt;&lt;/a&gt; &lt;a href="CppEndl.htm"&gt;<a href="CppEndl.htm">std::endl</a>&lt;/a&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s.AskUserInputAndProcess();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s.DrawSprites();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppCout.htm"&gt;<a href="CppCout.htm">std::cout</a>&lt;/a&gt; &lt;a href="CppOperatorStreamOut.htm"&gt;&amp;lt;&amp;lt;&lt;/a&gt; "GAME OVER!" &lt;a href="CppOperatorStreamOut.htm"&gt;&amp;lt;&amp;lt;&lt;/a&gt; &lt;a href="CppEndl.htm"&gt;<a href="CppEndl.htm">std::endl</a>&lt;/a&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppCout.htm"&gt;<a href="CppCout.htm">std::cout</a>&lt;/a&gt; &lt;a href="CppOperatorStreamOut.htm"&gt;&amp;lt;&amp;lt;&lt;/a&gt; "Press &lt;a href="CppAny.htm"&gt;<a href="CppAny.htm">any</a>&lt;/a&gt; key to quit." &lt;a href="CppOperatorStreamOut.htm"&gt;&amp;lt;&amp;lt;&lt;/a&gt; &lt;a href="CppEndl.htm"&gt;<a href="CppEndl.htm">std::endl</a>&lt;/a&gt;;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt; temp;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppGetline.htm"&gt;<a href="CppGetline.htm">std::getline</a>&lt;/a&gt;(&lt;a href="CppCin.htm"&gt;<a href="CppCin.htm">std::cin</a>&lt;/a&gt;,temp);&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> end of the code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;qtmain.cpp&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> start of code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;table summary="qtmain.cpp" border <a href="CppOperatorAssign.htm">=</a> "1"&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="Cpp<a href="CppQApplication.htm">QApplication</a>.htm"&gt;<a href="CppQApplication.htm">QApplication</a>&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; "qtxenonzeromaindialog.h"&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppMain.htm"&gt;<a href="CppMain.htm">main</a>&lt;/a&gt;(&lt;b&gt;&lt;a href="CppInt.htm"&gt;<b><a href="CppInt.htm">int</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppArgc.htm"&gt;<a href="CppArgc.htm">argc</a>&lt;/a&gt;, &lt;b&gt;&lt;a href="CppChar.htm"&gt;<b><a href="CppChar.htm">char</a></b>&lt;/a&gt;&lt;/b&gt; *&lt;a href="CppArgc.htm"&gt;<a href="CppArgc.htm">argv</a>&lt;/a&gt;[])&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppQApplication.htm">QApplication</a>.htm"&gt;<a href="CppQApplication.htm">QApplication</a>&lt;/a&gt; a(&lt;a href="CppArgc.htm"&gt;<a href="CppArgc.htm">argc</a>&lt;/a&gt;, &lt;a href="CppArgc.htm"&gt;<a href="CppArgc.htm">argv</a>&lt;/a&gt;);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog d;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;d.show();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppReturn.htm"&gt;<b><a href="CppReturn.htm">return</a></b>&lt;/a&gt;&lt;/b&gt; a.exec();&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> end of the code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;qtxenonzeromaindialog.h&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> start of code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;table summary="qtxenonzeromaindialog.h" border <a href="CppOperatorAssign.htm">=</a> "1"&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;<br/>
&lt;a href="CppIfndef.htm"&gt;<a href="CppIfndef.htm">#ifndef</a>&lt;/a&gt; QTXENONZEROMAINDIALOG_H&lt;br/&gt;<br/>
&lt;a href="CppDefine.htm"&gt;<a href="CppDefine.htm">#define</a>&lt;/a&gt; QTXENONZEROMAINDIALOG_H&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="Cpp<a href="CppBoost.htm">Boost</a>.htm"&gt;<a href="CppBoost.htm">boost</a>&lt;/a&gt;/&lt;a href="CppShared_ptr.htm"&gt;<a href="CppShared_ptr.htm">shared_ptr</a>&lt;/a&gt;.hpp&amp;gt;&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="Cpp<a href="CppQDialog.htm">QDialog</a>.htm"&gt;<a href="CppQDialog.htm">QDialog</a>&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; "gamexenonzerofwd.h"&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppNamespace.htm"&gt;<b><a href="CppNamespace.htm">namespace</a></b>&lt;/a&gt;&lt;/b&gt; Ui {&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppClass.htm"&gt;<b><a href="CppClass.htm">class</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppClass.htm"&gt;<b><a href="CppClass.htm">class</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog : &lt;b&gt;&lt;a href="CppPublic.htm"&gt;<b><a href="CppPublic.htm">public</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppQDialog.htm">QDialog</a>.htm"&gt;<a href="CppQDialog.htm">QDialog</a>&lt;/a&gt;&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppQ_OBJECT.htm">Q_OBJECT</a>.htm"&gt;<a href="CppQ_OBJECT.htm">Q_OBJECT</a>&lt;/a&gt;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppPublic.htm"&gt;<b><a href="CppPublic.htm">public</a></b>&lt;/a&gt;&lt;/b&gt;:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppExplicit.htm"&gt;<b><a href="CppExplicit.htm">explicit</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog(&lt;a href="Cpp<a href="CppQWidget.htm">QWidget</a>.htm"&gt;<a href="CppQWidget.htm">QWidget</a>&lt;/a&gt; *parent &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; 0);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;~&lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppPrivate.htm"&gt;<b><a href="CppPrivate.htm">private</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppSlots.htm"&gt;<b><a href="CppSlots.htm">slots</a></b>&lt;/a&gt;&lt;/b&gt;:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; on_button_a_clicked();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; on_button_d_clicked();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; on_button_e_clicked();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; on_button_s_clicked();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; on_button_space_clicked();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; on_button_w_clicked();&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppPrivate.htm"&gt;<b><a href="CppPrivate.htm">private</a></b>&lt;/a&gt;&lt;/b&gt;:&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppUi.htm"&gt;Ui&lt;/a&gt;::&lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog *ui;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;xnz::Dialog&amp;gt; m_dialog;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt;/Displays the dialog&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; Display(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; xnz::Area&amp;gt; area);&lt;br/&gt;<br/>
};&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppEndif.htm"&gt;<a href="CppEndif.htm">#endif</a>&lt;/a&gt; &lt;a href="CppComment.htm"&gt;<a href="CppComment.htm">//</a>&lt;/a&gt; QTXENONZEROMAINDIALOG_H&lt;br/&gt;<br/>
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> end of the code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;h2&gt;qtxenonzeromaindialog.cpp&lt;/h2&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> start of code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;table summary="qtxenonzeromaindialog.cpp" border <a href="CppOperatorAssign.htm">=</a> "1"&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; "qtxenonzeromaindialog.h"&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; &amp;lt;&lt;a href="CppC<a href="CppAssert.htm">assert</a>H.htm"&gt;c<a href="CppAssert.htm">assert</a>&lt;/a&gt;&amp;gt;&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; "gamexenonzerodialog.h"&lt;br/&gt;<br/>
&lt;a href="CppInclude.htm"&gt;<a href="CppInclude.htm">#include</a>&lt;/a&gt; "ui_qtxenonzeromaindialog.h"&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog::&lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog(&lt;a href="Cpp<a href="CppQWidget.htm">QWidget</a>.htm"&gt;<a href="CppQWidget.htm">QWidget</a>&lt;/a&gt; *parent) :&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="Cpp<a href="CppQDialog.htm">QDialog</a>.htm"&gt;<a href="CppQDialog.htm">QDialog</a>&lt;/a&gt;(parent),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;ui(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="CppUi.htm"&gt;Ui&lt;/a&gt;::&lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog),&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;m_dialog(&lt;b&gt;&lt;a href="CppNew.htm"&gt;<b><a href="CppNew.htm">new</a></b>&lt;/a&gt;&lt;/b&gt; xnz::Dialog)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;ui-&amp;gt;setupUi(&lt;b&gt;&lt;a href="CppThis.htm"&gt;<b><a href="CppThis.htm">this</a></b>&lt;/a&gt;&lt;/b&gt;);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(m_dialog);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;on_button_space_clicked();&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog::~&lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppDelete.htm"&gt;<b><a href="CppDelete.htm">delete</a></b>&lt;/a&gt;&lt;/b&gt; ui;&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog::Display(&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppBoost.htm">Boost</a>Shared_ptr.htm"&gt;<a href="CppBoostShared_ptr.htm">boost::shared_ptr</a>&lt;/a&gt;&amp;lt;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; xnz::Area&amp;gt; area)&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(area);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="CppString.htm"&gt;<a href="CppString.htm">std::string</a>&lt;/a&gt; text;&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppAuto.htm"&gt;<b><a href="CppAuto.htm">auto</a></b>&lt;/a&gt;&lt;/b&gt; v &lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; area-&amp;gt;GetArea();&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;b&gt;&lt;a href="CppFor.htm"&gt;<b><a href="CppFor.htm">for</a></b>&lt;/a&gt;&lt;/b&gt; (&lt;b&gt;&lt;a href="CppConst.htm"&gt;<b><a href="CppConst.htm">const</a></b>&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href="CppAuto.htm"&gt;<b><a href="CppAuto.htm">auto</a></b>&lt;/a&gt;&lt;/b&gt; s: v) { text &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt;&lt;a href="CppOperatorAssign.htm"<a href="CppOperatorGreaterEqual.htm">&gt;=</a>&lt;/a&gt; s &lt;a href="CppOperatorPlus.htm"&gt;+&lt;/a&gt; "\n"; }&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;ui-&amp;gt;text-&amp;gt;setPlainText(text.c_str());&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog::on_button_a_clicked()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(m_dialog);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Display(m_dialog-&amp;gt;ProcessInput(xnz::Dialog::Input::left));&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog::on_button_d_clicked()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(m_dialog);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Display(m_dialog-&amp;gt;ProcessInput(xnz::Dialog::Input::right));&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog::on_button_e_clicked()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(m_dialog);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Display(m_dialog-&amp;gt;ProcessInput(xnz::Dialog::Input::shoot));&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog::on_button_s_clicked()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(m_dialog);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Display(m_dialog-&amp;gt;ProcessInput(xnz::Dialog::Input::down));&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog::on_button_space_clicked()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(m_dialog);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Display(m_dialog-&amp;gt;ProcessInput(xnz::Dialog::Input::space));&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;br/&gt;<br/>
&lt;b&gt;&lt;a href="CppVoid.htm"&gt;<b><a href="CppVoid.htm">void</a></b>&lt;/a&gt;&lt;/b&gt; &lt;a href="Cpp<a href="CppQt.htm">Qt</a>.htm"&gt;<a href="CppQt.htm">Qt</a>&lt;/a&gt;XeNonZeroMainDialog::on_button_w_clicked()&lt;br/&gt;<br/>
{&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;&lt;a href="<a href="CppAssert.htm">CppAssert</a>.htm"&gt;<a href="CppAssert.htm">assert</a>&lt;/a&gt;(m_dialog);&lt;br/&gt;<br/>
&amp;nbsp;&amp;nbsp;Display(m_dialog-&amp;gt;ProcessInput(xnz::Dialog::Input::up));&lt;br/&gt;<br/>
}&lt;br/&gt;<br/>
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<br/>
&lt;!-<a href="CppOperatorMinus.htm">-</a> end of the code <a href="CppOperatorMinus.htm">-</a>-&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&lt;a href="Cpp.htm"&gt;Go back to Richel Bilderbeek's <a href="Cpp.htm">C++</a> page&lt;/a&gt;.&lt;/p&gt;<br/>
&lt;p&gt;&lt;a href="index.htm"&gt;Go back to Richel Bilderbeek's homepage&lt;/a&gt;.&lt;/p&gt;<br/>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br/>
&lt;p&gt;&lt;a href="http://validator.w3.org/check?uri=referer"&gt;&lt;img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" <a href="CppOperatorDivide.htm">/</a>&gt;&lt;/a&gt;&lt;/p&gt;<br/>
&lt;p&gt;This page has been created by the &lt;a href="<a href="Tools.htm">Tools</a>.htm"&gt;<a href="Tools.htm">tool</a>&lt;/a&gt; &lt;a href="<a href="ToolCodeToHtml.htm">ToolCodeToHtml</a>.htm"&gt;<a href="ToolCodeToHtml.htm">CodeToHtml</a>&lt;/a&gt;&lt;/p&gt;<br/>
&lt;/body&gt;<br/>
&lt;/html&gt;<br/>
</code></td></tr></table>
<!-- end of the code -->
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><a href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>
<p><a href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>
<p>&nbsp;</p>
<p><a href="http://validator.w3.org/check?uri=referer"><img src="valid-xhtml10.png" alt="Valid XHTML 1.0 Strict" height="31" width="88" /></a></p>
<p>This page has been created by the <a href="Tools.htm">tool</a> <a href="ToolCodeToHtml.htm">CodeToHtml</a></p>
</body>
</html>
