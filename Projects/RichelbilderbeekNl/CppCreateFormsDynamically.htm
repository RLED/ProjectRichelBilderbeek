 
<title>Create Form Dynamically</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>C++ Code Snippet Create Form Dynamically</o:Subject>
  <o:Author>Richel Bilderbeek</o:Author>
  <o:Keywords>C++ Code Snippet Richel Bilderbeek Create Form Dynamically TForm VCL Builder CLX Turbo</o:Keywords>
  <o:Description>From http://www.richelbilderbeek.nl</o:Description>
  <o:LastAuthor>Richel Bilderbeek</o:LastAuthor>
  <o:Revision>9</o:Revision>
  <o:TotalTime>148</o:TotalTime>
  <o:Created>2007-12-31T11:25:00Z</o:Created>
  <o:LastSaved>2007-12-31T11:35:00Z</o:LastSaved>
  <o:Pages>3</o:Pages>
  <o:Words>561</o:Words>
  <o:Characters>3201</o:Characters>
  <o:Category>C++ Code Snippet Richel Bilderbeek Create Form Dynamically</o:Category>
  <o:Manager>Richel Bilderbeek</o:Manager>
  <o:Company>Richel Bilderbeek</o:Company>
  <o:Lines>26</o:Lines>
  <o:Paragraphs>6</o:Paragraphs>
  <o:CharactersWithSpaces>3931</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 
 
 
 
 
 
 
 
 
 
 
 
-->
</style>
</head>

 

 

<p><a
href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>

<p><a
href="CppCodeSnippets.htm">Go back to Richel Bilderbeek's Code Snippets</a>.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><b><span lang=NL style='font-size:16.0pt;mso-bidi-font-family:
"Courier New";mso-font-kerning:16.0pt'>Create Forms Dynamically  </b></p>

<p>&nbsp;</p>

<p>The
C++ Builder (and Turbo C++) TForm class ('Form' from now on) can be created
either statically or dynamically.</p>

<p>* <a
href="CppCreateFormsDynamically.txt">View the code of 'Create Forms
Dynamically' in plain text</a>.</p>

<p>&nbsp;</p>

<h2><a name="_Toc186867867"> Page overview</a></h2>

<p>&nbsp;</p>

<p class=MsoToc2 style='tab-stops:right dotted 431.5pt'><!--[if supportFields]> <span style='mso-element:
field-begin'>    TOC \o
&quot;1-3&quot; \n \h \z <span style='mso-element:field-separator'>  <![endif]--><span
class=MsoHyperlink> <a href="#_Toc186867867">Page overview</a> <span
style='font-family:"Times New Roman";mso-ansi-language:EN-US'></p>

<p class=MsoToc2 style='tab-stops:right dotted 431.5pt'><span
class=MsoHyperlink> <a href="#_Toc186867868">When to consider
creating Forms dynamically</a> <span style='font-family:"Times New Roman";
mso-ansi-language:EN-US'></p>

<p class=MsoToc2 style='tab-stops:right dotted 431.5pt'><span
class=MsoHyperlink> <a href="#_Toc186867869">Do's and don'ts when
creating Forms dynamically</a> <span style='font-family:"Times New Roman";
mso-ansi-language:EN-US'></p>

<p class=MsoToc2 style='tab-stops:right dotted 431.5pt'><span
class=MsoHyperlink> <a href="#_Toc186867870">How to create a Form
dynamically</a> <span style='font-family:"Times New Roman";
mso-ansi-language:EN-US'></p>

<p class=MsoToc2 style='tab-stops:right dotted 431.5pt'><span
class=MsoHyperlink> <a href="#_Toc186867871">Communicate with the
creator of a Form</a> <span style='font-family:"Times New Roman";
mso-ansi-language:EN-US'></p>

<p class=MsoToc3 style='tab-stops:right dotted 431.5pt'><span
class=MsoHyperlink> <a href="#_Toc186867872">Communicate with the
creator of a Form in the constructor only</a> <span
style='font-family:"Times New Roman";mso-ansi-language:EN-US'></p>

<p class=MsoToc3 style='tab-stops:right dotted 431.5pt'><span
class=MsoHyperlink> <a href="#_Toc186867873">Communicate with the
creator of a Form using a member variable</a> <span
style='font-family:"Times New Roman";mso-ansi-language:EN-US'></p>

<p><!--[if supportFields]> <span style='mso-element:field-end'>  <![endif]-->  &nbsp;</p>

<h2><a name="_Toc186867868"> When to consider creating Forms
dynamically</a></h2>

<p>&nbsp;</p>

<p>Consider
creating Forms dynamically when:</p>

<p>*
you want to create multiple instances of the same Form</p>

<p>*
you've added additional constructor parameters</p>

<p>*
you want to have a hierarchy in your Forms</p>

<p>* you
want to create Forms one by one</p>

<p>* you
want to create Forms in idle time</p>

<p>* you
want Forms to be created by a seperate thread</p>

<p>&nbsp;</p>

<h2><a name="_Toc186867869"> Do's and don'ts when creating Forms
dynamically</a></h2>

<p>&nbsp;</p>

<p>When
you want to dynamically create a Form</p>

<p>*
do make it an 'Available Form' ('Project | Options | Forms'),</p>

<p>  instead of an automatically created Form</p>

<p>*
do make a Form refer to itself as 'this',</p>

<p>  instead of using, for example 'Form1'.</p>

<p>&nbsp;</p>

<h2><a name="_Toc186867870"> How to create a Form dynamically</a></h2>

<p>&nbsp;</p>

<p>A
Form can be created dynamically as follows:</p>

<p>&nbsp;</p>

 

<p>//Put this line among the other
#includes</p>

<p>#include &lt;memory&gt;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>//Your method</p>

<p><b> void __fastcall </b>  TFormMain::YourMethod()</p>

<p>{</p>

<p>
 std::auto_ptr&lt;TFormDynamic&gt; f(<b>new</b> TFormDynamic(<b>this</b>));</p>

<p>
 f-&gt;ShowModal();</p>

<p>}</p>

</div>

<p>&nbsp;</p>

<p>Sure
you can use a plain pointer, but then don't forget to delete it. And if you
don't want to forget to delete this pointer (among others), use a
std::auto_ptr.</p>

<p>&nbsp;</p>

<p>Instead
of passing '<b>this</b>', you might sometimes consider passing '0' as an
argument to the constructor of TFormDynamic.</p>

<p>&nbsp;</p>

<h2><a name="_Toc186867871"> Communicate with the creator of a
Form</a></h2>

<p>&nbsp;</p>

<p>In
the code snippet above, the Form called TFormDynamic is constructed using a
pointer to the TFormMain Form. This enables the newly created TFormDynamic to
be potentially able to communicate with the TFormMain.</p>

<p>&nbsp;</p>

<h3><a name="_Toc186867872"> Communicate with the creator of a
Form in the constructor only</a></h3>

<p>&nbsp;</p>

<p>The
constructor of a Form takes as an argument the TComponent that has created it.
Therefore, you can easily use it locally:</p>

<p>&nbsp;</p>

 

<p>//Put this line among the other
#includes</p>

<p>#include &lt;cassert&gt;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>__<b>fastcall</b>
TFormDynamic::TFormDynamic(TComponent* Owner)</p>

<p>       : TForm(Owner)</p>

<p>{</p>

<p>
 TFormMain * <b>const</b> formMain = <b>dynamic_cast</b>&lt;TFormMain&gt;(Owner);</p>

<p>
 assert(formMain!=0); //Assume cast succeeded</p>

<p>&nbsp;</p>

<p>
 //Use formMain</p>

<p>}</p>

</div>

<p>&nbsp;</p>

<h3><a name="_Toc186867873"> Communicate with the creator of a
Form using a member variable</a></h3>

<p>&nbsp;</p>

<p>You
can also make the TFormMain pointer a member variable of TFormDynamic:</p>

<p>&nbsp;</p>

 

<p>//The file UnitFormDynamic.h</p>

<p>&nbsp;</p>

<p>//A forward declaration</p>

<p>//Put it after the #includes and
before the next line</p>

<p><b> class </b>  TFormMain;</p>

<p>&nbsp;</p>

<p><b> class </b>  TFormDynamic : <b>public</b> TForm</p>

<p>{</p>

<p>
 __<b>published</b>:<span style='mso-tab-count:1'>  // IDE-managed
Components</p>

<p> 
 //Stuff</p>

<p>
 <b>private</b>:<span style='mso-tab-count:1'>     // User
declarations</p>

<p> 
 TFormMain * <b>const</b> mFormMain;</p>

<p>
 <b>public</b>:<span style='mso-tab-count:2'>      // User
declarations</p>

<p>       __<b>fastcall</b> TFormDynamic(TComponent* Owner);</p>

<p>};</p>

</div>

<p>&nbsp;</p>

 

<p>//The file UnitFormDynamic.cpp</p>

<p>&nbsp;</p>

<p>//Put this line among the other
#includes</p>

<p>#include &lt;cassert&gt;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>__<b>fastcall</b>
TFormDynamic::TFormDynamic(TComponent* Owner)</p>

<p>
 : TForm(Owner),</p>

<p> 
 mFormMain(<b>dynamic_cast</b>&lt;TFormMain&gt;(Owner)</p>

<p>{</p>

<p>
 assert(mFormMain!=0); //Assume cast succeeded</p>

<p>&nbsp;</p>

<p>
 //Use mFormMain</p>

<p>}</p>

</div>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><a
href="CppCodeSnippets.htm">Go back to Richel Bilderbeek's Code Snippets</a>.</p>

<p><a
href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>

<p>&nbsp;</p>

</div>

</body>

</html>
