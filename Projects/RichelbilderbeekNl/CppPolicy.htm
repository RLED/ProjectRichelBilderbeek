 
<title>Policy</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>C++ Policy</o:Subject>
  <o:Author>Richel Bilderbeek</o:Author>
  <o:Keywords>C++ Richel Bilderbeek Policy</o:Keywords>
  <o:Description>From http://www.richelbilderbeek.nl</o:Description>
  <o:LastAuthor>Richel Bilderbeek</o:LastAuthor>
  <o:Revision>16</o:Revision>
  <o:TotalTime>212</o:TotalTime>
  <o:Created>2010-01-03T02:43:00Z</o:Created>
  <o:LastSaved>2010-02-05T15:18:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>422</o:Words>
  <o:Characters>2411</o:Characters>
  <o:Category>C++ Richel Bilderbeek Policy</o:Category>
  <o:Manager>Richel Bilderbeek</o:Manager>
  <o:Company>Richel Bilderbeek</o:Company>
  <o:Lines>20</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2960</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 /* List Definitions */
@list l0
	{mso-list-id:1941837107;
	mso-list-type:hybrid;
	mso-list-template-ids:74638006 280771366 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
 @list l0:level2
	{mso-level-number-format:alpha-lower;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
 
-->
</style>
</head>

 

 

<p><a
href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>

<p><a
href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h1><a name="_Toc194762537"></a><a name="_Toc198191045"><span style='mso-bookmark:
_Toc194762537'> (</a><a
href="Cpp.htm"><span style='mso-bookmark:_Toc198191045'><span style='mso-bookmark:
_Toc194762537'> C++   <span
style='mso-bookmark:_Toc198191045'><span style='mso-bookmark:_Toc194762537'></a><span
style='mso-bookmark:_Toc198191045'><span style='mso-bookmark:_Toc194762537'> )    <a
href="CppPolicy.htm"><span style='mso-bookmark:_Toc194762537'> <span
style='mso-bookmark:_Toc198191045'>  Policy</a></h1>

<p>&nbsp;</p>

<p>A <a href="CppPolicy.htm"> policy</a> is a <a
href="CppClass.htm">class</a> behaviour set at compile-time.</p>

<p>&nbsp;</p>

<p>A <a href="CppPolicy.htm"> policy</a> consts of a <a
href="CppHostClass.htm">host class</a> and <a href="CppPolicyClass.htm">policy
classes</a>. The user of a <a href="CppPolicy.htm"> policy</a> chooses which <a href="CppPolicyClass.htm">policy
class</a> is used, by template.</p>

<p>&nbsp;</p>

<p>A <a href="CppPolicyClass.htm">policy class</a>
is a <a href="CppBaseClass.htm">b ase
class</a>. All <a href="CppBaseClass.htm"> base class</a> <a href="CppDestructor.htm">destructors</a> should be <a
href="CppPublic.htm">public</a> and <a href="CppVirtual.htm">virtual</a>, or <a
href="CppProtected.htm">protected</a> and non<a href="CppVirtual.htm">virtual</a>'
<span style='mso-field-code:"REF _Ref202766402 \\r \\h"'>[0]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200300032003700360036003400300032000000</w:data>
</xml><![endif]--> .   The <a href="CppDestructor.htm">destructor</a>
of a <a href="CppPolicyClass.htm">policy class</a> should be <a
href="CppProtected.htm">protected</a> and non<a href="CppVirtual.htm">virtual</a>
<span style='mso-field-code:"REF _Ref253149206 \\r \\h"'>[1]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200350033003100340039003200300036000000</w:data>
</xml><![endif]--> .</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h2>Example</h2>

<p>&nbsp;</p>

<p>During debugging, you might want to trace
(keep track of) variables.</p>

<p>Sometimes, you might want to write it to <a
href="CppCout.htm">std::cout</a>, file or other ways.</p>

<p>The example below shows a Tracer <a
href="CppClass.htm">class</a>, whose behavior is set at compile-time.</p>

<p>&nbsp;</p>

 

<p>&nbsp;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;<a href="CppIostreamH.htm">iostream</a>&gt;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;<a href="CppFstreamH.htm">fstream</a>&gt;</p>

<p><a href="CppInclude.htm">#include</a>
&lt;<a href="CppStringH.htm">string</a>&gt;</p>

<p>&nbsp;</p>

<p><b> <a href="CppTemplate.htm">template</a> </b>  &lt;<b><a
href="CppTypename.htm">typename</a></b> OutputPolicy&gt;</p>

<p><b> <a href="CppStruct.htm">struct</a> </b>  Tracer : <b><a
href="CppPublic.htm">public</a></b> OutputPolicy</p>

<p>{</p>

<p>&nbsp;</p>

<p>};</p>

<p>&nbsp;</p>

<p><b> <a href="CppStruct.htm">struct</a> </b>  OutputPolicyCout</p>

<p>{</p>

<p>
 <b><a href="CppVoid.htm">void</a></b> Trace(<b><a href="CppConst.htm">const</a></b>
<a href="CppString.htm">std::string</a>&amp; s)</p>

<p>
 {</p>

<p> 
 <a href="CppCout.htm">std::cout</a> &lt;&lt; s &lt;&lt; '\n';</p>

<p>
 }</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppProtected.htm">protected</a></b>:</p>

<p>
 ~OutputPolicyCout()</p>

<p>
 {</p>

<p> 
 //  The <a href="CppDestructor.htm">destructor</a> of
a <a href="CppPolicy.htm"> policy</a>
class should be <a href="CppProtected.htm">protected</a> and non-<a
href="CppVirtual.htm">virtual</a> <span style='mso-field-code:"REF _Ref253149206 \\r \\h"'>[1]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200350033003100340039003200300036000000</w:data>
</xml><![endif]--> .</p>

<p>
 }  </p>

<p>};</p>

<p>&nbsp;</p>

<p><b> <a href="CppStruct.htm">struct</a> </b>  OutputPolicyFile</p>

<p>{</p>

<p>
 OutputPolicyFile() : m_file(&quot;Trace.txt&quot;)</p>

<p>
 {</p>

<p>&nbsp;</p>

<p>
 }</p>

<p>
 <b><a href="CppVoid.htm">void</a></b> Trace(<b><a href="CppConst.htm">const</a></b>
<a href="CppString.htm">std::string</a>&amp; s)</p>

<p>
 {</p>

<p> 
 m_file &lt;&lt; s &lt;&lt; '\n';</p>

<p>
 }</p>

<p>
 <a href="CppOfstream.htm">std::ofstream</a> m_file;</p>

<p>&nbsp;</p>

<p>
 <b><a href="CppProtected.htm">protected</a></b>:</p>

<p>
 ~OutputPolicyFile()</p>

<p>
 {</p>

<p> 
 //  The <a href="CppDestructor.htm">destructor</a> of
a <a href="CppPolicy.htm"> policy</a>
class should be <a href="CppProtected.htm">protected</a> and non-<a
href="CppVirtual.htm">virtual</a> <span style='mso-field-code:"REF _Ref253149206 \\r \\h"'>[1]<!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003200350033003100340039003200300036000000</w:data>
</xml><![endif]--> .</p>

<p>
 }  </p>

<p>};</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><b> <a href="CppInt.htm">int</a> </b>  <a href="CppMain.htm">main</a>()</p>

<p>{</p>

<p>
 Tracer&lt;OutputPolicyCout&gt; p1;</p>

<p>
 Tracer&lt;OutputPolicyFile&gt; p2;</p>

<p>
 p1.Trace(&quot;x&quot;);</p>

<p>
 p2.Trace(&quot;x&quot;);</p>

<p>}</p>

<p>&nbsp;</p>

</div>

<p>&nbsp;</p>

<p>In
this example, Tracer is the <a href="CppHostClass.htm">host class</a>, where OutputPolicyCout
and OutputPolicyFile are <a href="CppPolicyClass.htm">policy classes</a>.</p>

<p>&nbsp;</p>

<p>Note
that p1 and p2 have types as different as <a href="CppVector.htm">std::vectors</a>
with different elements.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h2><a href="CppReferences.htm">References</a></h2>

  <li><a href="CppHerbSutter.htm">  Herb
Sutter    , <a href="CppAndreiAlexandrescu.htm">Andrei Alexandrescu</a>. C++ coding standards: 101 rules, guidelines, and best
practices. ISBN: 0-32-111358-6. Item 50: 'Make base class destructors public
and virtual, or protected and nonvirtual'.</p>

<p><a name="_Ref253149206">  [1] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</a><a href="CppAndreiAlexandrescu.htm"><span
style='mso-bookmark:_Ref253149206'> Andrei Alexandrescu  <span style='mso-bookmark:_Ref253149206'></a><span
style='mso-bookmark:_Ref253149206'> . Modern C++ Design. 2001. ISBN: 0201704315.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><a
href="Cpp.htm">Go back to Richel Bilderbeek's C++ page</a>.</p>

<p><a
href="index.htm">Go back to Richel Bilderbeek's homepage</a>.</p>

<p>&nbsp;</p>

</div>

</body>

</html>
