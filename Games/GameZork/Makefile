#############################################################################
# Makefile for building: Zork
# Generated by qmake (2.01a) (Qt 4.6.3) on: Sat Nov 13 18:02:56 2010
# Project:  Zork.pro
# Template: app
# Command: /home/richel/qtsdk-2010.04/qt/bin/qmake -spec ../../../../qt/mkspecs/linux-g++ -unix -o Makefile Zork.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = gcc
DEFINES       = -DQT_NO_DEBUG -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -x c -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I../../../../qt/mkspecs/linux-g++ -I. -I../../../../qt/include/QtCore -I../../../../qt/include -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,-rpath,/home/richel/qtsdk-2010.04/qt/lib
LIBS          = $(SUBLIBS)  -L/home/richel/qtsdk-2010.04/qt/lib -L/usr/lib -lcurses -ltermcap -lQtCore -L/home/richel/qtsdk-2010.04/qt/lib -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /home/richel/qtsdk-2010.04/qt/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = DMAIN.C \
		VERBS.C \
		VILLNS.C \
		SOBJS.C \
		SVERBS.C \
		ROOMS.C \
		OBJCTS.C \
		NP3.C \
		NROOMS.C \
		NP2.C \
		NP1.C \
		NP.C \
		NOBJS.C \
		LIGHTP.C \
		LOCAL.C \
		GDT.C \
		DVERB1.C \
		DVERB2.C \
		DSUB.C \
		DSO7.C \
		DSO6.C \
		DSO5.C \
		DSO4.C \
		DSO3.C \
		DSO2.C \
		DEMONS.C \
		DSO1.C \
		DINIT.C \
		DGAME.C \
		ACTORS.C \
		CLOCKR.C \
		BALLOP.C \
		SUPP.C 
OBJECTS       = DMAIN.o \
		VERBS.o \
		VILLNS.o \
		SOBJS.o \
		SVERBS.o \
		ROOMS.o \
		OBJCTS.o \
		NP3.o \
		NROOMS.o \
		NP2.o \
		NP1.o \
		NP.o \
		NOBJS.o \
		LIGHTP.o \
		LOCAL.o \
		GDT.o \
		DVERB1.o \
		DVERB2.o \
		DSUB.o \
		DSO7.o \
		DSO6.o \
		DSO5.o \
		DSO4.o \
		DSO3.o \
		DSO2.o \
		DEMONS.o \
		DSO1.o \
		DINIT.o \
		DGAME.o \
		ACTORS.o \
		CLOCKR.o \
		BALLOP.o \
		SUPP.o
DIST          = ../../../../qt/mkspecs/common/g++.conf \
		../../../../qt/mkspecs/common/unix.conf \
		../../../../qt/mkspecs/common/linux.conf \
		../../../../qt/mkspecs/qconfig.pri \
		../../../../qt/mkspecs/features/qt_functions.prf \
		../../../../qt/mkspecs/features/qt_config.prf \
		../../../../qt/mkspecs/features/exclusive_builds.prf \
		../../../../qt/mkspecs/features/default_pre.prf \
		../../../../qt/mkspecs/features/release.prf \
		../../../../qt/mkspecs/features/default_post.prf \
		../../../../qt/mkspecs/features/warn_on.prf \
		../../../../qt/mkspecs/features/qt.prf \
		../../../../qt/mkspecs/features/unix/thread.prf \
		../../../../qt/mkspecs/features/moc.prf \
		../../../../qt/mkspecs/features/resources.prf \
		../../../../qt/mkspecs/features/uic.prf \
		../../../../qt/mkspecs/features/yacc.prf \
		../../../../qt/mkspecs/features/lex.prf \
		../../../../qt/mkspecs/features/include_source_dir.prf \
		Zork.pro
QMAKE_TARGET  = Zork
DESTDIR       = 
TARGET        = Zork

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Zork.pro  ../../../../qt/mkspecs/linux-g++/qmake.conf ../../../../qt/mkspecs/common/g++.conf \
		../../../../qt/mkspecs/common/unix.conf \
		../../../../qt/mkspecs/common/linux.conf \
		../../../../qt/mkspecs/qconfig.pri \
		../../../../qt/mkspecs/features/qt_functions.prf \
		../../../../qt/mkspecs/features/qt_config.prf \
		../../../../qt/mkspecs/features/exclusive_builds.prf \
		../../../../qt/mkspecs/features/default_pre.prf \
		../../../../qt/mkspecs/features/release.prf \
		../../../../qt/mkspecs/features/default_post.prf \
		../../../../qt/mkspecs/features/warn_on.prf \
		../../../../qt/mkspecs/features/qt.prf \
		../../../../qt/mkspecs/features/unix/thread.prf \
		../../../../qt/mkspecs/features/moc.prf \
		../../../../qt/mkspecs/features/resources.prf \
		../../../../qt/mkspecs/features/uic.prf \
		../../../../qt/mkspecs/features/yacc.prf \
		../../../../qt/mkspecs/features/lex.prf \
		../../../../qt/mkspecs/features/include_source_dir.prf \
		/home/richel/qtsdk-2010.04/qt/lib/libQtCore.prl
	$(QMAKE) -spec ../../../../qt/mkspecs/linux-g++ -unix -o Makefile Zork.pro
../../../../qt/mkspecs/common/g++.conf:
../../../../qt/mkspecs/common/unix.conf:
../../../../qt/mkspecs/common/linux.conf:
../../../../qt/mkspecs/qconfig.pri:
../../../../qt/mkspecs/features/qt_functions.prf:
../../../../qt/mkspecs/features/qt_config.prf:
../../../../qt/mkspecs/features/exclusive_builds.prf:
../../../../qt/mkspecs/features/default_pre.prf:
../../../../qt/mkspecs/features/release.prf:
../../../../qt/mkspecs/features/default_post.prf:
../../../../qt/mkspecs/features/warn_on.prf:
../../../../qt/mkspecs/features/qt.prf:
../../../../qt/mkspecs/features/unix/thread.prf:
../../../../qt/mkspecs/features/moc.prf:
../../../../qt/mkspecs/features/resources.prf:
../../../../qt/mkspecs/features/uic.prf:
../../../../qt/mkspecs/features/yacc.prf:
../../../../qt/mkspecs/features/lex.prf:
../../../../qt/mkspecs/features/include_source_dir.prf:
/home/richel/qtsdk-2010.04/qt/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec ../../../../qt/mkspecs/linux-g++ -unix -o Makefile Zork.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Zork1.0.0 || $(MKDIR) .tmp/Zork1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Zork1.0.0/ && $(COPY_FILE) --parents vars.h parse.h parse.h vars.h funcs.h .tmp/Zork1.0.0/ && $(COPY_FILE) --parents DMAIN.C VERBS.C VILLNS.C SOBJS.C SVERBS.C ROOMS.C OBJCTS.C NP3.C NROOMS.C NP2.C NP1.C NP.C NOBJS.C LIGHTP.C LOCAL.C GDT.C DVERB1.C DVERB2.C DSUB.C DSO7.C DSO6.C DSO5.C DSO4.C DSO3.C DSO2.C DEMONS.C DSO1.C DINIT.C DGAME.C ACTORS.C CLOCKR.C BALLOP.C SUPP.C .tmp/Zork1.0.0/ && (cd `dirname .tmp/Zork1.0.0` && $(TAR) Zork1.0.0.tar Zork1.0.0 && $(COMPRESS) Zork1.0.0.tar) && $(MOVE) `dirname .tmp/Zork1.0.0`/Zork1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Zork1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

DMAIN.o: DMAIN.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DMAIN.o DMAIN.C

VERBS.o: VERBS.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o VERBS.o VERBS.C

VILLNS.o: VILLNS.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o VILLNS.o VILLNS.C

SOBJS.o: SOBJS.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SOBJS.o SOBJS.C

SVERBS.o: SVERBS.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SVERBS.o SVERBS.C

ROOMS.o: ROOMS.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ROOMS.o ROOMS.C

OBJCTS.o: OBJCTS.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o OBJCTS.o OBJCTS.C

NP3.o: NP3.C funcs.h \
		vars.h \
		parse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NP3.o NP3.C

NROOMS.o: NROOMS.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NROOMS.o NROOMS.C

NP2.o: NP2.C funcs.h \
		vars.h \
		parse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NP2.o NP2.C

NP1.o: NP1.C funcs.h \
		vars.h \
		parse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NP1.o NP1.C

NP.o: NP.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NP.o NP.C

NOBJS.o: NOBJS.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NOBJS.o NOBJS.C

LIGHTP.o: LIGHTP.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o LIGHTP.o LIGHTP.C

LOCAL.o: LOCAL.C funcs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o LOCAL.o LOCAL.C

GDT.o: GDT.C funcs.h \
		vars.h \
		parse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GDT.o GDT.C

DVERB1.o: DVERB1.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DVERB1.o DVERB1.C

DVERB2.o: DVERB2.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DVERB2.o DVERB2.C

DSUB.o: DSUB.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DSUB.o DSUB.C

DSO7.o: DSO7.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DSO7.o DSO7.C

DSO6.o: DSO6.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DSO6.o DSO6.C

DSO5.o: DSO5.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DSO5.o DSO5.C

DSO4.o: DSO4.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DSO4.o DSO4.C

DSO3.o: DSO3.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DSO3.o DSO3.C

DSO2.o: DSO2.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DSO2.o DSO2.C

DEMONS.o: DEMONS.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DEMONS.o DEMONS.C

DSO1.o: DSO1.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DSO1.o DSO1.C

DINIT.o: DINIT.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DINIT.o DINIT.C

DGAME.o: DGAME.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DGAME.o DGAME.C

ACTORS.o: ACTORS.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ACTORS.o ACTORS.C

CLOCKR.o: CLOCKR.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CLOCKR.o CLOCKR.C

BALLOP.o: BALLOP.C funcs.h \
		vars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BALLOP.o BALLOP.C

SUPP.o: SUPP.C funcs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SUPP.o SUPP.C

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

